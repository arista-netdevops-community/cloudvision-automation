{
	"info": {
		"_postman_id": "dea5820e-0b5a-4a66-9526-0ed5223ed921",
		"name": "CloudVision REST APIs",
		"description": "REST APIs for CloudVision Cluster Management and Network Provisioning.\n\n## Migration to Resource APIs\n\nCloudVision is migrating to state-based APIs supporting read, write, and subscribe operations for all cluster management, network provisioning, and network telemetry information. These APIs are exposed over gRPC and websocket endpoints, as well as as REST endpoints over HTTPS.\n\nAPIs with Resource API alternatives available are called out below.\n\n## API Deprecation Process\n\nCloudVision's APIs are versioned and supported across release trains.\n\nAPIs are marked as deprecated at least one major release train prior to removal, with instructions on the alternative API to use. Deprecated APIs are explicitely called out below.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21587893"
	},
	"item": [
		{
			"name": "aaa",
			"item": [
				{
					"name": "Create server settings for a server type.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ipAddress\": \"occaecat aliqua reprehenderit\",\n  \"serverType\": \"esse cupidatat aliquip\",\n  \"secret\": \"sint laborum velit esse laboris\",\n  \"createdDateInLongFormat\": 62611316,\n  \"authMode\": \"veniam elit aliquip commodo\",\n  \"accountPort\": -6280075,\n  \"port\": -31798968,\n  \"status\": \"consequat ut\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aaa/createServer.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aaa",
								"createServer.do"
							]
						},
						"description": "This is a proxy service that create server settings for a server type."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"occaecat aliqua reprehenderit\",\n  \"serverType\": \"esse cupidatat aliquip\",\n  \"secret\": \"sint laborum velit esse laboris\",\n  \"createdDateInLongFormat\": 62611316,\n  \"authMode\": \"veniam elit aliquip commodo\",\n  \"accountPort\": -6280075,\n  \"port\": -31798968,\n  \"status\": \"consequat ut\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/createServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"createServer.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"success\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"occaecat aliqua reprehenderit\",\n  \"serverType\": \"esse cupidatat aliquip\",\n  \"secret\": \"sint laborum velit esse laboris\",\n  \"createdDateInLongFormat\": 62611316,\n  \"authMode\": \"veniam elit aliquip commodo\",\n  \"accountPort\": -6280075,\n  \"port\": -31798968,\n  \"status\": \"consequat ut\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/createServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"createServer.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"do qui\",\n  \"errorMessage\": \"officia\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"occaecat aliqua reprehenderit\",\n  \"serverType\": \"esse cupidatat aliquip\",\n  \"secret\": \"sint laborum velit esse laboris\",\n  \"createdDateInLongFormat\": 62611316,\n  \"authMode\": \"veniam elit aliquip commodo\",\n  \"accountPort\": -6280075,\n  \"port\": -31798968,\n  \"status\": \"consequat ut\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/createServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"createServer.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"occaecat aliqua reprehenderit\",\n  \"serverType\": \"esse cupidatat aliquip\",\n  \"secret\": \"sint laborum velit esse laboris\",\n  \"createdDateInLongFormat\": 62611316,\n  \"authMode\": \"veniam elit aliquip commodo\",\n  \"accountPort\": -6280075,\n  \"port\": -31798968,\n  \"status\": \"consequat ut\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/createServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"createServer.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "Delete server settings.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"dolore proi\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aaa/deleteServer.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aaa",
								"deleteServer.do"
							]
						},
						"description": "This is a proxy service that deletes server settings."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/deleteServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"deleteServer.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"success\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/deleteServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"deleteServer.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"aliquip\",\n  \"errorMessage\": \"pariatur in est ullamco sit\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/deleteServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"deleteServer.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/deleteServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"deleteServer.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "Edit server settings for a server type.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ipAddress\": \"laborum Duis nostrud officia non\",\n  \"key\": \"Ut veniam sint\",\n  \"serverType\": \"ut nisi cupidatat\",\n  \"secret\": \"enim eiusmod\",\n  \"createdDateInLongFormat\": 58916420,\n  \"authMode\": \"voluptate eu\",\n  \"accountPort\": 87259414,\n  \"port\": 17228550,\n  \"status\": \"aute qui elit Excepteur\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aaa/editServer.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aaa",
								"editServer.do"
							]
						},
						"description": "This is a proxy service that updates server settings for a server type."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"laborum Duis nostrud officia non\",\n  \"key\": \"Ut veniam sint\",\n  \"serverType\": \"ut nisi cupidatat\",\n  \"secret\": \"enim eiusmod\",\n  \"createdDateInLongFormat\": 58916420,\n  \"authMode\": \"voluptate eu\",\n  \"accountPort\": 87259414,\n  \"port\": 17228550,\n  \"status\": \"aute qui elit Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/editServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"editServer.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"success\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"laborum Duis nostrud officia non\",\n  \"key\": \"Ut veniam sint\",\n  \"serverType\": \"ut nisi cupidatat\",\n  \"secret\": \"enim eiusmod\",\n  \"createdDateInLongFormat\": 58916420,\n  \"authMode\": \"voluptate eu\",\n  \"accountPort\": 87259414,\n  \"port\": 17228550,\n  \"status\": \"aute qui elit Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/editServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"editServer.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"commodo in\",\n  \"errorMessage\": \"Ut qui\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"laborum Duis nostrud officia non\",\n  \"key\": \"Ut veniam sint\",\n  \"serverType\": \"ut nisi cupidatat\",\n  \"secret\": \"enim eiusmod\",\n  \"createdDateInLongFormat\": 58916420,\n  \"authMode\": \"voluptate eu\",\n  \"accountPort\": 87259414,\n  \"port\": 17228550,\n  \"status\": \"aute qui elit Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/editServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"editServer.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"laborum Duis nostrud officia non\",\n  \"key\": \"Ut veniam sint\",\n  \"serverType\": \"ut nisi cupidatat\",\n  \"secret\": \"enim eiusmod\",\n  \"createdDateInLongFormat\": 58916420,\n  \"authMode\": \"voluptate eu\",\n  \"accountPort\": 87259414,\n  \"port\": 17228550,\n  \"status\": \"aute qui elit Excepteur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/editServer.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"editServer.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get AAADetails by id.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aaa/getAAADetailsById.do?id=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aaa",
								"getAAADetailsById.do"
							],
							"query": [
								{
									"key": "id",
									"value": "dolore proi",
									"description": "(Required) The phrase that is to be searched on the AAADetails id"
								}
							]
						},
						"description": "This is a proxy service that returns AAADetails based on it's id."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getAAADetailsById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getAAADetailsById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"factoryId\": 89338451,\n  \"authenticationServerType\": \"sunt incididunt enim cupidatat\",\n  \"authorizationServerType\": \"ad\",\n  \"key\": \"velit Ut\",\n  \"id\": 96602586\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getAAADetailsById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getAAADetailsById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eiusmod id mollit quis\",\n  \"errorMessage\": \"cillum sint proident culpa labore\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getAAADetailsById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getAAADetailsById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getAAADetailsById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getAAADetailsById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get server details based on its id.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aaa/getServerById.do?id=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aaa",
								"getServerById.do"
							],
							"query": [
								{
									"key": "id",
									"value": "dolore proi",
									"description": "(Required) Holds the phrase that is the key for AAAServer entry"
								}
							]
						},
						"description": "This is a proxy service that returns server details based on its id."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getServerById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getServerById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ipAddress\": \"fugiat\",\n  \"userId\": \"minim\",\n  \"factoryId\": -79550037,\n  \"serverType\": \"dolore\",\n  \"secret\": \"aliqua id sit\",\n  \"createdDateInLongFormat\": 83582900,\n  \"authMode\": \"enim irure do ea\",\n  \"accountPort\": -52957468,\n  \"liveStatus\": \"id laborum \",\n  \"status\": \"Excepteu\",\n  \"key\": \"et\",\n  \"id\": 38765871,\n  \"port\": 40846701\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getServerById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getServerById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eiusmod id mollit quis\",\n  \"errorMessage\": \"cillum sint proident culpa labore\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getServerById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getServerById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getServerById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getServerById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get a list of servers for a server type.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aaa/getServers.do?serverType=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aaa",
								"getServers.do"
							],
							"query": [
								{
									"key": "serverType",
									"value": "dolore proi",
									"description": "(Required) Holds server type to for which servers will be fetched"
								},
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "Holds the phrase that is to be searched on the properties of each server settings data"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Holds the starting value of the results to be paginated."
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Holds the end value of the results to be paginated"
								}
							]
						},
						"description": "This is a proxy service that retrieves a list of servers for a server type."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getServers.do?serverType=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getServers.do"
									],
									"query": [
										{
											"key": "serverType",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 68004420,\n  \"aaaServers\": [\n    {\n      \"ipAddress\": \"do aliquip vo\",\n      \"userId\": \"nostrud sit dolore ex\",\n      \"factoryId\": 84885448,\n      \"serverType\": \"in non\",\n      \"secret\": \"laborum nulla proident\",\n      \"createdDateInLongFormat\": -20724302,\n      \"authMode\": \"nisi dolore in veniam\",\n      \"accountPort\": 99933306,\n      \"liveStatus\": \"do voluptate aute\",\n      \"status\": \"nulla adipisicing\",\n      \"key\": \"pariatur\",\n      \"id\": 20247063,\n      \"port\": 23016840\n    },\n    {\n      \"ipAddress\": \"irure enim\",\n      \"userId\": \"laboris eiusmod\",\n      \"factoryId\": -96209389,\n      \"serverType\": \"ipsum Ut anim proident \",\n      \"secret\": \"Ut dolore laboris non\",\n      \"createdDateInLongFormat\": 79318594,\n      \"authMode\": \"ipsum sit ex officia\",\n      \"accountPort\": -44173528,\n      \"liveStatus\": \"cillum aliquip voluptate id\",\n      \"status\": \"ipsum nulla veniam\",\n      \"key\": \"sed ex dolore minim commodo\",\n      \"id\": -89853639,\n      \"port\": 15021927\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getServers.do?serverType=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getServers.do"
									],
									"query": [
										{
											"key": "serverType",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eiusmod id mollit quis\",\n  \"errorMessage\": \"cillum sint proident culpa labore\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getServers.do?serverType=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getServers.do"
									],
									"query": [
										{
											"key": "serverType",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/aaa/getServers.do?serverType=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"getServers.do"
									],
									"query": [
										{
											"key": "serverType",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To save AAADetails such as authentication type and authorization type.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"authenticationServerType\": \"velit laborum dolor est adipisicing\",\n  \"authorizationServerType\": \"incididunt aliquip aliqua voluptate\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aaa/saveAAADetails.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aaa",
								"saveAAADetails.do"
							]
						},
						"description": "This is a proxy service that saves AAADetails such as authentication type and authorization type."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationServerType\": \"velit laborum dolor est adipisicing\",\n  \"authorizationServerType\": \"incididunt aliquip aliqua voluptate\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/saveAAADetails.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"saveAAADetails.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"success\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationServerType\": \"velit laborum dolor est adipisicing\",\n  \"authorizationServerType\": \"incididunt aliquip aliqua voluptate\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/saveAAADetails.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"saveAAADetails.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"magna sed deserunt\",\n  \"errorMessage\": \"ea Duis eu\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationServerType\": \"velit laborum dolor est adipisicing\",\n  \"authorizationServerType\": \"incididunt aliquip aliqua voluptate\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/saveAAADetails.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"saveAAADetails.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationServerType\": \"velit laborum dolor est adipisicing\",\n  \"authorizationServerType\": \"incididunt aliquip aliqua voluptate\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/saveAAADetails.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"saveAAADetails.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "Tests the external server connectivity.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"server\": {\n    \"ipAddress\": \"et consectetur exercitation eu\",\n    \"secret\": \"qui cupidatat et\",\n    \"authMode\": \"sed anim dolor cillum\",\n    \"status\": \"adipisicing do in ea qui\",\n    \"port\": 23103616,\n    \"accountPort\": 88003480,\n    \"serverType\": \"est incididunt ea elit\"\n  },\n  \"user\": {\n    \"userId\": \"sed eiusmod veniam nisi\",\n    \"password\": \"id\"\n  },\n  \"ipAddress\": \"laborum Ut ir\",\n  \"secret\": 72228234.96845621,\n  \"authMode\": \"adipisicing voluptate id culpa in\",\n  \"status\": 17313648.799493104,\n  \"port\": 42141428,\n  \"accountPort\": true,\n  \"serverType\": 52995093.92434877\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aaa/testServerConnectivity.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aaa",
								"testServerConnectivity.do"
							]
						},
						"description": "This is a proxy service that tests the external server connectivity."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"server\": {\n    \"ipAddress\": \"et consectetur exercitation eu\",\n    \"secret\": \"qui cupidatat et\",\n    \"authMode\": \"sed anim dolor cillum\",\n    \"status\": \"adipisicing do in ea qui\",\n    \"port\": 23103616,\n    \"accountPort\": 88003480,\n    \"serverType\": \"est incididunt ea elit\"\n  },\n  \"user\": {\n    \"userId\": \"sed eiusmod veniam nisi\",\n    \"password\": \"id\"\n  },\n  \"ipAddress\": \"laborum Ut ir\",\n  \"secret\": 72228234.96845621,\n  \"authMode\": \"adipisicing voluptate id culpa in\",\n  \"status\": 17313648.799493104,\n  \"port\": 42141428,\n  \"accountPort\": true,\n  \"serverType\": 52995093.92434877\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/testServerConnectivity.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"testServerConnectivity.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"success\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"server\": {\n    \"ipAddress\": \"et consectetur exercitation eu\",\n    \"secret\": \"qui cupidatat et\",\n    \"authMode\": \"sed anim dolor cillum\",\n    \"status\": \"adipisicing do in ea qui\",\n    \"port\": 23103616,\n    \"accountPort\": 88003480,\n    \"serverType\": \"est incididunt ea elit\"\n  },\n  \"user\": {\n    \"userId\": \"sed eiusmod veniam nisi\",\n    \"password\": \"id\"\n  },\n  \"ipAddress\": \"laborum Ut ir\",\n  \"secret\": 72228234.96845621,\n  \"authMode\": \"adipisicing voluptate id culpa in\",\n  \"status\": 17313648.799493104,\n  \"port\": 42141428,\n  \"accountPort\": true,\n  \"serverType\": 52995093.92434877\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/testServerConnectivity.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"testServerConnectivity.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in irure\",\n  \"errorMessage\": \"laborum\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"server\": {\n    \"ipAddress\": \"et consectetur exercitation eu\",\n    \"secret\": \"qui cupidatat et\",\n    \"authMode\": \"sed anim dolor cillum\",\n    \"status\": \"adipisicing do in ea qui\",\n    \"port\": 23103616,\n    \"accountPort\": 88003480,\n    \"serverType\": \"est incididunt ea elit\"\n  },\n  \"user\": {\n    \"userId\": \"sed eiusmod veniam nisi\",\n    \"password\": \"id\"\n  },\n  \"ipAddress\": \"laborum Ut ir\",\n  \"secret\": 72228234.96845621,\n  \"authMode\": \"adipisicing voluptate id culpa in\",\n  \"status\": 17313648.799493104,\n  \"port\": 42141428,\n  \"accountPort\": true,\n  \"serverType\": 52995093.92434877\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/testServerConnectivity.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"testServerConnectivity.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"server\": {\n    \"ipAddress\": \"et consectetur exercitation eu\",\n    \"secret\": \"qui cupidatat et\",\n    \"authMode\": \"sed anim dolor cillum\",\n    \"status\": \"adipisicing do in ea qui\",\n    \"port\": 23103616,\n    \"accountPort\": 88003480,\n    \"serverType\": \"est incididunt ea elit\"\n  },\n  \"user\": {\n    \"userId\": \"sed eiusmod veniam nisi\",\n    \"password\": \"id\"\n  },\n  \"ipAddress\": \"laborum Ut ir\",\n  \"secret\": 72228234.96845621,\n  \"authMode\": \"adipisicing voluptate id culpa in\",\n  \"status\": 17313648.799493104,\n  \"port\": 42141428,\n  \"accountPort\": true,\n  \"serverType\": 52995093.92434877\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aaa/testServerConnectivity.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aaa",
										"testServerConnectivity.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "audit",
			"item": [
				{
					"name": "To export audit logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/audit/exportLogs.do?startTime=dolore proi&endTime=dolore proi&category=dolore proi&objectKey=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audit",
								"exportLogs.do"
							],
							"query": [
								{
									"key": "startTime",
									"value": "dolore proi",
									"description": "(Required) startTime"
								},
								{
									"key": "endTime",
									"value": "dolore proi",
									"description": "(Required) endTime"
								},
								{
									"key": "category",
									"value": "dolore proi",
									"description": "(Required) category"
								},
								{
									"key": "objectKey",
									"value": "dolore proi",
									"description": "(Required) objectKey"
								}
							]
						},
						"description": "This exports the audit logs in a csv file which is named as category_objectKey_timestamp.csv"
					},
					"response": [
						{
							"name": "No response was specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/audit/exportLogs.do?startTime=dolore proi&endTime=dolore proi&category=dolore proi&objectKey=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audit",
										"exportLogs.do"
									],
									"query": [
										{
											"key": "startTime",
											"value": "dolore proi"
										},
										{
											"key": "endTime",
											"value": "dolore proi"
										},
										{
											"key": "category",
											"value": "dolore proi"
										},
										{
											"key": "objectKey",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/audit/exportLogs.do?startTime=dolore proi&endTime=dolore proi&category=dolore proi&objectKey=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audit",
										"exportLogs.do"
									],
									"query": [
										{
											"key": "startTime",
											"value": "dolore proi"
										},
										{
											"key": "endTime",
											"value": "dolore proi"
										},
										{
											"key": "category",
											"value": "dolore proi"
										},
										{
											"key": "objectKey",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"nulla cillum non fugiat\",\n  \"errorMessage\": \"minim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/audit/exportLogs.do?startTime=dolore proi&endTime=dolore proi&category=dolore proi&objectKey=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audit",
										"exportLogs.do"
									],
									"query": [
										{
											"key": "startTime",
											"value": "dolore proi"
										},
										{
											"key": "endTime",
											"value": "dolore proi"
										},
										{
											"key": "category",
											"value": "dolore proi"
										},
										{
											"key": "objectKey",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/audit/exportLogs.do?startTime=dolore proi&endTime=dolore proi&category=dolore proi&objectKey=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audit",
										"exportLogs.do"
									],
									"query": [
										{
											"key": "startTime",
											"value": "dolore proi"
										},
										{
											"key": "endTime",
											"value": "dolore proi"
										},
										{
											"key": "category",
											"value": "dolore proi"
										},
										{
											"key": "objectKey",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to fetch audit logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"startTime\": 89807534,\n  \"endTime\": 50367497,\n  \"category\": \"eu quis est Duis\",\n  \"objectKey\": \"consectetur velit voluptate commodo\",\n  \"dataSize\": -49395858,\n  \"queryParam\": \"amet commodo dolore\",\n  \"lastRetrievedAudit\": {\n    \"activity\": \"ut laborum\",\n    \"category\": \"amet \",\n    \"dateTimeInLongFormat\": 41517320,\n    \"objectKey\": \"ea elit commodo\",\n    \"subObjectKey\": \"amet enim irure culpa id\",\n    \"subObjectName\": \"consequat cupidatat reprehenderit\",\n    \"userName\": \"sint Exc\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/audit/getLogs.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audit",
								"getLogs.do"
							]
						},
						"description": "Fetches activity logs of a CVP user"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startTime\": 89807534,\n  \"endTime\": 50367497,\n  \"category\": \"eu quis est Duis\",\n  \"objectKey\": \"consectetur velit voluptate commodo\",\n  \"dataSize\": -49395858,\n  \"queryParam\": \"amet commodo dolore\",\n  \"lastRetrievedAudit\": {\n    \"activity\": \"ut laborum\",\n    \"category\": \"amet \",\n    \"dateTimeInLongFormat\": 41517320,\n    \"objectKey\": \"ea elit commodo\",\n    \"subObjectKey\": \"amet enim irure culpa id\",\n    \"subObjectName\": \"consequat cupidatat reprehenderit\",\n    \"userName\": \"sint Exc\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/audit/getLogs.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audit",
										"getLogs.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"userName\": \"nulla \",\n      \"category\": \"reprehenderit laborum in\",\n      \"activity\": \"Lorem\",\n      \"objectKey\": \"in incididunt Duis minim\",\n      \"subObjectName\": \"voluptate amet\",\n      \"subObjectKey\": \"officia laboris\",\n      \"dateTimeInLongFormat\": 52043708\n    },\n    {\n      \"userName\": \"Excepteur in\",\n      \"category\": \"s\",\n      \"activity\": \"ullamco\",\n      \"objectKey\": \"Duis mollit\",\n      \"subObjectName\": \"labore ullamco enim\",\n      \"subObjectKey\": \"non\",\n      \"dateTimeInLongFormat\": 90428781\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startTime\": 89807534,\n  \"endTime\": 50367497,\n  \"category\": \"eu quis est Duis\",\n  \"objectKey\": \"consectetur velit voluptate commodo\",\n  \"dataSize\": -49395858,\n  \"queryParam\": \"amet commodo dolore\",\n  \"lastRetrievedAudit\": {\n    \"activity\": \"ut laborum\",\n    \"category\": \"amet \",\n    \"dateTimeInLongFormat\": 41517320,\n    \"objectKey\": \"ea elit commodo\",\n    \"subObjectKey\": \"amet enim irure culpa id\",\n    \"subObjectName\": \"consequat cupidatat reprehenderit\",\n    \"userName\": \"sint Exc\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/audit/getLogs.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audit",
										"getLogs.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"deserunt exercitation eiusmod minim\",\n  \"errorMessage\": \"ipsum proident nostrud\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startTime\": 89807534,\n  \"endTime\": 50367497,\n  \"category\": \"eu quis est Duis\",\n  \"objectKey\": \"consectetur velit voluptate commodo\",\n  \"dataSize\": -49395858,\n  \"queryParam\": \"amet commodo dolore\",\n  \"lastRetrievedAudit\": {\n    \"activity\": \"ut laborum\",\n    \"category\": \"amet \",\n    \"dateTimeInLongFormat\": 41517320,\n    \"objectKey\": \"ea elit commodo\",\n    \"subObjectKey\": \"amet enim irure culpa id\",\n    \"subObjectName\": \"consequat cupidatat reprehenderit\",\n    \"userName\": \"sint Exc\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/audit/getLogs.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audit",
										"getLogs.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startTime\": 89807534,\n  \"endTime\": 50367497,\n  \"category\": \"eu quis est Duis\",\n  \"objectKey\": \"consectetur velit voluptate commodo\",\n  \"dataSize\": -49395858,\n  \"queryParam\": \"amet commodo dolore\",\n  \"lastRetrievedAudit\": {\n    \"activity\": \"ut laborum\",\n    \"category\": \"amet \",\n    \"dateTimeInLongFormat\": 41517320,\n    \"objectKey\": \"ea elit commodo\",\n    \"subObjectKey\": \"amet enim irure culpa id\",\n    \"subObjectName\": \"consequat cupidatat reprehenderit\",\n    \"userName\": \"sint Exc\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/audit/getLogs.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"audit",
										"getLogs.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "configlet",
			"item": [
				{
					"name": "This API is used to add a configlet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"config\": \"in magna consectetur Duis dolore\",\n  \"name\": \"cupidatat ullamco\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/addConfiglet.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"addConfiglet.do"
							]
						},
						"description": "This API is used to add a configlet"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": \"in magna consectetur Duis dolore\",\n  \"name\": \"cupidatat ullamco\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfiglet.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"key\": \"exercitation Excepteur\",\n      \"name\": \"Ut Duis\",\n      \"reconciled\": true,\n      \"config\": \"elit labore\",\n      \"user\": \"voluptate\",\n      \"note\": \"ve\",\n      \"containerCount\": 30717408,\n      \"netElementCount\": 95679983,\n      \"dateTimeInLongFormat\": -54458011,\n      \"isDefault\": \"ad\",\n      \"isAutoBuilder\": \"reprehenderit tempor amet\",\n      \"type\": \"pariatur mollit enim\",\n      \"factoryId\": 78904740,\n      \"id\": -41885656,\n      \"isDraft\": false\n    },\n    {\n      \"key\": \"sed dolore\",\n      \"name\": \"elit laboris ad\",\n      \"reconciled\": false,\n      \"config\": \"Lorem deser\",\n      \"user\": \"consectetur pariatur\",\n      \"note\": \"aliquip culpa nulla\",\n      \"containerCount\": -43593765,\n      \"netElementCount\": 90678124,\n      \"dateTimeInLongFormat\": -32717932,\n      \"isDefault\": \"nisi dolor reprehe\",\n      \"isAutoBuilder\": \"aliqua aliquip cupidatat occaecat\",\n      \"type\": \"cupidatat deserunt ex eu nu\",\n      \"factoryId\": -37922552,\n      \"id\": 64092564,\n      \"isDraft\": false\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": \"in magna consectetur Duis dolore\",\n  \"name\": \"cupidatat ullamco\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfiglet.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"minim consectetur\",\n  \"errorMessage\": \"esse eiusmod ad\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": \"in magna consectetur Duis dolore\",\n  \"name\": \"cupidatat ullamco\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfiglet.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"config\": \"in magna consectetur Duis dolore\",\n  \"name\": \"cupidatat ullamco\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfiglet.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to add a configlet builder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"velit nostrud\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/addConfigletBuilder.do?isDraft=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"addConfigletBuilder.do"
							],
							"query": [
								{
									"key": "isDraft",
									"value": "dolore proi",
									"description": "(Required) Specifies whether draft or not"
								}
							]
						},
						"description": "This API is used to add a configlet builder"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nisi irure Lorem dolore qui\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfigletBuilder.do?isDraft=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfigletBuilder.do"
									],
									"query": [
										{
											"key": "isDraft",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nisi irure Lorem dolore qui\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfigletBuilder.do?isDraft=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfigletBuilder.do"
									],
									"query": [
										{
											"key": "isDraft",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"quis veniam Duis\",\n  \"errorMessage\": \"sint mollit e\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nisi irure Lorem dolore qui\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfigletBuilder.do?isDraft=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfigletBuilder.do"
									],
									"query": [
										{
											"key": "isDraft",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nisi irure Lorem dolore qui\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfigletBuilder.do?isDraft=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfigletBuilder.do"
									],
									"query": [
										{
											"key": "isDraft",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to add configlet and associate mappers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"configlets\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"generatedConfigletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/addConfigletsAndAssociatedMappers.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"addConfigletsAndAssociatedMappers.do"
							]
						},
						"description": "This API is used to add configlet and associate mappers"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"configlets\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"generatedConfigletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfigletsAndAssociatedMappers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfigletsAndAssociatedMappers.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"configlets\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"generatedConfigletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfigletsAndAssociatedMappers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfigletsAndAssociatedMappers.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in sed deserunt\",\n  \"errorMessage\": \"consectetur nulla laborum qui\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"configlets\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"generatedConfigletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfigletsAndAssociatedMappers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfigletsAndAssociatedMappers.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"configlets\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"generatedConfigletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addConfigletsAndAssociatedMappers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addConfigletsAndAssociatedMappers.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to add note to a configlet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"in quis\",\n  \"note\": \"in tempor occaecat laboris exercitation\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/addNoteToConfiglet.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"addNoteToConfiglet.do"
							]
						},
						"description": "This API is used to add note to a configlet"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"in quis\",\n  \"note\": \"in tempor occaecat laboris exercitation\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addNoteToConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addNoteToConfiglet.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"in quis\",\n  \"note\": \"in tempor occaecat laboris exercitation\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addNoteToConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addNoteToConfiglet.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"cillum enim\",\n  \"errorMessage\": \"aute \"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"in quis\",\n  \"note\": \"in tempor occaecat laboris exercitation\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addNoteToConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addNoteToConfiglet.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"in quis\",\n  \"note\": \"in tempor occaecat laboris exercitation\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addNoteToConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addNoteToConfiglet.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to add temporary configlet builder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"formList\": [\n    {\n      \"type\": \"id Ut incididunt ad\",\n      \"fieldId\": \"ullamco nulla Ut\",\n      \"fieldLabel\": \"ut consequat qui\",\n      \"value\": \"reprehenderit sit\",\n      \"depends\": \"dolor minim consectetur pariatur\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"adipisicing elit eiusmod sunt\",\n      \"helpText\": \"aliqua do qui aliquip Excepteur\",\n      \"key\": \"proiden\"\n    },\n    {\n      \"type\": \"consectetur non aliquip deserunt\",\n      \"fieldId\": \"ipsum incididunt dolore do\",\n      \"fieldLabel\": \"consequat commodo proident voluptate occaecat\",\n      \"value\": \"sint nisi\",\n      \"depends\": \"laboris\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"exercitation sit\",\n      \"helpText\": \"eiusmod adipisicing Excepteur\",\n      \"key\": \"culpa aliqua veniam incididunt irure\"\n    }\n  ],\n  \"action\": \"ullamco occaecat mollit\",\n  \"mainScript\": {\n    \"data\": \"dolore\",\n    \"key\": \"elit eiusmod nulla ad\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/addTempConfigletBuilder.do?type=dolore proi&id=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"addTempConfigletBuilder.do"
							],
							"query": [
								{
									"key": "type",
									"value": "dolore proi",
									"description": "Type of the configlet builder(form/mainScript)"
								},
								{
									"key": "id",
									"value": "dolore proi",
									"description": "id of the configlet builder"
								}
							]
						},
						"description": "This API is used to add temporary configlet builder"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"formList\": [\n    {\n      \"type\": \"anim labore ea veniam adipisicing\",\n      \"fieldId\": \"velit consequat Excepteur eu amet\",\n      \"fieldLabel\": \"cupidatat nisi\",\n      \"value\": \"reprehenderit velit\",\n      \"depends\": \"amet proident nisi\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"sit eiusmod magna\",\n      \"helpText\": \"ea occaecat aliquip aliqua et\",\n      \"key\": \"Lorem\"\n    },\n    {\n      \"type\": \"sed Lorem\",\n      \"fieldId\": \"ipsum ut Duis dolor ex\",\n      \"fieldLabel\": \"fugiat anim\",\n      \"value\": \"qui\",\n      \"depends\": \"sint\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"velit aute deserunt\",\n      \"helpText\": \"adipisicing\",\n      \"key\": \"consequat commodo dolor\"\n    }\n  ],\n  \"action\": \"eu magna aute\",\n  \"mainScript\": {\n    \"data\": \"incididunt laboris aliqua non Duis\",\n    \"key\": \"sint consectetur dolore\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addTempConfigletBuilder.do?type=dolore proi&id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addTempConfigletBuilder.do"
									],
									"query": [
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"formList\": [\n    {\n      \"type\": \"anim labore ea veniam adipisicing\",\n      \"fieldId\": \"velit consequat Excepteur eu amet\",\n      \"fieldLabel\": \"cupidatat nisi\",\n      \"value\": \"reprehenderit velit\",\n      \"depends\": \"amet proident nisi\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"sit eiusmod magna\",\n      \"helpText\": \"ea occaecat aliquip aliqua et\",\n      \"key\": \"Lorem\"\n    },\n    {\n      \"type\": \"sed Lorem\",\n      \"fieldId\": \"ipsum ut Duis dolor ex\",\n      \"fieldLabel\": \"fugiat anim\",\n      \"value\": \"qui\",\n      \"depends\": \"sint\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"velit aute deserunt\",\n      \"helpText\": \"adipisicing\",\n      \"key\": \"consequat commodo dolor\"\n    }\n  ],\n  \"action\": \"eu magna aute\",\n  \"mainScript\": {\n    \"data\": \"incididunt laboris aliqua non Duis\",\n    \"key\": \"sint consectetur dolore\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addTempConfigletBuilder.do?type=dolore proi&id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addTempConfigletBuilder.do"
									],
									"query": [
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"pariatur elit\",\n  \"errorMessage\": \"et\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"formList\": [\n    {\n      \"type\": \"anim labore ea veniam adipisicing\",\n      \"fieldId\": \"velit consequat Excepteur eu amet\",\n      \"fieldLabel\": \"cupidatat nisi\",\n      \"value\": \"reprehenderit velit\",\n      \"depends\": \"amet proident nisi\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"sit eiusmod magna\",\n      \"helpText\": \"ea occaecat aliquip aliqua et\",\n      \"key\": \"Lorem\"\n    },\n    {\n      \"type\": \"sed Lorem\",\n      \"fieldId\": \"ipsum ut Duis dolor ex\",\n      \"fieldLabel\": \"fugiat anim\",\n      \"value\": \"qui\",\n      \"depends\": \"sint\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"velit aute deserunt\",\n      \"helpText\": \"adipisicing\",\n      \"key\": \"consequat commodo dolor\"\n    }\n  ],\n  \"action\": \"eu magna aute\",\n  \"mainScript\": {\n    \"data\": \"incididunt laboris aliqua non Duis\",\n    \"key\": \"sint consectetur dolore\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addTempConfigletBuilder.do?type=dolore proi&id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addTempConfigletBuilder.do"
									],
									"query": [
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"formList\": [\n    {\n      \"type\": \"anim labore ea veniam adipisicing\",\n      \"fieldId\": \"velit consequat Excepteur eu amet\",\n      \"fieldLabel\": \"cupidatat nisi\",\n      \"value\": \"reprehenderit velit\",\n      \"depends\": \"amet proident nisi\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"sit eiusmod magna\",\n      \"helpText\": \"ea occaecat aliquip aliqua et\",\n      \"key\": \"Lorem\"\n    },\n    {\n      \"type\": \"sed Lorem\",\n      \"fieldId\": \"ipsum ut Duis dolor ex\",\n      \"fieldLabel\": \"fugiat anim\",\n      \"value\": \"qui\",\n      \"depends\": \"sint\",\n      \"validation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataValidation\": \"velit aute deserunt\",\n      \"helpText\": \"adipisicing\",\n      \"key\": \"consequat commodo dolor\"\n    }\n  ],\n  \"action\": \"eu magna aute\",\n  \"mainScript\": {\n    \"data\": \"incididunt laboris aliqua non Duis\",\n    \"key\": \"sint consectetur dolore\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addTempConfigletBuilder.do?type=dolore proi&id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addTempConfigletBuilder.do"
									],
									"query": [
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to add temp generated configlets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"configletId\": \"occaecat elit\",\n      \"action\": \"aute ipsum Excepteur exercitation\",\n      \"netElementId\": \"aliquip adipisicing nulla\",\n      \"objectType\": \"proident in aliqua\"\n    },\n    {\n      \"configletId\": \"do Ut nostrud\",\n      \"action\": \"sunt nulla amet aliquip dolore\",\n      \"netElementId\": \"in\",\n      \"objectType\": \"mollit consectetur\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/addTempGeneratedConfiglet.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"addTempGeneratedConfiglet.do"
							]
						},
						"description": "This API is used to add temp generated configlets"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"configletId\": \"ad incididunt sint\",\n      \"action\": \"magna tempor\",\n      \"netElementId\": \"adipisicing labore do ea veniam\",\n      \"objectType\": \"amet laborum ullamco\"\n    },\n    {\n      \"configletId\": \"eiusmod\",\n      \"action\": \"aliqua do dolor\",\n      \"netElementId\": \"ipsum minim reprehenderit\",\n      \"objectType\": \"ullamco occaecat pariatur enim\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addTempGeneratedConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addTempGeneratedConfiglet.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"key\": \"ea elit culpa\",\n  \"configletBuilderId\": \"ex nisi\",\n  \"configletId\": \"Excepteur enim\",\n  \"netElementId\": \"velit dolor sint\",\n  \"containerId\": \"labore\",\n  \"action\": \"esse eiusmod\",\n  \"previewValues\": [\n    {\n      \"fieldId\": \"in et nostrud\",\n      \"value\": \"proident quis aliqua\"\n    },\n    {\n      \"fieldId\": \"aliqua elit\",\n      \"value\": \"veniam laboris deserunt incididunt\"\n    }\n  ],\n  \"previewValuesListSize\": 50373110,\n  \"factoryId\": 94437072,\n  \"id\": -11976592,\n  \"objectType\": \"commodo ad dolore in\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"configletId\": \"ad incididunt sint\",\n      \"action\": \"magna tempor\",\n      \"netElementId\": \"adipisicing labore do ea veniam\",\n      \"objectType\": \"amet laborum ullamco\"\n    },\n    {\n      \"configletId\": \"eiusmod\",\n      \"action\": \"aliqua do dolor\",\n      \"netElementId\": \"ipsum minim reprehenderit\",\n      \"objectType\": \"ullamco occaecat pariatur enim\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addTempGeneratedConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addTempGeneratedConfiglet.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laboris ea est veniam\",\n  \"errorMessage\": \"fu\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"configletId\": \"ad incididunt sint\",\n      \"action\": \"magna tempor\",\n      \"netElementId\": \"adipisicing labore do ea veniam\",\n      \"objectType\": \"amet laborum ullamco\"\n    },\n    {\n      \"configletId\": \"eiusmod\",\n      \"action\": \"aliqua do dolor\",\n      \"netElementId\": \"ipsum minim reprehenderit\",\n      \"objectType\": \"ullamco occaecat pariatur enim\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addTempGeneratedConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addTempGeneratedConfiglet.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"configletId\": \"ad incididunt sint\",\n      \"action\": \"magna tempor\",\n      \"netElementId\": \"adipisicing labore do ea veniam\",\n      \"objectType\": \"amet laborum ullamco\"\n    },\n    {\n      \"configletId\": \"eiusmod\",\n      \"action\": \"aliqua do dolor\",\n      \"netElementId\": \"ipsum minim reprehenderit\",\n      \"objectType\": \"ullamco occaecat pariatur enim\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/addTempGeneratedConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"addTempGeneratedConfiglet.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to generate auto configlet builder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"configletBuilderId\": \"in proident minim veniam ut\",\n  \"netElementIds\": [\n    \"tempor nostrud aliqua a\",\n    \"officia dolore esse\"\n  ],\n  \"containerId\": \"in magna incididunt minim dolore\",\n  \"pageType\": \"laborum dolor Duis nostrud amet\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/autoConfigletGenerator.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"autoConfigletGenerator.do"
							]
						},
						"description": "This API is used to generate auto configlet builder"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"configletBuilderId\": \"ex Ut ullamco qui nulla\",\n  \"netElementIds\": [\n    \"exercitation dolore voluptate sed\",\n    \"qui cupidatat velit id\"\n  ],\n  \"containerId\": \"voluptate pariatur Lorem ut\",\n  \"pageType\": \"adipisicing consectetur exercitation sint\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/autoConfigletGenerator.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"autoConfigletGenerator.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"status\": \"dolor do enim\",\n      \"configlet\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netElementId\": \"dolor occaecat esse nulla\",\n      \"isExistingGc\": true\n    },\n    {\n      \"status\": \"mollit in et nostrud\",\n      \"configlet\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netElementId\": \"fugiat non anim Ut\",\n      \"isExistingGc\": true\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"configletBuilderId\": \"ex Ut ullamco qui nulla\",\n  \"netElementIds\": [\n    \"exercitation dolore voluptate sed\",\n    \"qui cupidatat velit id\"\n  ],\n  \"containerId\": \"voluptate pariatur Lorem ut\",\n  \"pageType\": \"adipisicing consectetur exercitation sint\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/autoConfigletGenerator.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"autoConfigletGenerator.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ea sunt\",\n  \"errorMessage\": \"nulla\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"configletBuilderId\": \"ex Ut ullamco qui nulla\",\n  \"netElementIds\": [\n    \"exercitation dolore voluptate sed\",\n    \"qui cupidatat velit id\"\n  ],\n  \"containerId\": \"voluptate pariatur Lorem ut\",\n  \"pageType\": \"adipisicing consectetur exercitation sint\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/autoConfigletGenerator.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"autoConfigletGenerator.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"configletBuilderId\": \"ex Ut ullamco qui nulla\",\n  \"netElementIds\": [\n    \"exercitation dolore voluptate sed\",\n    \"qui cupidatat velit id\"\n  ],\n  \"containerId\": \"voluptate pariatur Lorem ut\",\n  \"pageType\": \"adipisicing consectetur exercitation sint\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/autoConfigletGenerator.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"autoConfigletGenerator.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to cancel the temporary configlet builder",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/cancelConfigletBuilder.do?id=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"cancelConfigletBuilder.do"
							],
							"query": [
								{
									"key": "id",
									"value": "dolore proi",
									"description": "(Required) The builder id"
								}
							]
						},
						"description": "This API is used to cancel the temporary configlet builder"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/cancelConfigletBuilder.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"cancelConfigletBuilder.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/cancelConfigletBuilder.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"cancelConfigletBuilder.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ex laborum\",\n  \"errorMessage\": \"Excepteur ex\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/cancelConfigletBuilder.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"cancelConfigletBuilder.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/cancelConfigletBuilder.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"cancelConfigletBuilder.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to generate configlet builder preview",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"previewValues\": [\n    {\n      \"fieldId\": \"inci\",\n      \"value\": \"labore exercitation pariatur\"\n    },\n    {\n      \"fieldId\": \"ut consectetur\",\n      \"value\": \"voluptate\"\n    }\n  ],\n  \"configletBuilderId\": \"occaecat minim aliqua esse\",\n  \"pageType\": \"sint pariatur eu minim\",\n  \"mode\": \"reprehenderit sit velit\",\n  \"containerId\": \"voluptate minim\",\n  \"containerToId\": \"consequat qui occaecat\",\n  \"netElementIds\": [\n    \"magna amet esse\",\n    \"ullamco pariatur\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/configletBuilderPreview.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"configletBuilderPreview.do"
							]
						},
						"description": "This API is used to generate configlet builder preview"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"previewValues\": [\n    {\n      \"fieldId\": \"ipsum in eiu\",\n      \"value\": \"est ipsum\"\n    },\n    {\n      \"fieldId\": \"aute tempor\",\n      \"value\": \"cillum\"\n    }\n  ],\n  \"configletBuilderId\": \"occaecat do laboris velit\",\n  \"pageType\": \"officia do sit nisi\",\n  \"mode\": \"volu\",\n  \"containerId\": \"ad eu sint id e\",\n  \"containerToId\": \"laborum dolore do\",\n  \"netElementIds\": [\n    \"mollit ipsum consequat\",\n    \"ad occaecat voluptate\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/configletBuilderPreview.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"configletBuilderPreview.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"configlet\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isExistingGc\": true\n    },\n    {\n      \"configlet\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isExistingGc\": false\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"previewValues\": [\n    {\n      \"fieldId\": \"ipsum in eiu\",\n      \"value\": \"est ipsum\"\n    },\n    {\n      \"fieldId\": \"aute tempor\",\n      \"value\": \"cillum\"\n    }\n  ],\n  \"configletBuilderId\": \"occaecat do laboris velit\",\n  \"pageType\": \"officia do sit nisi\",\n  \"mode\": \"volu\",\n  \"containerId\": \"ad eu sint id e\",\n  \"containerToId\": \"laborum dolore do\",\n  \"netElementIds\": [\n    \"mollit ipsum consequat\",\n    \"ad occaecat voluptate\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/configletBuilderPreview.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"configletBuilderPreview.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"do\",\n  \"errorMessage\": \"sit non ipsum magna\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"previewValues\": [\n    {\n      \"fieldId\": \"ipsum in eiu\",\n      \"value\": \"est ipsum\"\n    },\n    {\n      \"fieldId\": \"aute tempor\",\n      \"value\": \"cillum\"\n    }\n  ],\n  \"configletBuilderId\": \"occaecat do laboris velit\",\n  \"pageType\": \"officia do sit nisi\",\n  \"mode\": \"volu\",\n  \"containerId\": \"ad eu sint id e\",\n  \"containerToId\": \"laborum dolore do\",\n  \"netElementIds\": [\n    \"mollit ipsum consequat\",\n    \"ad occaecat voluptate\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/configletBuilderPreview.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"configletBuilderPreview.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"previewValues\": [\n    {\n      \"fieldId\": \"ipsum in eiu\",\n      \"value\": \"est ipsum\"\n    },\n    {\n      \"fieldId\": \"aute tempor\",\n      \"value\": \"cillum\"\n    }\n  ],\n  \"configletBuilderId\": \"occaecat do laboris velit\",\n  \"pageType\": \"officia do sit nisi\",\n  \"mode\": \"volu\",\n  \"containerId\": \"ad eu sint id e\",\n  \"containerToId\": \"laborum dolore do\",\n  \"netElementIds\": [\n    \"mollit ipsum consequat\",\n    \"ad occaecat voluptate\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/configletBuilderPreview.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"configletBuilderPreview.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to delete a configlet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"magna exercitation elit\",\n  \"name\": \"nisi labore non\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/deleteConfiglet.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"deleteConfiglet.do"
							]
						},
						"description": "This API is used to delete a configlet"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"magna exercitation elit\",\n  \"name\": \"nisi labore non\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/deleteConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"deleteConfiglet.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"magna exercitation elit\",\n  \"name\": \"nisi labore non\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/deleteConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"deleteConfiglet.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sint tempor qui culpa\",\n  \"errorMessage\": \"dolore non ex\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"magna exercitation elit\",\n  \"name\": \"nisi labore non\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/deleteConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"deleteConfiglet.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"magna exercitation elit\",\n  \"name\": \"nisi labore non\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/deleteConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"deleteConfiglet.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to export configlets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    \"Excepteur\",\n    \"ut consectetur commodo\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/exportConfiglets.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"exportConfiglets.do"
							]
						},
						"description": "This API is used to export configlets to .zip file"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/exportConfiglets.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"exportConfiglets.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/exportConfiglets.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"exportConfiglets.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"Excepteur Lorem consequat\",\n  \"errorMessage\": \"eu sit do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/exportConfiglets.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"exportConfiglets.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/exportConfiglets.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"exportConfiglets.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get a list of containers for which a given configlet has been assigned",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getAppliedContainers.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getAppliedContainers.do"
							],
							"query": [
								{
									"key": "configletName",
									"value": "dolore proi",
									"description": "(Required) Name of the configlet"
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "Search String"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination.If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "This API is used to get the list of containers for which a given configlet has been assigned"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedContainers.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedContainers.do"
									],
									"query": [
										{
											"key": "configletName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 36484103,\n  \"data\": [\n    {\n      \"appliedBy\": \"ut ipsum\",\n      \"ipAddress\": \"tempor in esse\",\n      \"containerName\": \"sint\",\n      \"appliedDate\": -46085195,\n      \"totalDevicesCount\": 33892091,\n      \"hostName\": \"est in veniam deserunt proident\"\n    },\n    {\n      \"appliedBy\": \"tempor deserunt eiusmod\",\n      \"ipAddress\": \"dolor adipisicing in cillum sed\",\n      \"containerName\": \"pariatur veniam\",\n      \"appliedDate\": 11940998,\n      \"totalDevicesCount\": -86810928,\n      \"hostName\": \"magna ut ipsum\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedContainers.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedContainers.do"
									],
									"query": [
										{
											"key": "configletName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"aute reprehenderit\",\n  \"errorMessage\": \"laborum dolor sunt quis\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedContainers.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedContainers.do"
									],
									"query": [
										{
											"key": "configletName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedContainers.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedContainers.do"
									],
									"query": [
										{
											"key": "configletName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get a list of devices on which a configlet has been applied",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getAppliedDeviceCount.do?configletId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getAppliedDeviceCount.do"
							],
							"query": [
								{
									"key": "configletId",
									"value": "dolore proi",
									"description": "(Required) Configlet Id"
								}
							]
						},
						"description": "This API is used to get a list of devices on which a configlet has been applied"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedDeviceCount.do?configletId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedDeviceCount.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": -24791479\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedDeviceCount.do?configletId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedDeviceCount.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"minim laborum\",\n  \"errorMessage\": \"et Excepteur\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedDeviceCount.do?configletId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedDeviceCount.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedDeviceCount.do?configletId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedDeviceCount.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get a list of devices for which a given configlet has been assigned",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getAppliedDevices.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getAppliedDevices.do"
							],
							"query": [
								{
									"key": "configletName",
									"value": "dolore proi",
									"description": "(Required) name of the configlet"
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "Search String"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination.If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "This API is used to get a list of devices for which a given configlet has been assigned"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedDevices.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedDevices.do"
									],
									"query": [
										{
											"key": "configletName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 34118734,\n  \"data\": [\n    {\n      \"ipAddress\": \"deserunt enim dolore\",\n      \"appliedBy\": \"\",\n      \"containerName\": \"sunt Duis quis\",\n      \"totalDevicesCount\": -63521528,\n      \"appliedDate\": -50372263,\n      \"hostName\": \"minim culpa officia aliqua\"\n    },\n    {\n      \"ipAddress\": \"ex ea sit minim\",\n      \"appliedBy\": \"dolor id in fugiat\",\n      \"containerName\": \"Ut exercitation proident\",\n      \"totalDevicesCount\": -21446929,\n      \"appliedDate\": 32693243,\n      \"hostName\": \"incididunt et\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedDevices.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedDevices.do"
									],
									"query": [
										{
											"key": "configletName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ullamco in commodo dolore occaecat\",\n  \"errorMessage\": \"cillum proident deserunt dolor non\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedDevices.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedDevices.do"
									],
									"query": [
										{
											"key": "configletName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getAppliedDevices.do?configletName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getAppliedDevices.do"
									],
									"query": [
										{
											"key": "configletName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the configlet builder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getConfigletBuilder.do?id=dolore proi&type=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getConfigletBuilder.do"
							],
							"query": [
								{
									"key": "id",
									"value": "dolore proi",
									"description": "(Required) The builder id to be fetched"
								},
								{
									"key": "type",
									"value": "dolore proi",
									"description": "The builder type to be fetched - form, mainScript"
								}
							]
						},
						"description": "This API is used to get the configlet builder"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletBuilder.do?id=dolore proi&type=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletBuilder.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"name\": \"id consectetur dolor\",\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sessionId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"isAssigned\": true,\n    \"sslConfig\": false\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletBuilder.do?id=dolore proi&type=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletBuilder.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"voluptat\",\n  \"errorMessage\": \"nulla quis Excepteur\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletBuilder.do?id=dolore proi&type=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletBuilder.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletBuilder.do?id=dolore proi&type=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletBuilder.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get configlet by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getConfigletById.do?id=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getConfigletById.do"
							],
							"query": [
								{
									"key": "id",
									"value": "dolore proi",
									"description": "(Required) Configlet Id"
								}
							]
						},
						"description": "This API is used to get configlet by id"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"factoryId\": 82444699,\n  \"reconciled\": true,\n  \"isDefault\": \"non sed dolore\",\n  \"note\": \"Lorem minim sed sint consequat\",\n  \"containerCount\": -14187795,\n  \"netElementCount\": 82268794,\n  \"isAutoBuilder\": \"proident\",\n  \"dateTimeInLongFormat\": 16122999,\n  \"user\": \"proident do fugiat magna\",\n  \"config\": \"ullamco\",\n  \"id\": 87928193,\n  \"isDraft\": false,\n  \"key\": \"fugiat dolore reprehenderit mollit ipsum\",\n  \"name\": \"pariatur est elit\",\n  \"type\": \"exercitation pariatur consequat nisi\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laborum sunt veniam nostrud\",\n  \"errorMessage\": \"nulla deserunt in laborum\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletById.do?id=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletById.do"
									],
									"query": [
										{
											"key": "id",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get configlet by it's name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getConfigletByName.do?name=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getConfigletByName.do"
							],
							"query": [
								{
									"key": "name",
									"value": "dolore proi",
									"description": "(Required) Configlet name"
								}
							]
						},
						"description": "This API is used to get configlet by it's name. "
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletByName.do?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletByName.do"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"factoryId\": 82444699,\n  \"reconciled\": true,\n  \"isDefault\": \"non sed dolore\",\n  \"note\": \"Lorem minim sed sint consequat\",\n  \"containerCount\": -14187795,\n  \"netElementCount\": 82268794,\n  \"isAutoBuilder\": \"proident\",\n  \"dateTimeInLongFormat\": 16122999,\n  \"user\": \"proident do fugiat magna\",\n  \"config\": \"ullamco\",\n  \"id\": 87928193,\n  \"isDraft\": false,\n  \"key\": \"fugiat dolore reprehenderit mollit ipsum\",\n  \"name\": \"pariatur est elit\",\n  \"type\": \"exercitation pariatur consequat nisi\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletByName.do?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletByName.do"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laborum sunt veniam nostrud\",\n  \"errorMessage\": \"nulla deserunt in laborum\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletByName.do?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletByName.do"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletByName.do?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletByName.do"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the configlet history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getConfigletHistory.do?configletId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getConfigletHistory.do"
							],
							"query": [
								{
									"key": "configletId",
									"value": "dolore proi",
									"description": "(Required) Configlet Id"
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "Search String"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "This API is used to get the configlet history"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletHistory.do?configletId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletHistory.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -29957115,\n  \"configletHistory\": [\n    {\n      \"configletId\": \"do\",\n      \"factoryId\": 16527371,\n      \"oldUserId\": \"consequat eu irure\",\n      \"newUserId\": \"in cill\",\n      \"oldConfig\": \"minim culpa adipisicing non\",\n      \"newConfig\": \"anim irure\",\n      \"oldDate\": \"labore pro\",\n      \"newDate\": \"enim et\",\n      \"oldDateTimeInLongFormat\": -70831509,\n      \"updatedDateTimeInLongFormat\": 58832172,\n      \"key\": \"labore des\",\n      \"id\": 16083165\n    },\n    {\n      \"configletId\": \"in anim sint\",\n      \"factoryId\": 43787699,\n      \"oldUserId\": \"magna ad eu sit proident\",\n      \"newUserId\": \"magna pariatur non\",\n      \"oldConfig\": \"minim esse incididunt sed consequat\",\n      \"newConfig\": \"do commodo\",\n      \"oldDate\": \"veniam in Duis laborum\",\n      \"newDate\": \"dolor elit sint\",\n      \"oldDateTimeInLongFormat\": 7730217,\n      \"updatedDateTimeInLongFormat\": 26494035,\n      \"key\": \"sit labore adipisicing pariatur\",\n      \"id\": -4587609\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletHistory.do?configletId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletHistory.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"incididunt sint\",\n  \"errorMessage\": \"esse eiusmod\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletHistory.do?configletId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletHistory.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletHistory.do?configletId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletHistory.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the Configlets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getConfiglets.do"
							],
							"query": [
								{
									"key": "objectType",
									"value": "dolore proi",
									"description": "Object type - 'netelement' or 'container'"
								},
								{
									"key": "objectId",
									"value": "dolore proi",
									"description": "Object id - netElementId or containerId"
								},
								{
									"key": "type",
									"value": "dolore proi",
									"description": "Type of configlet to return. Following types are allowed :-<br><ul><li>Configlet - Returns static and generated configlets</li><li>Builder - Returns builder as well as draft configlets</li><li>Draft - Returns draft configlets</li><li>BuilderWithoutDraft - Returns only builder configlets</li><li>IgnoreDraft - Returns everything other than draft configlets</li><li>Static - Returns static configlets </li><li>Generated - Returns generated configlets</li></ul>Multiple values separated by comma can be given to type parameter (eg. static,generated will fetch both the types). "
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If 0, then all records will be returned"
								},
								{
									"key": "sortByColumn",
									"value": "dolore proi",
									"description": "Sort based on the column .Sortable Columns are name,containerCount,netElementCount,note,type,user,dateTimeInLongFormat"
								},
								{
									"key": "sortOrder",
									"value": "dolore proi",
									"description": "Sort Order - Ascending or Descending"
								}
							]
						},
						"description": "This API is used to get the Configlets. Parameters - 'type', 'objectType' and 'objectId' are case sensitive"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 1634351,\n  \"data\": [\n    {\n      \"factoryId\": 11812508,\n      \"reconciled\": false,\n      \"isDefault\": \"esse Duis ut\",\n      \"note\": \"Ut aliqua cillum Lorem\",\n      \"containerCount\": -66297666,\n      \"netElementCount\": 74154994,\n      \"isAutoBuilder\": \"dolore cillum deserunt\",\n      \"dateTimeInLongFormat\": 52700295,\n      \"user\": \"adipisicing ad minim\",\n      \"config\": \"consequat enim\",\n      \"id\": -46027386,\n      \"isDraft\": false,\n      \"key\": \"eiusmod enim dolor sint\",\n      \"name\": \"Ut reprehenderit et exercitation in\",\n      \"type\": \"Duis est in consequat\"\n    },\n    {\n      \"factoryId\": 97120435,\n      \"reconciled\": true,\n      \"isDefault\": \"Ut sed\",\n      \"note\": \"dolore eu\",\n      \"containerCount\": -72650251,\n      \"netElementCount\": 26699411,\n      \"isAutoBuilder\": \"consectetur fugiat adipisicing\",\n      \"dateTimeInLongFormat\": 72315431,\n      \"user\": \"occaecat dolore do\",\n      \"config\": \"consectetur Excepteur officia commodo\",\n      \"id\": -87307575,\n      \"isDraft\": false,\n      \"key\": \"voluptate incididunt tempor enim aliquip\",\n      \"name\": \"mollit non ex\",\n      \"type\": \"fugiat laborum eiusmod proident\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"pariatur consequat\",\n  \"errorMessage\": \"esse dolor nostrud\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get configlets and their associated mappers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getConfigletsAndAssociatedMappers.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getConfigletsAndAssociatedMappers.do"
							]
						},
						"description": "This API is used to get configlets and their associated mappers"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletsAndAssociatedMappers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletsAndAssociatedMappers.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"configlets\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configletBuilders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"generatedConfigletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configletMappers\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletsAndAssociatedMappers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletsAndAssociatedMappers.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sunt laboris\",\n  \"errorMessage\": \"dolore minim deserunt eiusmod cup\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletsAndAssociatedMappers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletsAndAssociatedMappers.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getConfigletsAndAssociatedMappers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getConfigletsAndAssociatedMappers.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get current management IP from proposed config",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"netElementId\": \"sed do\",\n  \"configIdList\": [\n    \"in ex est cillum\",\n    \"consectetur ex sit\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/getCurrentManagementIp.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getCurrentManagementIp.do"
							]
						},
						"description": "This API is used to get the Current Management IP from Proposed config"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"sed laborum nostrud\",\n  \"configIdList\": [\n    \"mollit quis cupidatat proident\",\n    \"ea nulla aute\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/getCurrentManagementIp.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getCurrentManagementIp.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"sed laborum nostrud\",\n  \"configIdList\": [\n    \"mollit quis cupidatat proident\",\n    \"ea nulla aute\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/getCurrentManagementIp.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getCurrentManagementIp.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ad mollit veniam\",\n  \"errorMessage\": \"culpa quis sint\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"sed laborum nostrud\",\n  \"configIdList\": [\n    \"mollit quis cupidatat proident\",\n    \"ea nulla aute\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/getCurrentManagementIp.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getCurrentManagementIp.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"sed laborum nostrud\",\n  \"configIdList\": [\n    \"mollit quis cupidatat proident\",\n    \"ea nulla aute\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/getCurrentManagementIp.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getCurrentManagementIp.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the hierarchical configlet builder count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getHierarchicalBuilderCount.do?containerId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getHierarchicalBuilderCount.do"
							],
							"query": [
								{
									"key": "containerId",
									"value": "dolore proi",
									"description": "(Required) Container id to get hierarchial builder count"
								}
							]
						},
						"description": "This API is used to get the hierarchical configlet builder count"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getHierarchicalBuilderCount.do?containerId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getHierarchicalBuilderCount.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"builderCount\": -88033305\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getHierarchicalBuilderCount.do?containerId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getHierarchicalBuilderCount.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ipsum est non aliquip\",\n  \"errorMessage\": \"reprehend\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getHierarchicalBuilderCount.do?containerId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getHierarchicalBuilderCount.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getHierarchicalBuilderCount.do?containerId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getHierarchicalBuilderCount.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get hierarchical configlet builders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/getHierarchicalConfigletBuilders.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getHierarchicalConfigletBuilders.do"
							],
							"query": [
								{
									"key": "containerId",
									"value": "dolore proi",
									"description": "(Required) The container id to get hierarchial configlet builders"
								},
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "The query text"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) The startIndex to be fetched"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) The endIndex to be fetched"
								}
							]
						},
						"description": "This API is used to get hierarchical configlet builders"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getHierarchicalConfigletBuilders.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getHierarchicalConfigletBuilders.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -76542623,\n  \"buildMapperList\": [\n    {\n      \"containerName\": \"eu labore\",\n      \"containerId\": \"esse proident id\",\n      \"builderId\": \"est nulla Excepteur\",\n      \"builderName\": \"nisi laborum\"\n    },\n    {\n      \"containerName\": \"qui do irure\",\n      \"containerId\": \"magna\",\n      \"builderId\": \"esse elit do mollit ad\",\n      \"builderName\": \"cupidatat in consectetur\"\n    }\n  ],\n  \"builderList\": [\n    {\n      \"factoryId\": -5420001,\n      \"reconciled\": false,\n      \"isDefault\": \"velit tempor\",\n      \"note\": \"dolore fugiat\",\n      \"containerCount\": -47286687,\n      \"netElementCount\": 19978271,\n      \"isAutoBuilder\": \"dolore consectetur ea consequat aliqua\",\n      \"dateTimeInLongFormat\": -1954468,\n      \"user\": \"dolore\",\n      \"config\": \"officia enim\",\n      \"id\": 61685282,\n      \"isDraft\": false,\n      \"key\": \"sunt reprehenderit\",\n      \"name\": \"\",\n      \"type\": \"exercitation aliqua est ut\"\n    },\n    {\n      \"factoryId\": -82095451,\n      \"reconciled\": true,\n      \"isDefault\": \"ad culpa\",\n      \"note\": \"enim deserunt Excepteur\",\n      \"containerCount\": 62839333,\n      \"netElementCount\": 46760808,\n      \"isAutoBuilder\": \"laborum Ut\",\n      \"dateTimeInLongFormat\": -44397242,\n      \"user\": \"cupidatat ipsum\",\n      \"config\": \"enim consequat nisi\",\n      \"id\": -30927339,\n      \"isDraft\": false,\n      \"key\": \"pariatur\",\n      \"name\": \"cillum elit et\",\n      \"type\": \"exercitation\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getHierarchicalConfigletBuilders.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getHierarchicalConfigletBuilders.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"exercitation dolore ut est\",\n  \"errorMessage\": \"labore dolore sunt dolor\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getHierarchicalConfigletBuilders.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getHierarchicalConfigletBuilders.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/getHierarchicalConfigletBuilders.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getHierarchicalConfigletBuilders.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get a list of management IPs from Designed config",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"netElementId\": \"veniam consequat cupidatat nulla\",\n  \"configIdList\": [\n    \"Excepteur nulla velit consequat\",\n    \"minim velit ut incididunt\"\n  ],\n  \"pageType\": \"quis ea\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/getManagementIp.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"getManagementIp.do"
							],
							"query": [
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "Search String"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination.If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "This API is used to get a list of management IPs from Designed config"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"in qui ad\",\n  \"configIdList\": [\n    \"laborum elit incididunt \",\n    \"nulla aliqua\"\n  ],\n  \"pageType\": \"ex proident elit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/getManagementIp.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getManagementIp.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 86650731,\n  \"managementIps\": [\n    {\n      \"factoryId\": -14743590,\n      \"userId\": \"nostrud fugiat\",\n      \"address\": \"ut Excepteur in laborum\",\n      \"name\": \"esse qui consequat\",\n      \"key\": \"Ut velit adipisicing\",\n      \"id\": -46317662,\n      \"type\": \"Excepteur ex\",\n      \"netElementId\": \"ullamco nulla pariatur velit Excepteur\"\n    },\n    {\n      \"factoryId\": 18928011,\n      \"userId\": \"veniam nulla enim\",\n      \"address\": \"cillum occaecat officia laborum\",\n      \"name\": \"elit et ullamco\",\n      \"key\": \"sunt\",\n      \"id\": 74561072,\n      \"type\": \"tempor quis fugiat ex\",\n      \"netElementId\": \"magna ullamco enim eu\"\n    }\n  ],\n  \"defaultProposedManagementIp\": {\n    \"factoryId\": 89538683,\n    \"userId\": \"ullamco et\",\n    \"address\": \"ea laborum dolore\",\n    \"name\": \"exercitation incididunt\",\n    \"key\": \"esse aliquip\",\n    \"id\": 92107679,\n    \"type\": \"Excepteur elit\",\n    \"netElementId\": \"sed dolore deserunt consectetur\"\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"in qui ad\",\n  \"configIdList\": [\n    \"laborum elit incididunt \",\n    \"nulla aliqua\"\n  ],\n  \"pageType\": \"ex proident elit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/getManagementIp.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getManagementIp.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"adipisicing incididunt dolor\",\n  \"errorMessage\": \"fugiat reprehenderit aliqua velit veniam\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"in qui ad\",\n  \"configIdList\": [\n    \"laborum elit incididunt \",\n    \"nulla aliqua\"\n  ],\n  \"pageType\": \"ex proident elit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/getManagementIp.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getManagementIp.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"in qui ad\",\n  \"configIdList\": [\n    \"laborum elit incididunt \",\n    \"nulla aliqua\"\n  ],\n  \"pageType\": \"ex proident elit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/getManagementIp.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"getManagementIp.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to import the configlets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) zip file to upload",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/importConfiglets.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"importConfiglets.do"
							]
						},
						"description": "This API is used to import the configlets"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) zip file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/importConfiglets.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"importConfiglets.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"eventId\": \"nulla laboris commodo dolor\",\n  \"data\": \"dolor id dolore ullamco\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) zip file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/importConfiglets.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"importConfiglets.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"voluptate\",\n  \"errorMessage\": \"ad et exercitation in amet\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) zip file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/importConfiglets.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"importConfiglets.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) zip file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/importConfiglets.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"importConfiglets.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get configlets based on a search string",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/searchConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"searchConfiglets.do"
							],
							"query": [
								{
									"key": "objectType",
									"value": "dolore proi",
									"description": "Object type - netelement or container"
								},
								{
									"key": "objectId",
									"value": "dolore proi",
									"description": "Object id - netElementId or containerId"
								},
								{
									"key": "type",
									"value": "dolore proi",
									"description": "Type of configlet to return. Following types are allowed :-<br><ul><li>Configlet - Returns static and generated configlets</li><li>Builder - Returns builder as well as draft configlets</li><li>Draft - Returns draft configlets</li><li>BuilderWithoutDraft - Returns only builder configlets</li><li>IgnoreDraft - Returns everything other than draft configlets</li><li>Static - Returns static configlets </li><li>Generated - Returns generated configlets</li></ul>Multiple values separated by comma can be given to type parameter (eg. static,generated will fetch both the types). "
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "Search String"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination.If end index is 0 then all the records will be returned"
								},
								{
									"key": "sortByColumn",
									"value": "dolore proi",
									"description": "Sort based on the column .Sortable Columns are name,containerCount,netElementCount,note,type,user,dateTimeInLongFormat"
								},
								{
									"key": "sortOrder",
									"value": "dolore proi",
									"description": "Sort Order - Ascending or Descending"
								}
							]
						},
						"description": "This API is used to get a list of configlets based on a search string"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/searchConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"searchConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 52557415,\n  \"data\": [\n    {\n      \"factoryId\": -82262342,\n      \"reconciled\": true,\n      \"isDefault\": \"irure mollit labore nostrud\",\n      \"note\": \"exercitation anim ex\",\n      \"containerCount\": 83061883,\n      \"netElementCount\": -49794346,\n      \"isAutoBuilder\": \"culpa et dolor in\",\n      \"dateTimeInLongFormat\": 68893884,\n      \"user\": \"tempor amet\",\n      \"config\": \"non reprehenderit qui quis id\",\n      \"id\": -10751305,\n      \"isDraft\": false,\n      \"key\": \"ea ad deserunt sunt dolore\",\n      \"name\": \"eu proident mollit laborum\",\n      \"type\": \"occaecat Lorem nisi enim\"\n    },\n    {\n      \"factoryId\": -51115679,\n      \"reconciled\": true,\n      \"isDefault\": \"cillum\",\n      \"note\": \"eu enim\",\n      \"containerCount\": 91428062,\n      \"netElementCount\": 85700861,\n      \"isAutoBuilder\": \"ea id\",\n      \"dateTimeInLongFormat\": 15253064,\n      \"user\": \"non sunt anim in\",\n      \"config\": \"labore\",\n      \"id\": 37592883,\n      \"isDraft\": false,\n      \"key\": \"nisi enim aliqua fugiat\",\n      \"name\": \"in id\",\n      \"type\": \"non consequat\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/searchConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"searchConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"aute voluptate id est dolore\",\n  \"errorMessage\": \"dolor culpa ip\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/searchConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"searchConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/searchConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"searchConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to update a configlet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"pariatur in deserunt\",\n  \"config\": \"dolor est deserunt consectetur\",\n  \"key\": \"officia cillum Duis nostrud\",\n  \"reconciled\": false,\n  \"waitForTaskIds\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/updateConfiglet.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"updateConfiglet.do"
							]
						},
						"description": "This API is used to update a configlet"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"pariatur in deserunt\",\n  \"config\": \"dolor est deserunt consectetur\",\n  \"key\": \"officia cillum Duis nostrud\",\n  \"reconciled\": false,\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/updateConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"updateConfiglet.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"pariatur in deserunt\",\n  \"config\": \"dolor est deserunt consectetur\",\n  \"key\": \"officia cillum Duis nostrud\",\n  \"reconciled\": false,\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/updateConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"updateConfiglet.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sunt aliquip\",\n  \"errorMessage\": \"cillum \"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"pariatur in deserunt\",\n  \"config\": \"dolor est deserunt consectetur\",\n  \"key\": \"officia cillum Duis nostrud\",\n  \"reconciled\": false,\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/updateConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"updateConfiglet.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"pariatur in deserunt\",\n  \"config\": \"dolor est deserunt consectetur\",\n  \"key\": \"officia cillum Duis nostrud\",\n  \"reconciled\": false,\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/updateConfiglet.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"updateConfiglet.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to update configlet builder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"nisi irure Lorem dolore qui\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/updateConfigletBuilder.do?isDraft=dolore proi&id=dolore proi&action=save",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"updateConfigletBuilder.do"
							],
							"query": [
								{
									"key": "isDraft",
									"value": "dolore proi",
									"description": "(Required) Specifies whether draft or not"
								},
								{
									"key": "id",
									"value": "dolore proi",
									"description": "(Required) id of the builder to be updated"
								},
								{
									"key": "action",
									"value": "save",
									"description": "action should be save or saveas"
								}
							]
						},
						"description": "This API is used to update configlet builder"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nisi irure Lorem dolore qui\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/updateConfigletBuilder.do?isDraft=dolore proi&id=dolore proi&action=save",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"updateConfigletBuilder.do"
									],
									"query": [
										{
											"key": "isDraft",
											"value": "dolore proi"
										},
										{
											"key": "id",
											"value": "dolore proi"
										},
										{
											"key": "action",
											"value": "save"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"eventId\": \"nulla laboris commodo dolor\",\n  \"data\": \"dolor id dolore ullamco\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nisi irure Lorem dolore qui\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/updateConfigletBuilder.do?isDraft=dolore proi&id=dolore proi&action=save",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"updateConfigletBuilder.do"
									],
									"query": [
										{
											"key": "isDraft",
											"value": "dolore proi"
										},
										{
											"key": "id",
											"value": "dolore proi"
										},
										{
											"key": "action",
											"value": "save"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laborum labore\",\n  \"errorMessage\": \"cupidatat id veniam\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nisi irure Lorem dolore qui\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/updateConfigletBuilder.do?isDraft=dolore proi&id=dolore proi&action=save",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"updateConfigletBuilder.do"
									],
									"query": [
										{
											"key": "isDraft",
											"value": "dolore proi"
										},
										{
											"key": "id",
											"value": "dolore proi"
										},
										{
											"key": "action",
											"value": "save"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"nisi irure Lorem dolore qui\",\n  \"data\": {\n    \"formList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mainScript\": {\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"waitForTaskIds\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/updateConfigletBuilder.do?isDraft=dolore proi&id=dolore proi&action=save",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"updateConfigletBuilder.do"
									],
									"query": [
										{
											"key": "isDraft",
											"value": "dolore proi"
										},
										{
											"key": "id",
											"value": "dolore proi"
										},
										{
											"key": "action",
											"value": "save"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to validate configlet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"netElementId\": \"nulla minim laboris\",\n  \"config\": \"consectetur Ut Lorem aliquip\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/validateConfig.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"validateConfig.do"
							]
						},
						"description": "This API is used to validate a configlet"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"nulla minim laboris\",\n  \"config\": \"consectetur Ut Lorem aliquip\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/validateConfig.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateConfig.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"warnings\": [\n    {\n      \"lineNo\": -88499307,\n      \"error\": \"in id in\"\n    },\n    {\n      \"lineNo\": 59961197,\n      \"error\": \"dolor est quis\"\n    }\n  ],\n  \"warningCount\": -82470082,\n  \"errors\": [\n    {\n      \"lineNo\": 73946016,\n      \"warning\": \"qui nostrud tempor\"\n    },\n    {\n      \"lineNo\": 64084516,\n      \"warning\": \"fugiat laborum\"\n    }\n  ],\n  \"errorCount\": 48279387\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"nulla minim laboris\",\n  \"config\": \"consectetur Ut Lorem aliquip\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/validateConfig.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateConfig.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eiusmod nisi nulla et laboris\",\n  \"errorMessage\": \"cupida\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"nulla minim laboris\",\n  \"config\": \"consectetur Ut Lorem aliquip\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/validateConfig.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateConfig.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"nulla minim laboris\",\n  \"config\": \"consectetur Ut Lorem aliquip\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/validateConfig.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateConfig.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to validate a configlet history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/configlet/validateConfigHistory.do?historyId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"validateConfigHistory.do"
							],
							"query": [
								{
									"key": "historyId",
									"value": "dolore proi",
									"description": "(Required) holds history id"
								}
							]
						},
						"description": "This API is used to validate a configlet history"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/validateConfigHistory.do?historyId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateConfigHistory.do"
									],
									"query": [
										{
											"key": "historyId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"newConfig\": [\n    {\n      \"code\": \"sint aute fugiat\",\n      \"blockId\": \"esse sunt\",\n      \"command\": \"no\",\n      \"rowId\": 52541848\n    },\n    {\n      \"code\": \"Ut aliqua anim proident\",\n      \"blockId\": \"est consequat tempor pariatur velit\",\n      \"command\": \"sunt sed eu\",\n      \"rowId\": 49803174\n    }\n  ],\n  \"oldConfig\": [\n    {\n      \"code\": \"Duis sint occaecat\",\n      \"blockId\": \"nostrud in et dolore sint\",\n      \"command\": \"voluptate consequat\",\n      \"rowId\": 56411145\n    },\n    {\n      \"code\": \"eu aute dolor nostrud\",\n      \"blockId\": \"Lorem labore minim pariatur\",\n      \"command\": \"velit quis tempor cillum\",\n      \"rowId\": -99363524\n    }\n  ],\n  \"new\": -74494320,\n  \"total\": -96713204,\n  \"mismatch\": 13098629,\n  \"deleted\": 58604566\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/validateConfigHistory.do?historyId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateConfigHistory.do"
									],
									"query": [
										{
											"key": "historyId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"aute nisi pariatur\",\n  \"errorMessage\": \"enim reprehenderit pariatur elit\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/validateConfigHistory.do?historyId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateConfigHistory.do"
									],
									"query": [
										{
											"key": "historyId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/configlet/validateConfigHistory.do?historyId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateConfigHistory.do"
									],
									"query": [
										{
											"key": "historyId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to validate  the configlet builder script",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": \"dolore in enim\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/configlet/validateScript.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"configlet",
								"validateScript.do"
							]
						},
						"description": "This API is used to validate  the configlet builder script"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"dolore in enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/validateScript.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateScript.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": \"ex exercitation dolore aliqua\",\n  \"status\": \"consequat sunt\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"dolore in enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/validateScript.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateScript.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"consequat laboris enim\",\n  \"errorMessage\": \"u\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"dolore in enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/validateScript.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateScript.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"dolore in enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/configlet/validateScript.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"configlet",
										"validateScript.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "event",
			"item": [
				{
					"name": "This API is used to cancel an event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/event/cancelEvent.do?eventId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event",
								"cancelEvent.do"
							],
							"query": [
								{
									"key": "eventId",
									"value": "dolore proi",
									"description": "(Required) Unique 'parent event id' of an event to be cancelled"
								}
							]
						},
						"description": "Cancels the selected event.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. It is only meant for internal use by various provisioning UIs and will be removed in a future release."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/cancelEvent.do?eventId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"cancelEvent.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/cancelEvent.do?eventId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"cancelEvent.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"id exe\",\n  \"errorMessage\": \"occa\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/cancelEvent.do?eventId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"cancelEvent.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/cancelEvent.do?eventId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"cancelEvent.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get all the events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/event/getAllEvents.do?startIndex=-75690638&endIndex=-75690638&isCompletedRequired=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event",
								"getAllEvents.do"
							],
							"query": [
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Starting index of pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Ending index of pagination. If end index is 0 then all records will be returned"
								},
								{
									"key": "isCompletedRequired",
									"value": "true",
									"description": "(Required) If true then all events will be retrieved else, other events except completed & cancelled events will be retrieved"
								}
							]
						},
						"description": "Fetches all events from CVP.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. It is only meant for internal use by various provisioning UIs and will be removed in a future release."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getAllEvents.do?startIndex=-75690638&endIndex=-75690638&isCompletedRequired=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getAllEvents.do"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "isCompletedRequired",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -80128546,\n  \"data\": [\n    {\n      \"key\": \"esse culpa nisi\",\n      \"parentKey\": \"sunt\",\n      \"objectId\": \"voluptate magna culpa nostrud\",\n      \"objectName\": \"consectetur id\",\n      \"objectType\": \"minim proident\",\n      \"eventType\": \"ut Duis\",\n      \"user\": \"tempor\",\n      \"startDateLongFormat\": 42616230,\n      \"endDateLongFormat\": 49309870,\n      \"description\": \"elit eu sint minim\",\n      \"userCredentials\": \"incididunt id elit\",\n      \"total\": -40193097,\n      \"cancelled\": -68957686,\n      \"processed\": 66334501,\n      \"inprogress\": -81501341,\n      \"errors\": 26005821,\n      \"warning\": 73905850,\n      \"status\": \"esse in\",\n      \"message\": \"ad laboris\",\n      \"data\": {},\n      \"data1\": {},\n      \"isCancelInitiated\": false,\n      \"isNotificationNeeded\": true,\n      \"id\": -27148316,\n      \"factoryId\": 94029812,\n      \"ipAddress\": \"cupidatat aliquip veniam\",\n      \"fqdn\": \"quis labore\"\n    },\n    {\n      \"key\": \"est com\",\n      \"parentKey\": \"Duis non\",\n      \"objectId\": \"irure fugiat\",\n      \"objectName\": \"labore aute Excepteu\",\n      \"objectType\": \"culpa exercitation ad dolore\",\n      \"eventType\": \"dolor nis\",\n      \"user\": \"dolor proident ullamco\",\n      \"startDateLongFormat\": 68582776,\n      \"endDateLongFormat\": -20392679,\n      \"description\": \"ut irure velit deserunt\",\n      \"userCredentials\": \"veniam Excepteur\",\n      \"total\": -56819179,\n      \"cancelled\": -54940074,\n      \"processed\": -71065828,\n      \"inprogress\": -18283532,\n      \"errors\": 10065523,\n      \"warning\": -16352752,\n      \"status\": \"labore\",\n      \"message\": \"dolore exercitation ipsum\",\n      \"data\": {},\n      \"data1\": {},\n      \"isCancelInitiated\": false,\n      \"isNotificationNeeded\": true,\n      \"id\": -58763308,\n      \"factoryId\": -98292043,\n      \"ipAddress\": \"cupidatat consectetur\",\n      \"fqdn\": \"ipsum ni\"\n    }\n  ],\n  \"externalEvents\": {\n    \"pendingTask\": 99959554,\n    \"startDateLongFormat\": -37823559\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getAllEvents.do?startIndex=-75690638&endIndex=-75690638&isCompletedRequired=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getAllEvents.do"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "isCompletedRequired",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"Ut incididunt\",\n  \"errorMessage\": \"sed sit dolore id\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getAllEvents.do?startIndex=-75690638&endIndex=-75690638&isCompletedRequired=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getAllEvents.do"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "isCompletedRequired",
											"value": "true"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getAllEvents.do?startIndex=-75690638&endIndex=-75690638&isCompletedRequired=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getAllEvents.do"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "isCompletedRequired",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get all error events associated with a parent event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/event/getErrorEvents.do?queryparam=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event",
								"getErrorEvents.do"
							],
							"query": [
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "The query parameter. If it is empty, then all error events will be returned"
								},
								{
									"key": "eventId",
									"value": "dolore proi",
									"description": "(Required) Unique id of a parent event"
								},
								{
									"key": "eventType",
									"value": "dolore proi",
									"description": "(Required) Type of the event. For eg : 'compliancecheck', 'containerreconcile'. eventTypes like 'backup_restore' will return empty data since those Events donot contain error events"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Starting index of pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Ending index of pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "Fetches all error events associated with a parent event.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. It is only meant for internal use by various provisioning UIs and will be removed in a future release."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getErrorEvents.do?queryparam=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getErrorEvents.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "eventType",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 14182038,\n  \"data\": {\n    \"eventList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mapper\": {},\n    \"objectName\": \"commodo est\"\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getErrorEvents.do?queryparam=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getErrorEvents.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "eventType",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laboris veniam \",\n  \"errorMessage\": \"voluptate\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getErrorEvents.do?queryparam=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getErrorEvents.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "eventType",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getErrorEvents.do?queryparam=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getErrorEvents.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "eventType",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the event data by it's event id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/event/getEventById.do?eventId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event",
								"getEventById.do"
							],
							"query": [
								{
									"key": "eventId",
									"value": "dolore proi",
									"description": "(Required) Unique id of child or parent event"
								}
							]
						},
						"description": "Fetches the event associated with the event id.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. It is only meant for internal use by various provisioning UIs and will be removed in a future release."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventById.do?eventId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventById.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"key\": \"tempor\",\n    \"parentKey\": \"consectetur ut\",\n    \"objectId\": \"reprehenderit dolore tempor\",\n    \"objectName\": \"consectetur sint elit eu consequat\",\n    \"objectType\": \"est laborum\",\n    \"eventType\": \"Lorem eiusmod ipsum ea nostrud\",\n    \"user\": \"eu laboris\",\n    \"startDateLongFormat\": 32100693,\n    \"endDateLongFormat\": 52760162,\n    \"description\": \"eu in \",\n    \"userCredentials\": \"Duis quis id eiusmod cupidatat\",\n    \"total\": -37145097,\n    \"cancelled\": -96410522,\n    \"processed\": 29510632,\n    \"inprogress\": 36506183,\n    \"errors\": 10255720,\n    \"warning\": 72003643,\n    \"status\": \"incididunt in\",\n    \"message\": \"in sed fugiat exercitation\",\n    \"data\": {},\n    \"data1\": {},\n    \"isCancelInitiated\": true,\n    \"isNotificationNeeded\": true,\n    \"id\": 97296246,\n    \"factoryId\": 42293245,\n    \"ipAddress\": \"voluptate con\",\n    \"fqdn\": \"et\"\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventById.do?eventId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventById.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in culpa Excepteur\",\n  \"errorMessage\": \"laboris voluptate sit ipsum\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventById.do?eventId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventById.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventById.do?eventId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventById.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get child events of a parent event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/event/getEventDataById.do?eventId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event",
								"getEventDataById.do"
							],
							"query": [
								{
									"key": "eventId",
									"value": "dolore proi",
									"description": "(Required) Unique id of the parent event"
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "The query parameter. If this value is empty, then all child events will be returned"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Starting index of pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Ending index of pagination.If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "Fetches all child event data of a parent event.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. It is only meant for internal use by various provisioning UIs and will be removed in a future release."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventDataById.do?eventId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventDataById.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -56951629,\n  \"data\": [\n    {\n      \"key\": \"Duis ipsum\",\n      \"parentKey\": \"laboris aliqua fugiat\",\n      \"objectId\": \"laboris cillum sint in nostrud\",\n      \"objectName\": \"deserunt fugiat sunt\",\n      \"objectType\": \"eiusm\",\n      \"eventType\": \"Duis eiusmod adipisicing\",\n      \"user\": \"id et\",\n      \"startDateLongFormat\": 67357102,\n      \"endDateLongFormat\": -93139910,\n      \"description\": \"aliqua in adipisicing\",\n      \"userCredentials\": \"pariatur Ut enim irure\",\n      \"total\": -35249397,\n      \"cancelled\": 27192240,\n      \"processed\": -3144352,\n      \"inprogress\": -78732472,\n      \"errors\": 48473557,\n      \"warning\": -98414656,\n      \"status\": \"sint velit cillum adipisicing id\",\n      \"message\": \"cupidata\",\n      \"data\": {},\n      \"data1\": {},\n      \"isCancelInitiated\": false,\n      \"isNotificationNeeded\": false,\n      \"id\": 41380668,\n      \"factoryId\": -17770768,\n      \"ipAddress\": \"labore\",\n      \"fqdn\": \"velit in\"\n    },\n    {\n      \"key\": \"do anim eiusmod dolor\",\n      \"parentKey\": \"in aute \",\n      \"objectId\": \"culpa irure eu\",\n      \"objectName\": \"non incididunt Lorem\",\n      \"objectType\": \"magna consectetur\",\n      \"eventType\": \"amet nulla\",\n      \"user\": \"ea consectetur\",\n      \"startDateLongFormat\": -72181644,\n      \"endDateLongFormat\": 88162634,\n      \"description\": \"laboris ut ipsum et culpa\",\n      \"userCredentials\": \"et exercitation est\",\n      \"total\": -36454696,\n      \"cancelled\": -97982025,\n      \"processed\": -27702678,\n      \"inprogress\": -44900214,\n      \"errors\": -8201939,\n      \"warning\": -3371868,\n      \"status\": \"qui nostrud\",\n      \"message\": \"laborum magna enim Excepteur\",\n      \"data\": {},\n      \"data1\": {},\n      \"isCancelInitiated\": true,\n      \"isNotificationNeeded\": true,\n      \"id\": 8834032,\n      \"factoryId\": 93525500,\n      \"ipAddress\": \"quis dolore\",\n      \"fqdn\": \"anim eu labore nulla\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventDataById.do?eventId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventDataById.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sit elit\",\n  \"errorMessage\": \"esse consectetur tempor \"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventDataById.do?eventId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventDataById.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventDataById.do?eventId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventDataById.do"
									],
									"query": [
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get all event data associated with a parent eventId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/event/getEventInfo.do?queryparam=dolore proi&requiredEventStatus=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event",
								"getEventInfo.do"
							],
							"query": [
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "The query parameter. If it is empty, then all events will be returned"
								},
								{
									"key": "requiredEventStatus",
									"value": "dolore proi",
									"description": "(Required) Status of the event. For eg : 'mismatch', 'errors', 'completed', 'pending'"
								},
								{
									"key": "eventId",
									"value": "dolore proi",
									"description": "(Required) Unique id of a parent event"
								},
								{
									"key": "eventType",
									"value": "dolore proi",
									"description": "(Required) Type of the event. For eg : 'compliancecheck', 'containerreconcile', 'backup_restore'"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Starting index of pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Ending index of pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "Fetches all events based on the status.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. It is only meant for internal use by various provisioning UIs and will be removed in a future release."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventInfo.do?queryparam=dolore proi&requiredEventStatus=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventInfo.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "requiredEventStatus",
											"value": "dolore proi"
										},
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "eventType",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -64448058,\n  \"data\": {\n    \"eventList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"mapper\": {},\n    \"objectName\": \"quis minim laboris anim\"\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventInfo.do?queryparam=dolore proi&requiredEventStatus=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventInfo.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "requiredEventStatus",
											"value": "dolore proi"
										},
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "eventType",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laboris veniam \",\n  \"errorMessage\": \"voluptate\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventInfo.do?queryparam=dolore proi&requiredEventStatus=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventInfo.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "requiredEventStatus",
											"value": "dolore proi"
										},
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "eventType",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/getEventInfo.do?queryparam=dolore proi&requiredEventStatus=dolore proi&eventId=dolore proi&eventType=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"getEventInfo.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "requiredEventStatus",
											"value": "dolore proi"
										},
										{
											"key": "eventId",
											"value": "dolore proi"
										},
										{
											"key": "eventType",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to clear notifications count after a user has viewed the notifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/event/markAsRead.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event",
								"markAsRead.do"
							]
						},
						"description": "Clears notification count.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. It is only meant for internal use by various provisioning UIs and will be removed in a future release."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/markAsRead.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"markAsRead.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/markAsRead.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"markAsRead.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"nisi dolor dolor dolore\",\n  \"errorMessage\": \"aute anim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/markAsRead.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"markAsRead.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/event/markAsRead.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event",
										"markAsRead.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "image",
			"item": [
				{
					"name": "v2",
					"item": [
						{
							"name": "This api is used to get the image bundle by name.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/image/v2/getImageBundleByName.do?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"v2",
										"getImageBundleByName.do"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi",
											"description": "(Required) The image bundle name."
										}
									]
								},
								"description": "Returns the image bundle available in CVP for the specified image bundle name."
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/image/v2/getImageBundleByName.do?name=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"image",
												"v2",
												"getImageBundleByName.do"
											],
											"query": [
												{
													"key": "name",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"key\": \"laboris\",\n  \"name\": \"et magna irure\",\n  \"user\": \"exercitation voluptate\",\n  \"isCertifiedImageBundle\": \"minim aute pariatur elit\",\n  \"imageIds\": [\n    \"consectetur dolore in qui\",\n    \"veniam sunt Lorem non\"\n  ],\n  \"images\": [\n    {\n      \"key\": \"cupidatat sit fugiat\",\n      \"name\": \"mollit occaecat fugiat nostrud\",\n      \"imageId\": \"pariatur consequ\",\n      \"imageFileName\": \"proident sed\",\n      \"imageSize\": \"eu incididunt sed aliqua eiusmod\",\n      \"user\": \"voluptate qui ullamco dolor\",\n      \"uploadedDateinLongFormat\": -4405885,\n      \"isHotFix\": \"nisi commodo cillum\",\n      \"md5\": \"dolor magna incididunt\",\n      \"version\": \"ut veniam magna ex\",\n      \"isRebootRequired\": \"in ea consequat commodo\",\n      \"swiVarient\": \"ipsum ad\",\n      \"swiMaxHwepoch\": \"mollit sit\",\n      \"sha512\": \"sunt\",\n      \"imageFile\": \"ea minim veniam\",\n      \"factoryId\": -39740944,\n      \"id\": -22554398\n    },\n    {\n      \"key\": \"\",\n      \"name\": \"laborum labor\",\n      \"imageId\": \"incididunt eiusmod dolor ut\",\n      \"imageFileName\": \"enim ullamco deserunt nulla\",\n      \"imageSize\": \"nisi est tempor in adipisicing\",\n      \"user\": \"est fugiat ut et\",\n      \"uploadedDateinLongFormat\": -63549425,\n      \"isHotFix\": \"cupidatat pariatur adipisicing Duis\",\n      \"md5\": \"in nulla\",\n      \"version\": \"commodo ad\",\n      \"isRebootRequired\": \"non incididunt deserunt\",\n      \"swiVarient\": \"laboris adipisicing veniam id\",\n      \"swiMaxHwepoch\": \"fugiat culpa proident dolor\",\n      \"sha512\": \"aliquip quis\",\n      \"imageFile\": \"sit aute\",\n      \"factoryId\": -72310165,\n      \"id\": -80500936\n    }\n  ],\n  \"appliedContainersCount\": -59297632,\n  \"appliedDevicesCount\": -71860219,\n  \"note\": \"incididunt\",\n  \"uploadedBy\": \"sint elit sed magna\",\n  \"updatedDateInLongFormat\": 2383792\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/image/v2/getImageBundleByName.do?name=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"image",
												"v2",
												"getImageBundleByName.do"
											],
											"query": [
												{
													"key": "name",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"eiusmod sint Excepteur velit\",\n  \"errorMessage\": \"sit eu Duis ea\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/image/v2/getImageBundleByName.do?name=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"image",
												"v2",
												"getImageBundleByName.do"
											],
											"query": [
												{
													"key": "name",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/image/v2/getImageBundleByName.do?name=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"image",
												"v2",
												"getImageBundleByName.do"
											],
											"query": [
												{
													"key": "name",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "This api is used to get all the image bundles.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/image/v2/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"v2",
										"getImageBundles.do"
									],
									"query": [
										{
											"key": "objectId",
											"value": "dolore proi",
											"description": "The netelement id/container id used to fetch associated image bundle."
										},
										{
											"key": "objectType",
											"value": "dolore proi",
											"description": "It can be netelement or container. Used to fetch the image bundle associated to the netelement or container."
										},
										{
											"key": "queryparam",
											"value": "dolore proi",
											"description": "The query parameter for search."
										},
										{
											"key": "startIndex",
											"value": "-75690638",
											"description": "(Required) Start index for the pagination."
										},
										{
											"key": "endIndex",
											"value": "-75690638",
											"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned."
										}
									]
								},
								"description": "Returns all the image bundles available in CVP."
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/image/v2/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"image",
												"v2",
												"getImageBundles.do"
											],
											"query": [
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "queryparam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": -14182432,\n  \"data\": [\n    {\n      \"key\": \"ni\",\n      \"name\": \"mollit ullamco et exercitation enim\",\n      \"isCertifiedImageBundle\": \"incididunt ipsum\",\n      \"imageIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"images\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"appliedContainersCount\": 48073086,\n      \"appliedDevicesCount\": 46442706,\n      \"note\": \"exercitation\",\n      \"uploadedBy\": \"laborum reprehenderit culpa cupidatat\",\n      \"updatedDateInLongFormat\": -45010265\n    },\n    {\n      \"key\": \"ipsum ut\",\n      \"name\": \"anim consequat cillum\",\n      \"isCertifiedImageBundle\": \"tempor anim\",\n      \"imageIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"images\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"appliedContainersCount\": 93238368,\n      \"appliedDevicesCount\": -53801470,\n      \"note\": \"cillum Excepteur esse irure do\",\n      \"uploadedBy\": \"dolor quis veniam proide\",\n      \"updatedDateInLongFormat\": -47548873\n    }\n  ],\n  \"assignedImageBundleId\": \"eiusmod ex\",\n  \"imageBundleMapper\": {\n    \"imageBundle_id\": {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/image/v2/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"image",
												"v2",
												"getImageBundles.do"
											],
											"query": [
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "queryparam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"laborum officia dolor nisi\",\n  \"errorMessage\": \"consequat ea dolor ir\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/image/v2/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"image",
												"v2",
												"getImageBundles.do"
											],
											"query": [
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "queryparam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/image/v2/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"image",
												"v2",
												"getImageBundles.do"
											],
											"query": [
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "queryparam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						}
					]
				},
				{
					"name": "This api is used to add/upload an image into CVP.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) File to upload.",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/image/addImage.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"addImage.do"
							]
						},
						"description": "Adds the uploaded image file to data store."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) File to upload.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/image/addImage.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"addImage.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": \"enim non n\",\n  \"imageId\": \"nulla elit do Excepteur\",\n  \"name\": \"irure\",\n  \"sha512\": \"magna aliquip laborum\",\n  \"swiVarient\": \"minim occaecat\",\n  \"imageSize\": \"adipisicing in dolore laboris\",\n  \"version\": \"ipsum reprehenderit est Ut eu\",\n  \"md5\": \"elit fugiat minim\",\n  \"swiMaxHwepoch\": \"dolor tempor magna sit\",\n  \"isRebootRequired\": \"nostrud quis sunt\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) File to upload.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/image/addImage.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"addImage.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"cillum eni\",\n  \"errorMessage\": \"ut minim in\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) File to upload.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/image/addImage.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"addImage.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) File to upload.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/image/addImage.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"addImage.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to add notes to the image bundle.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"laborum veniam aute\",\n  \"note\": \"anim minim\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/image/addNotesToImageBundle.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"addNotesToImageBundle.do"
							]
						},
						"description": "Adds notes to the image bundle available in CVP."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum veniam aute\",\n  \"note\": \"anim minim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/addNotesToImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"addNotesToImageBundle.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum veniam aute\",\n  \"note\": \"anim minim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/addNotesToImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"addNotesToImageBundle.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"voluptate Lorem\",\n  \"errorMessage\": \"sed\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum veniam aute\",\n  \"note\": \"anim minim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/addNotesToImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"addNotesToImageBundle.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum veniam aute\",\n  \"note\": \"anim minim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/addNotesToImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"addNotesToImageBundle.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to cancel the uploaded image file or image bundle.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": \"dolore in enim\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/image/cancelImages.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"cancelImages.do"
							]
						},
						"description": "It calls the Image management service to discard/cancel the uploaded image/image bundle before save."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"dolore in enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/cancelImages.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"cancelImages.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"dolore in enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/cancelImages.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"cancelImages.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ipsum dolore ex\",\n  \"errorMessage\": \"Excepteur aliqua nostrud\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"dolore in enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/cancelImages.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"cancelImages.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": \"dolore in enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/cancelImages.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"cancelImages.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to delete the uploaded image bundle from CVP.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"est incididunt \",\n      \"key\": \"mollit dolore incididunt deserunt\"\n    },\n    {\n      \"name\": \"magna aliquip\",\n      \"key\": \"sint esse\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/image/deleteImageBundles.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"deleteImageBundles.do"
							]
						},
						"description": "Deletes the already uploaded image bundle from data store."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"name\": \"voluptate\",\n      \"key\": \"consequat sunt pariatur\"\n    },\n    {\n      \"name\": \"culpa in\",\n      \"key\": \"Lorem sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/deleteImageBundles.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"deleteImageBundles.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"name\": \"voluptate\",\n      \"key\": \"consequat sunt pariatur\"\n    },\n    {\n      \"name\": \"culpa in\",\n      \"key\": \"Lorem sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/deleteImageBundles.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"deleteImageBundles.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sunt reprehenderit cillum\",\n  \"errorMessage\": \"do\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"name\": \"voluptate\",\n      \"key\": \"consequat sunt pariatur\"\n    },\n    {\n      \"name\": \"culpa in\",\n      \"key\": \"Lorem sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/deleteImageBundles.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"deleteImageBundles.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"name\": \"voluptate\",\n      \"key\": \"consequat sunt pariatur\"\n    },\n    {\n      \"name\": \"culpa in\",\n      \"key\": \"Lorem sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/deleteImageBundles.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"deleteImageBundles.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to get a applied device count for an image bundle.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/image/getAppliedDeviceCount.do?imageBundleId=dolore proi&imageIdList=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"getAppliedDeviceCount.do"
							],
							"query": [
								{
									"key": "imageBundleId",
									"value": "dolore proi",
									"description": "(Required) It holds the ImageBundleId."
								},
								{
									"key": "imageIdList",
									"value": "dolore proi",
									"description": "(Required) It holds the updated list of imageIds to be saved. InputFormat: imageId1,imageId2,imageId3,..."
								}
							]
						},
						"description": "Gets the count of devices to which the image bundle is applied."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getAppliedDeviceCount.do?imageBundleId=dolore proi&imageIdList=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getAppliedDeviceCount.do"
									],
									"query": [
										{
											"key": "imageBundleId",
											"value": "dolore proi"
										},
										{
											"key": "imageIdList",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": 0\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getAppliedDeviceCount.do?imageBundleId=dolore proi&imageIdList=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getAppliedDeviceCount.do"
									],
									"query": [
										{
											"key": "imageBundleId",
											"value": "dolore proi"
										},
										{
											"key": "imageIdList",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"esse anim\",\n  \"errorMessage\": \"minim Excepteur\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getAppliedDeviceCount.do?imageBundleId=dolore proi&imageIdList=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getAppliedDeviceCount.do"
									],
									"query": [
										{
											"key": "imageBundleId",
											"value": "dolore proi"
										},
										{
											"key": "imageIdList",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getAppliedDeviceCount.do?imageBundleId=dolore proi&imageIdList=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getAppliedDeviceCount.do"
									],
									"query": [
										{
											"key": "imageBundleId",
											"value": "dolore proi"
										},
										{
											"key": "imageIdList",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to fetch the containers to which the image bundle is applied.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/image/getImageBundleAppliedContainers.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"getImageBundleAppliedContainers.do"
							],
							"query": [
								{
									"key": "imageName",
									"value": "dolore proi",
									"description": "(Required) The image bundle name."
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination."
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned."
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "The query parameter"
								}
							]
						},
						"description": "Returns the container details to which the image bundle is applied."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleAppliedContainers.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleAppliedContainers.do"
									],
									"query": [
										{
											"key": "imageName",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -88017386,\n  \"data\": [\n    {\n      \"containerName\": \"dolore magna enim\",\n      \"appliedBy\": \"consequat\",\n      \"appliedDate\": 74337295,\n      \"hostName\": \"ea minim pariatur\",\n      \"ipAddress\": \"dolore\",\n      \"totalDevicesCount\": -99358949\n    },\n    {\n      \"containerName\": \"ad\",\n      \"appliedBy\": \"esse officia mollit\",\n      \"appliedDate\": 53345498,\n      \"hostName\": \"consequat voluptate\",\n      \"ipAddress\": \"et culpa irure ut\",\n      \"totalDevicesCount\": 27545468\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleAppliedContainers.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleAppliedContainers.do"
									],
									"query": [
										{
											"key": "imageName",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"velit fugiat aliquip proident do\",\n  \"errorMessage\": \"occaecat proident d\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleAppliedContainers.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleAppliedContainers.do"
									],
									"query": [
										{
											"key": "imageName",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleAppliedContainers.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleAppliedContainers.do"
									],
									"query": [
										{
											"key": "imageName",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to fetch the devices to which the image bundle is applied.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/image/getImageBundleAppliedDevices.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"getImageBundleAppliedDevices.do"
							],
							"query": [
								{
									"key": "imageName",
									"value": "dolore proi",
									"description": "(Required) The image bundle name."
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination."
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned."
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "The query parameter."
								}
							]
						},
						"description": "Returns the netelement details to which the image bundle is applied."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleAppliedDevices.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleAppliedDevices.do"
									],
									"query": [
										{
											"key": "imageName",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -56612944,\n  \"data\": [\n    {\n      \"containerName\": \"adipisicing sunt laborum ullamco occaecat\",\n      \"appliedBy\": \"aliqua\",\n      \"appliedDate\": 84442886,\n      \"hostName\": \"est laborum Excepteur\",\n      \"ipAddress\": \"irure occaecat nostrud ullamco\",\n      \"totalDevicesCount\": 5108728\n    },\n    {\n      \"containerName\": \"voluptate in\",\n      \"appliedBy\": \"exercitation \",\n      \"appliedDate\": -25822319,\n      \"hostName\": \"adipisicing\",\n      \"ipAddress\": \"a\",\n      \"totalDevicesCount\": -84213879\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleAppliedDevices.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleAppliedDevices.do"
									],
									"query": [
										{
											"key": "imageName",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"velit fugiat aliquip proident do\",\n  \"errorMessage\": \"occaecat proident d\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleAppliedDevices.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleAppliedDevices.do"
									],
									"query": [
										{
											"key": "imageName",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleAppliedDevices.do?imageName=dolore proi&startIndex=-75690638&endIndex=-75690638&queryparam=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleAppliedDevices.do"
									],
									"query": [
										{
											"key": "imageName",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to get the image bundle by name.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/image/getImageBundleByName.do?name=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"getImageBundleByName.do"
							],
							"query": [
								{
									"key": "name",
									"value": "dolore proi",
									"description": "(Required) The image bundle name."
								}
							]
						},
						"description": "Returns the image bundle available in CVP for the specified image bundle name."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleByName.do?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleByName.do"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"Excepteur dolore\",\n  \"name\": \"do Excepteur\",\n  \"isCertifiedImage\": \"ut minim qui\",\n  \"images\": [\n    {\n      \"key\": \"voluptate minim pariatur et cupidatat\",\n      \"name\": \"amet aliqua\",\n      \"imageId\": \"deserunt Ut dolore sunt\",\n      \"imageFileName\": \"esse sit incididunt eu\",\n      \"imageSize\": \"ip\",\n      \"user\": \"minim sed reprehenderit ullamco ut\",\n      \"uploadedDateinLongFormat\": -18234481,\n      \"isHotFix\": \"sint\",\n      \"md5\": \"Excepteur ex velit culpa eu\",\n      \"version\": \"id\",\n      \"isRebootRequired\": \"aliquip laborum ipsum magna quis\",\n      \"swiVarient\": \"sint\",\n      \"swiMaxHwepoch\": \"aliqua in sit sunt\",\n      \"sha512\": \"Excepteur\",\n      \"imageFile\": \"elit dolor tempor minim\",\n      \"factoryId\": -47185884,\n      \"id\": -80328017\n    },\n    {\n      \"key\": \"aute dolore veniam amet aliqua\",\n      \"name\": \"deserunt voluptate eiusmod ipsum consequat\",\n      \"imageId\": \"ad\",\n      \"imageFileName\": \"fug\",\n      \"imageSize\": \"Lorem Duis adipisicing\",\n      \"user\": \"exercitation cupidatat ea aliquip eu\",\n      \"uploadedDateinLongFormat\": 68651396,\n      \"isHotFix\": \"nostrud sit Duis\",\n      \"md5\": \"sit nulla voluptate ex tempor\",\n      \"version\": \"proident ipsum do sint voluptate\",\n      \"isRebootRequired\": \"occaecat sit\",\n      \"swiVarient\": \"in officia\",\n      \"swiMaxHwepoch\": \"in\",\n      \"sha512\": \"dolore ea ut minim es\",\n      \"imageFile\": \"cillum labore\",\n      \"factoryId\": 37559999,\n      \"id\": -48358894\n    }\n  ],\n  \"appliedContainersCount\": -98845173,\n  \"appliedDevicesCount\": -17690629,\n  \"uploadedBy\": \"ullamco magna in sint\",\n  \"updatedTimeInLongFormat\": 99589787\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleByName.do?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleByName.do"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eiusmod sint Excepteur velit\",\n  \"errorMessage\": \"sit eu Duis ea\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleByName.do?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleByName.do"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundleByName.do?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundleByName.do"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to get all the image bundles.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/image/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"getImageBundles.do"
							],
							"query": [
								{
									"key": "objectId",
									"value": "dolore proi",
									"description": "The netelement id/container id used to fetch associated image bundle."
								},
								{
									"key": "objectType",
									"value": "dolore proi",
									"description": "It can be netelement or container. Used to fetch the image bundle associated to the netelement or container."
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "The query parameter for search."
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination."
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned."
								}
							]
						},
						"description": "Returns all the image bundles available in CVP."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundles.do"
									],
									"query": [
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -59799401,\n  \"data\": [\n    {\n      \"key\": \"sint aute\",\n      \"name\": \"magna Excepteur\",\n      \"isCertifiedImageBundle\": \"eiusmod cupidatat occaecat\",\n      \"note\": \"qui ipsum\",\n      \"user\": \"dolor do magna\",\n      \"updatedDateinLongFormat\": -65436565,\n      \"appliedContainersCount\": 66026653,\n      \"appliedDevicesCount\": -93800227,\n      \"imageIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"factoryId\": -6540109,\n      \"id\": 22055049\n    },\n    {\n      \"key\": \"cillum ullamco aute est officia\",\n      \"name\": \"dolor est\",\n      \"isCertifiedImageBundle\": \"dolore sed labore c\",\n      \"note\": \"voluptate reprehenderit proident adipisicing\",\n      \"user\": \"aute\",\n      \"updatedDateinLongFormat\": -61474324,\n      \"appliedContainersCount\": 3716562,\n      \"appliedDevicesCount\": 61429558,\n      \"imageIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"factoryId\": 1892563,\n      \"id\": 32729973\n    }\n  ],\n  \"assignedImageBundleId\": \"et laboris\",\n  \"imageBundleMapper\": {\n    \"imageBundle_id\": {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundles.do"
									],
									"query": [
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laborum officia dolor nisi\",\n  \"errorMessage\": \"consequat ea dolor ir\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundles.do"
									],
									"query": [
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImageBundles.do?objectId=dolore proi&objectType=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImageBundles.do"
									],
									"query": [
										{
											"key": "objectId",
											"value": "dolore proi"
										},
										{
											"key": "objectType",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to get all the images.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/image/getImages.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"getImages.do"
							],
							"query": [
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "The query parameter for search."
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination."
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned."
								}
							]
						},
						"description": "Returns all the images uploaded to and available in CVP."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImages.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImages.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 54551037,\n  \"data\": [\n    {\n      \"key\": \"minim Ut est\",\n      \"name\": \"proident ipsum dolore\",\n      \"imageId\": \"pariatur ex\",\n      \"imageFileName\": \"adipisicing exercitation sit tempor\",\n      \"imageSize\": \"in ipsum ad nostrud voluptate\",\n      \"user\": \"reprehenderit in\",\n      \"uploadedDateinLongFormat\": -78248687,\n      \"isHotFix\": \"veni\",\n      \"md5\": \"ea commodo\",\n      \"version\": \"in velit officia qui ipsum\",\n      \"isRebootRequired\": \"sint ut deserunt\",\n      \"swiVarient\": \"est nulla\",\n      \"swiMaxHwepoch\": \"tempor incididunt culpa consectetur\",\n      \"sha512\": \"eu dolore\",\n      \"imageFile\": \"qui do non\",\n      \"factoryId\": 17799585,\n      \"id\": 56734969\n    },\n    {\n      \"key\": \"qui dolore nostrud id eiusmod\",\n      \"name\": \"mollit ut\",\n      \"imageId\": \"a\",\n      \"imageFileName\": \"fugiat pariatur sint ut cupidatat\",\n      \"imageSize\": \"amet consequat\",\n      \"user\": \"commodo est amet Excepteur\",\n      \"uploadedDateinLongFormat\": 66950125,\n      \"isHotFix\": \"sunt in\",\n      \"md5\": \"commodo Lorem labore aliquip\",\n      \"version\": \"dolore eu do laborum\",\n      \"isRebootRequired\": \"fugiat esse\",\n      \"swiVarient\": \"aute cupidatat nisi deserunt\",\n      \"swiMaxHwepoch\": \"nostrud sed\",\n      \"sha512\": \"fugiat exercitation ex\",\n      \"imageFile\": \"tempor exercitation\",\n      \"factoryId\": -69289435,\n      \"id\": 91465182\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImages.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImages.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"dol\",\n  \"errorMessage\": \"consequat pariatur sint\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImages.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImages.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/image/getImages.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"getImages.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to save an image bundle into CVP.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"isCertifiedImage\": \"qui aliqua cupidatat consectetur\",\n  \"images\": [\n    {\n      \"name\": \"nisi dolore magna ex\",\n      \"imageSize\": \"aliquip occaecat laboris\",\n      \"sha512\": \"eiusmod ut quis Duis nulla\",\n      \"md5\": \"magna velit\",\n      \"version\": \"eiusmod officia\",\n      \"isRebootRequired\": \"dolore con\",\n      \"swiMaxHwepoch\": \"voluptate pariatur\",\n      \"swiVarient\": \"consectetur sunt officia aliqua\"\n    },\n    {\n      \"name\": \"aute enim\",\n      \"imageSize\": \"adipisicin\",\n      \"sha512\": \"in\",\n      \"md5\": \"fugiat aliqua esse deserunt\",\n      \"version\": \"in eu ut\",\n      \"isRebootRequired\": \"ea\",\n      \"swiMaxHwepoch\": \"dolore\",\n      \"swiVarient\": \"cupidatat exercitation ea ullamco\"\n    }\n  ],\n  \"name\": \"esse et irure\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/image/saveImageBundle.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"saveImageBundle.do"
							]
						},
						"description": "It adds an image bundle containing image and extensions."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isCertifiedImage\": \"officia eiusmod reprehenderit dolore\",\n  \"images\": [\n    {\n      \"name\": \"ullamco\",\n      \"imageSize\": \"dolore dolor\",\n      \"sha512\": \"quis incididunt deserunt Lorem\",\n      \"md5\": \"sunt incididunt nostrud\",\n      \"version\": \"mollit est non\",\n      \"isRebootRequired\": \"adipisicing\",\n      \"swiMaxHwepoch\": \"pariatur minim dolore\",\n      \"swiVarient\": \"aute velit ut\"\n    },\n    {\n      \"name\": \"quis non aliquip\",\n      \"imageSize\": \"ad consequat in officia\",\n      \"sha512\": \"laborum aliquip commodo anim\",\n      \"md5\": \"voluptate esse i\",\n      \"version\": \"reprehenderit culpa tempor ad occaecat\",\n      \"isRebootRequired\": \"mollit Ut adipisicing\",\n      \"swiMaxHwepoch\": \"magna est ad fugiat in\",\n      \"swiVarient\": \"ipsum proident\"\n    }\n  ],\n  \"name\": \"est\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/saveImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"saveImageBundle.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isCertifiedImage\": \"officia eiusmod reprehenderit dolore\",\n  \"images\": [\n    {\n      \"name\": \"ullamco\",\n      \"imageSize\": \"dolore dolor\",\n      \"sha512\": \"quis incididunt deserunt Lorem\",\n      \"md5\": \"sunt incididunt nostrud\",\n      \"version\": \"mollit est non\",\n      \"isRebootRequired\": \"adipisicing\",\n      \"swiMaxHwepoch\": \"pariatur minim dolore\",\n      \"swiVarient\": \"aute velit ut\"\n    },\n    {\n      \"name\": \"quis non aliquip\",\n      \"imageSize\": \"ad consequat in officia\",\n      \"sha512\": \"laborum aliquip commodo anim\",\n      \"md5\": \"voluptate esse i\",\n      \"version\": \"reprehenderit culpa tempor ad occaecat\",\n      \"isRebootRequired\": \"mollit Ut adipisicing\",\n      \"swiMaxHwepoch\": \"magna est ad fugiat in\",\n      \"swiVarient\": \"ipsum proident\"\n    }\n  ],\n  \"name\": \"est\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/saveImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"saveImageBundle.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"incididunt dolore dolor elit\",\n  \"errorMessage\": \"in\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isCertifiedImage\": \"officia eiusmod reprehenderit dolore\",\n  \"images\": [\n    {\n      \"name\": \"ullamco\",\n      \"imageSize\": \"dolore dolor\",\n      \"sha512\": \"quis incididunt deserunt Lorem\",\n      \"md5\": \"sunt incididunt nostrud\",\n      \"version\": \"mollit est non\",\n      \"isRebootRequired\": \"adipisicing\",\n      \"swiMaxHwepoch\": \"pariatur minim dolore\",\n      \"swiVarient\": \"aute velit ut\"\n    },\n    {\n      \"name\": \"quis non aliquip\",\n      \"imageSize\": \"ad consequat in officia\",\n      \"sha512\": \"laborum aliquip commodo anim\",\n      \"md5\": \"voluptate esse i\",\n      \"version\": \"reprehenderit culpa tempor ad occaecat\",\n      \"isRebootRequired\": \"mollit Ut adipisicing\",\n      \"swiMaxHwepoch\": \"magna est ad fugiat in\",\n      \"swiVarient\": \"ipsum proident\"\n    }\n  ],\n  \"name\": \"est\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/saveImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"saveImageBundle.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isCertifiedImage\": \"officia eiusmod reprehenderit dolore\",\n  \"images\": [\n    {\n      \"name\": \"ullamco\",\n      \"imageSize\": \"dolore dolor\",\n      \"sha512\": \"quis incididunt deserunt Lorem\",\n      \"md5\": \"sunt incididunt nostrud\",\n      \"version\": \"mollit est non\",\n      \"isRebootRequired\": \"adipisicing\",\n      \"swiMaxHwepoch\": \"pariatur minim dolore\",\n      \"swiVarient\": \"aute velit ut\"\n    },\n    {\n      \"name\": \"quis non aliquip\",\n      \"imageSize\": \"ad consequat in officia\",\n      \"sha512\": \"laborum aliquip commodo anim\",\n      \"md5\": \"voluptate esse i\",\n      \"version\": \"reprehenderit culpa tempor ad occaecat\",\n      \"isRebootRequired\": \"mollit Ut adipisicing\",\n      \"swiMaxHwepoch\": \"magna est ad fugiat in\",\n      \"swiVarient\": \"ipsum proident\"\n    }\n  ],\n  \"name\": \"est\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/saveImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"saveImageBundle.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This api is used to update the image bundle available in CVP.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"isCertifiedImage\": \"nulla d\",\n  \"deletedExtensions\": [\n    {\n      \"imageId\": \"cillum nisi qui\",\n      \"rebootRequired\": \"quis ut magna\"\n    },\n    {\n      \"imageId\": \"officia adipisicing ut nulla in\",\n      \"rebootRequired\": \"qui ea proident occaecat ad\"\n    }\n  ],\n  \"images\": [\n    {\n      \"name\": \"cupidatat fugiat veniam\",\n      \"imageSize\": \"sit ut cillum\",\n      \"sha512\": \"ullamco\",\n      \"md5\": \"ad consectetur sint tempor\",\n      \"version\": \"exercitation sunt\",\n      \"isRebootRequired\": \"consequ\",\n      \"swiMaxHwepoch\": \"occaecat fugiat non et\",\n      \"swiVarient\": \"eu\"\n    },\n    {\n      \"name\": \"nisi ad\",\n      \"imageSize\": \"velit ut tempor\",\n      \"sha512\": \"tempor qui reprehenderit eiusmod officia\",\n      \"md5\": \"nisi Ut eu Lorem labore\",\n      \"version\": \"magna\",\n      \"isRebootRequired\": \"cupidatat officia elit et id\",\n      \"swiMaxHwepoch\": \"quis cupidatat laboris fugiat sint\",\n      \"swiVarient\": \"anim nisi est irure\"\n    }\n  ],\n  \"name\": \"nulla aliquip eiusmod\",\n  \"id\": \"commodo id sunt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/image/updateImageBundle.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"image",
								"updateImageBundle.do"
							]
						},
						"description": "It updates the already available image bundle containing image and extensions."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isCertifiedImage\": \"ipsum mollit reprehenderit nu\",\n  \"deletedExtensions\": [\n    {\n      \"imageId\": \"sed elit ex\",\n      \"rebootRequired\": \"proident culpa labore\"\n    },\n    {\n      \"imageId\": \"aute veniam non ipsu\",\n      \"rebootRequired\": \"non adipisicing tempor\"\n    }\n  ],\n  \"images\": [\n    {\n      \"name\": \"sunt\",\n      \"imageSize\": \"in\",\n      \"sha512\": \"cupidatat\",\n      \"md5\": \"sunt esse est sed\",\n      \"version\": \"Ut mollit\",\n      \"isRebootRequired\": \"in incididunt\",\n      \"swiMaxHwepoch\": \"adipisicing irure consectetur Excepteur\",\n      \"swiVarient\": \"cillum qu\"\n    },\n    {\n      \"name\": \"nostrud nulla ullamco Ut eiusmod\",\n      \"imageSize\": \"proident dolore aute\",\n      \"sha512\": \"magna qui ea cupidatat\",\n      \"md5\": \"labore anim\",\n      \"version\": \"ullamco voluptate elit nulla\",\n      \"isRebootRequired\": \"Excepteur commodo incidid\",\n      \"swiMaxHwepoch\": \"non\",\n      \"swiVarient\": \"ad velit Ut laboris ut\"\n    }\n  ],\n  \"name\": \"ut reprehenderit dolore\",\n  \"id\": \"nulla aute cillum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/updateImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"updateImageBundle.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isCertifiedImage\": \"ipsum mollit reprehenderit nu\",\n  \"deletedExtensions\": [\n    {\n      \"imageId\": \"sed elit ex\",\n      \"rebootRequired\": \"proident culpa labore\"\n    },\n    {\n      \"imageId\": \"aute veniam non ipsu\",\n      \"rebootRequired\": \"non adipisicing tempor\"\n    }\n  ],\n  \"images\": [\n    {\n      \"name\": \"sunt\",\n      \"imageSize\": \"in\",\n      \"sha512\": \"cupidatat\",\n      \"md5\": \"sunt esse est sed\",\n      \"version\": \"Ut mollit\",\n      \"isRebootRequired\": \"in incididunt\",\n      \"swiMaxHwepoch\": \"adipisicing irure consectetur Excepteur\",\n      \"swiVarient\": \"cillum qu\"\n    },\n    {\n      \"name\": \"nostrud nulla ullamco Ut eiusmod\",\n      \"imageSize\": \"proident dolore aute\",\n      \"sha512\": \"magna qui ea cupidatat\",\n      \"md5\": \"labore anim\",\n      \"version\": \"ullamco voluptate elit nulla\",\n      \"isRebootRequired\": \"Excepteur commodo incidid\",\n      \"swiMaxHwepoch\": \"non\",\n      \"swiVarient\": \"ad velit Ut laboris ut\"\n    }\n  ],\n  \"name\": \"ut reprehenderit dolore\",\n  \"id\": \"nulla aute cillum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/updateImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"updateImageBundle.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"non Duis\",\n  \"errorMessage\": \"Duis \"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isCertifiedImage\": \"ipsum mollit reprehenderit nu\",\n  \"deletedExtensions\": [\n    {\n      \"imageId\": \"sed elit ex\",\n      \"rebootRequired\": \"proident culpa labore\"\n    },\n    {\n      \"imageId\": \"aute veniam non ipsu\",\n      \"rebootRequired\": \"non adipisicing tempor\"\n    }\n  ],\n  \"images\": [\n    {\n      \"name\": \"sunt\",\n      \"imageSize\": \"in\",\n      \"sha512\": \"cupidatat\",\n      \"md5\": \"sunt esse est sed\",\n      \"version\": \"Ut mollit\",\n      \"isRebootRequired\": \"in incididunt\",\n      \"swiMaxHwepoch\": \"adipisicing irure consectetur Excepteur\",\n      \"swiVarient\": \"cillum qu\"\n    },\n    {\n      \"name\": \"nostrud nulla ullamco Ut eiusmod\",\n      \"imageSize\": \"proident dolore aute\",\n      \"sha512\": \"magna qui ea cupidatat\",\n      \"md5\": \"labore anim\",\n      \"version\": \"ullamco voluptate elit nulla\",\n      \"isRebootRequired\": \"Excepteur commodo incidid\",\n      \"swiMaxHwepoch\": \"non\",\n      \"swiVarient\": \"ad velit Ut laboris ut\"\n    }\n  ],\n  \"name\": \"ut reprehenderit dolore\",\n  \"id\": \"nulla aute cillum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/updateImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"updateImageBundle.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isCertifiedImage\": \"ipsum mollit reprehenderit nu\",\n  \"deletedExtensions\": [\n    {\n      \"imageId\": \"sed elit ex\",\n      \"rebootRequired\": \"proident culpa labore\"\n    },\n    {\n      \"imageId\": \"aute veniam non ipsu\",\n      \"rebootRequired\": \"non adipisicing tempor\"\n    }\n  ],\n  \"images\": [\n    {\n      \"name\": \"sunt\",\n      \"imageSize\": \"in\",\n      \"sha512\": \"cupidatat\",\n      \"md5\": \"sunt esse est sed\",\n      \"version\": \"Ut mollit\",\n      \"isRebootRequired\": \"in incididunt\",\n      \"swiMaxHwepoch\": \"adipisicing irure consectetur Excepteur\",\n      \"swiVarient\": \"cillum qu\"\n    },\n    {\n      \"name\": \"nostrud nulla ullamco Ut eiusmod\",\n      \"imageSize\": \"proident dolore aute\",\n      \"sha512\": \"magna qui ea cupidatat\",\n      \"md5\": \"labore anim\",\n      \"version\": \"ullamco voluptate elit nulla\",\n      \"isRebootRequired\": \"Excepteur commodo incidid\",\n      \"swiMaxHwepoch\": \"non\",\n      \"swiVarient\": \"ad velit Ut laboris ut\"\n    }\n  ],\n  \"name\": \"ut reprehenderit dolore\",\n  \"id\": \"nulla aute cillum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/image/updateImageBundle.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"image",
										"updateImageBundle.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "inventory",
			"item": [
				{
					"name": "devices",
					"item": [
						{
							"name": "To delete devices from the inventory",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"Excepteur\",\n    \"ut consectetur commodo\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/inventory/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"devices"
									]
								},
								"description": "Deletes the devices from the inventory. In case of partial success, HTTP status code of 200 is returned and the response body contains the list of deviceIDs of the failed devices"
							},
							"response": [
								{
									"name": "Key \"failedDevices\" contains IDs of devices which could not be deleted and the reason for failure. The key \"result\" contains \"success\" if all requested devices are deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"result\": \"ullamco aliqua adipisicing\",\n  \"failedDevices\": {\n    \"<deviceID 1>\": \"failure reason\",\n    \"<deviceID 2>\": \"failure reason\"\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "To retrieve all devices in the inventory",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inventory/devices?provisioned=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"devices"
									],
									"query": [
										{
											"key": "provisioned",
											"value": "true",
											"description": "Only provisioned devices, devices that are mapped to a container and are visible in the network provisioning tab, are returned if set to true"
										}
									]
								},
								"description": "If no query parameter is provided, a list of all devices that are streaming data to CVP is returned. Only provisioned devices, devices that are mapped to a container and are visible in the network provisioning tab, are returned if the query parameter 'provisioning' is set to 'true'"
							},
							"response": [
								{
									"name": "No response was specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/devices?provisioned=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											],
											"query": [
												{
													"key": "provisioned",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"architecture\": \"eiusmod minim velit proident\",\n    \"bootupTimestamp\": 97552215.48059204,\n    \"complianceCode\": \"reprehenderit tempor irure incididunt\",\n    \"complianceIndication\": \"elit ut\",\n    \"danzEnabled\": true,\n    \"domainName\": \"in culpa sint incididunt aliquip\",\n    \"fqdn\": \"mollit sit\",\n    \"hardwareRevision\": \"exercitation nulla ullamco ut\",\n    \"hostname\": \"eiusmod commodo ut consequat\",\n    \"internalBuild\": \"do\",\n    \"internalVersion\": \"minim ut sint ullamco laboris\",\n    \"ipAddress\": \"ut et non nostrud qui\",\n    \"memFree\": -6457257,\n    \"memTotal\": -94353467,\n    \"mlagEnabled\": false,\n    \"modelName\": \"aliqua commodo officia Ut\",\n    \"parentContainerKey\": \"do irure aliquip minim enim\",\n    \"serialNumber\": \"aute est\",\n    \"status\": \"nisi magna\",\n    \"systemMacAddress\": \"et cillum Lorem consectetur commodo\",\n    \"unAuthorized\": true,\n    \"version\": \"s\",\n    \"ztpMode\": false\n  },\n  {\n    \"architecture\": \"laboris non\",\n    \"bootupTimestamp\": -73642672.56371337,\n    \"complianceCode\": \"quis qui est ea\",\n    \"complianceIndication\": \"elit officia\",\n    \"danzEnabled\": false,\n    \"domainName\": \"eu laborum aliqua ea\",\n    \"fqdn\": \"dolore\",\n    \"hardwareRevision\": \"in ad\",\n    \"hostname\": \"consequat enim ex dolor dolore\",\n    \"internalBuild\": \"et tempor in\",\n    \"internalVersion\": \"officia veniam ipsum adipisicing\",\n    \"ipAddress\": \"Lorem quis dolor\",\n    \"memFree\": -25346415,\n    \"memTotal\": -67376719,\n    \"mlagEnabled\": true,\n    \"modelName\": \"voluptate aliqua reprehenderit\",\n    \"parentContainerKey\": \"sed in\",\n    \"serialNumber\": \"officia\",\n    \"status\": \"dolor amet laborum tempor laboris\",\n    \"systemMacAddress\": \"adipisicing ex pariatur sit velit\",\n    \"unAuthorized\": false,\n    \"version\": \"exercitation irure ullamco sit Lorem\",\n    \"ztpMode\": false\n  }\n]"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/devices?provisioned=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											],
											"query": [
												{
													"key": "provisioned",
													"value": "true"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/devices?provisioned=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											],
											"query": [
												{
													"key": "provisioned",
													"value": "true"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/inventory/devices?provisioned=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											],
											"query": [
												{
													"key": "provisioned",
													"value": "true"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "To import devices in the inventory",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hosts\": [\n    \"est anim non\",\n    \"dolore deserunt fugiat cillum incididunt\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/inventory/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"devices"
									]
								},
								"description": "Initializes onboarding for the provided devices. In case of partial success, HTTP status code of 200 is returned and the response body contains the list of hostnames or IP addresses of the failed devices"
							},
							"response": [
								{
									"name": "Key \"failed\" contains IP addresses or hostnames of the devices that could not be onboarded and the reasons for failure. Key \"hostToDevIdMap\" contains hostname to device ID mappings for devices that are successfully onboarded.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"hosts\": [\n    \"esse incididunt Excepteur ullamco\",\n    \"pariatur ad\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"failed\": [\n    {\n      \"host\": \"eiusmod\",\n      \"error\": \"aute eiusmod fugiat eu est\"\n    },\n    {\n      \"host\": \"ipsum et in\",\n      \"error\": \"enim ullamco est sit\"\n    }\n  ],\n  \"hostToDevIdMap\": {\n    \"<host-name 1>\": \"<DeviceID 1>\",\n    \"<host-name 2>\": \"<DeviceID 2>\"\n  }\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"hosts\": [\n    \"esse incididunt Excepteur ullamco\",\n    \"pariatur ad\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"hosts\": [\n    \"esse incididunt Excepteur ullamco\",\n    \"pariatur ad\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"hosts\": [\n    \"esse incididunt Excepteur ullamco\",\n    \"pariatur ad\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Failed to onboard any of the provided devices",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"hosts\": [\n    \"esse incididunt Excepteur ullamco\",\n    \"pariatur ad\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory",
												"devices"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"failed\": [\n    {\n      \"host\": \"dolore nisi\",\n      \"error\": \"id minim tempor veniam\"\n    },\n    {\n      \"host\": \"deserunt ex officia commodo\",\n      \"error\": \"laborum nostrud\"\n    }\n  ],\n  \"hostToDevIdMap\": {\n    \"<host-name 1>\": \"<DeviceID 1>\",\n    \"<host-name 2>\": \"<DeviceID 2>\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "To retrieve a list of all containers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/inventory/containers?name=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"inventory",
								"containers"
							],
							"query": [
								{
									"key": "name",
									"value": "dolore proi",
									"description": "Only containers with the given name are returned"
								}
							]
						},
						"description": "If no query parameter is provided, a list of all the existing containers is returned. If 'name' is provided, only containers with the given name are returned."
					},
					"response": [
						{
							"name": "No response was specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/containers?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"containers"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"CreatedBy\": \"et culpa laborum m\",\n    \"CreatedOn\": 83966083,\n    \"Key\": \"commodo aliqua nostrud velit d\",\n    \"Mode\": \"expand\",\n    \"Name\": \"do\"\n  },\n  {\n    \"CreatedBy\": \"anim ut laboris incididunt\",\n    \"CreatedOn\": 73034561,\n    \"Key\": \"ipsum occaecat do\",\n    \"Mode\": \"expand\",\n    \"Name\": \"fugiat Ut sunt ipsum\"\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/containers?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"containers"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/containers?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"containers"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/containers?name=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"containers"
									],
									"query": [
										{
											"key": "name",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To retrieve the inventory configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/inventory/device/config?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"inventory",
								"device",
								"config"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) Id of the netelement for which configuration has to be fetched."
								}
							]
						},
						"description": "Returns the configuration retrieved from a netelement."
					},
					"response": [
						{
							"name": "No response was specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/device/config?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"device",
										"config"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"output\": \"occaecat\",\n  \"warnings\": [\n    \"voluptate et irure\",\n    \"ea ullamco\"\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/device/config?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"device",
										"config"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eu sit Excepteur velit\",\n  \"errorMessage\": \"laboris pariatur\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/device/config?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"device",
										"config"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/inventory/device/config?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory",
										"device",
										"config"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "label",
			"item": [
				{
					"name": "To add the Label in Datastore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"enim in sunt\",\n  \"note\": \"do\",\n  \"type\": \"magna pariatur in\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/label/addLabel.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"label",
								"addLabel.do"
							]
						},
						"description": "Returns the response message (Success/Failure)"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"enim in sunt\",\n  \"note\": \"do\",\n  \"type\": \"magna pariatur in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/addLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"addLabel.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dateTimeInLongFormat\": 39015945,\n  \"factoryId\": 74219666,\n  \"id\": -22122369,\n  \"key\": \"cupidatat tempor aliqua in\",\n  \"name\": \"consectetur consequat ex\",\n  \"netElementCount\": 29933760,\n  \"note\": \"commodo in veniam\",\n  \"type\": \"esse adipisic\",\n  \"user\": \"sint deserunt enim consequat\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"enim in sunt\",\n  \"note\": \"do\",\n  \"type\": \"magna pariatur in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/addLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"addLabel.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"quis ullamco ut\",\n  \"errorMessage\": \"ex\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"enim in sunt\",\n  \"note\": \"do\",\n  \"type\": \"magna pariatur in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/addLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"addLabel.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"enim in sunt\",\n  \"note\": \"do\",\n  \"type\": \"magna pariatur in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/addLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"addLabel.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To delete the Label in Datastore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    \"Excepteur\",\n    \"ut consectetur commodo\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/label/deleteLabel.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"label",
								"deleteLabel.do"
							]
						},
						"description": "Returns the response message (Success/Failure)"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/deleteLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"deleteLabel.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"voluptate\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/deleteLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"deleteLabel.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"consequat in laboris\",\n  \"errorMessage\": \"eu Ut\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/deleteLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"deleteLabel.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/deleteLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"deleteLabel.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the logs of a label",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/label/getAppliedDevices.do?labelId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"label",
								"getAppliedDevices.do"
							],
							"query": [
								{
									"key": "labelId",
									"value": "dolore proi",
									"description": "(Required) Holds the value for label id. Enter either Label Id or Label Name"
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "Holds the phrase that is to be searched on the properties of Label"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Holds the starting value of the results to be paginated"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Holds the end value of the results to be paginated. End index value 0 returns all the records"
								}
							]
						},
						"description": "Returns the list of the retrieved logs for a label"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getAppliedDevices.do?labelId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getAppliedDevices.do"
									],
									"query": [
										{
											"key": "labelId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"appliedBy\": \"cupidatat voluptate\",\n      \"appliedDate\": 20183075.789004818,\n      \"containerName\": \"aliquip\",\n      \"hostName\": \"in i\",\n      \"ipAddress\": \"nulla sed quis\",\n      \"totalDevicesCount\": -71172321\n    },\n    {\n      \"appliedBy\": \"labore ex\",\n      \"appliedDate\": -84842322.78854838,\n      \"containerName\": \"Excepteur ut\",\n      \"hostName\": \"nisi eiusmod Excepteur aute dolor\",\n      \"ipAddress\": \"aliquip nulla Lorem ut\",\n      \"totalDevicesCount\": 86874677\n    }\n  ],\n  \"total\": 3858223\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getAppliedDevices.do?labelId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getAppliedDevices.do"
									],
									"query": [
										{
											"key": "labelId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"Excepteur\",\n  \"errorMessage\": \"minim commodo officia\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getAppliedDevices.do?labelId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getAppliedDevices.do"
									],
									"query": [
										{
											"key": "labelId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getAppliedDevices.do?labelId=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getAppliedDevices.do"
									],
									"query": [
										{
											"key": "labelId",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the label information by its Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/label/getLabelInfo.do?labelId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"label",
								"getLabelInfo.do"
							],
							"query": [
								{
									"key": "labelId",
									"value": "dolore proi",
									"description": "(Required) Holds the id of the Label."
								}
							]
						},
						"description": "Returns the information about the label"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getLabelInfo.do?labelId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getLabelInfo.do"
									],
									"query": [
										{
											"key": "labelId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"dateTimeInLongFormat\": 39015945,\n  \"factoryId\": 74219666,\n  \"id\": -22122369,\n  \"key\": \"cupidatat tempor aliqua in\",\n  \"name\": \"consectetur consequat ex\",\n  \"netElementCount\": 29933760,\n  \"note\": \"commodo in veniam\",\n  \"type\": \"esse adipisic\",\n  \"user\": \"sint deserunt enim consequat\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getLabelInfo.do?labelId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getLabelInfo.do"
									],
									"query": [
										{
											"key": "labelId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sint consequat\",\n  \"errorMessage\": \"enim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getLabelInfo.do?labelId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getLabelInfo.do"
									],
									"query": [
										{
											"key": "labelId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getLabelInfo.do?labelId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getLabelInfo.do"
									],
									"query": [
										{
											"key": "labelId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get all the labels from the Datastore",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/label/getLabels.do?module=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"label",
								"getLabels.do"
							],
							"query": [
								{
									"key": "module",
									"value": "dolore proi",
									"description": "(Required) Holds the value for the type of module"
								},
								{
									"key": "type",
									"value": "dolore proi",
									"description": "(Required) Holds the value for the type of label"
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "Holds the phrase that is to be searched on the properties of Label"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Holds the starting value of the results to be paginated"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Holds the end value of the results to be paginated. End index value 0 returns all the records"
								}
							]
						},
						"description": "Returns the list of all the retrieved Labels from the datastore"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getLabels.do?module=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getLabels.do"
									],
									"query": [
										{
											"key": "module",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"labels\": [\n    {\n      \"dateTimeInLongFormat\": -49332480,\n      \"factoryId\": 80528933,\n      \"id\": 79317027,\n      \"key\": \"irure qui\",\n      \"name\": \"incididunt nulla\",\n      \"netElementCount\": 34530281,\n      \"note\": \"aute eu ut\",\n      \"type\": \"sit adipisicing reprehenderit esse cupidatat\",\n      \"user\": \"quis ea\"\n    },\n    {\n      \"dateTimeInLongFormat\": 47551124,\n      \"factoryId\": -96096488,\n      \"id\": 4727364,\n      \"key\": \"et amet est\",\n      \"name\": \"laboris minim nulla laborum\",\n      \"netElementCount\": -88524176,\n      \"note\": \"qui\",\n      \"type\": \"consectetur dolore in \",\n      \"user\": \"culpa\"\n    }\n  ],\n  \"total\": 78726111\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getLabels.do?module=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getLabels.do"
									],
									"query": [
										{
											"key": "module",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sint consequat\",\n  \"errorMessage\": \"enim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getLabels.do?module=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getLabels.do"
									],
									"query": [
										{
											"key": "module",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/label/getLabels.do?module=dolore proi&type=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"getLabels.do"
									],
									"query": [
										{
											"key": "module",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To update the Label in Datastore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"ut est\",\n  \"name\": \"aliqua exercitation cillum\",\n  \"note\": \"Excepteur commodo cillum veniam deseru\",\n  \"type\": \"ea laborum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/label/updateLabel.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"label",
								"updateLabel.do"
							]
						},
						"description": "Returns the response message (Success/Failure)"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"ut est\",\n  \"name\": \"aliqua exercitation cillum\",\n  \"note\": \"Excepteur commodo cillum veniam deseru\",\n  \"type\": \"ea laborum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/updateLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"updateLabel.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"voluptate\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"ut est\",\n  \"name\": \"aliqua exercitation cillum\",\n  \"note\": \"Excepteur commodo cillum veniam deseru\",\n  \"type\": \"ea laborum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/updateLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"updateLabel.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laborum magna commodo et ut\",\n  \"errorMessage\": \"reprehenderit dolor nostrud\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"ut est\",\n  \"name\": \"aliqua exercitation cillum\",\n  \"note\": \"Excepteur commodo cillum veniam deseru\",\n  \"type\": \"ea laborum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/updateLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"updateLabel.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"ut est\",\n  \"name\": \"aliqua exercitation cillum\",\n  \"note\": \"Excepteur commodo cillum veniam deseru\",\n  \"type\": \"ea laborum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/updateLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"updateLabel.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To update the notes for a Label in the Datastore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"reprehenderit do\",\n  \"note\": \"minim deserunt magna\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/label/updateNotesToLabel.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"label",
								"updateNotesToLabel.do"
							]
						},
						"description": "Returns the response message (Success/Failure)"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"reprehenderit do\",\n  \"note\": \"minim deserunt magna\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/updateNotesToLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"updateNotesToLabel.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"voluptate\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"reprehenderit do\",\n  \"note\": \"minim deserunt magna\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/updateNotesToLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"updateNotesToLabel.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eu veniam in\",\n  \"errorMessage\": \"Excepteur do pariatur\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"reprehenderit do\",\n  \"note\": \"minim deserunt magna\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/updateNotesToLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"updateNotesToLabel.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"reprehenderit do\",\n  \"note\": \"minim deserunt magna\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/label/updateNotesToLabel.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"label",
										"updateNotesToLabel.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "login",
			"item": [
				{
					"name": "Log into the CVP application",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\":\"{{cvp_user}}\",\n  \"password\":\"{{cvp_pass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login/authenticate.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login",
								"authenticate.do"
							]
						},
						"description": "This method validates the login credentials and returns the session id along with the authorization details"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"nulla sed mollit Lorem\",\n  \"password\": \"cillum ea\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login/authenticate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"authenticate.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"userName\": \"ipsum ad esse elit\",\n  \"sessionId\": \"dolor dolore nulla sint\",\n  \"roles\": [\n    {\n      \"id\": -2434473,\n      \"moduleList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"factoryId\": \"nisi labore\",\n      \"createdOn\": -2993289.022523582,\n      \"moduleListSize\": 54930259,\n      \"createdBy\": \"amet magna\",\n      \"classId\": -32601059,\n      \"description\": \"commodo sunt cillum nisi\",\n      \"name\": \"ea sed ex\",\n      \"key\": \"deserunt u\"\n    },\n    {\n      \"id\": -75654707,\n      \"moduleList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"factoryId\": \"ipsum officia Excepteur elit anim\",\n      \"createdOn\": 68167427.83234969,\n      \"moduleListSize\": 11655368,\n      \"createdBy\": \"nisi dol\",\n      \"classId\": -51410551,\n      \"description\": \"adipisicing velit dolore ullamco\",\n      \"name\": \"labore in Lorem minim\",\n      \"key\": \"magn\"\n    }\n  ],\n  \"authenticationType\": \"qui est\",\n  \"permissionList\": [\n    {\n      \"factoryId\": -87453086,\n      \"id\": -43343096,\n      \"name\": \"dolor enim nostrud occaecat\",\n      \"mode\": \"est velit nulla fugiat\"\n    },\n    {\n      \"factoryId\": 35046481,\n      \"id\": 16154612,\n      \"name\": \"dolor pariatur labore\",\n      \"mode\": \"Dui\"\n    }\n  ],\n  \"authorizationType\": \"deserunt pariatur culpa\",\n  \"user\": {\n    \"factoryId\": -69904944,\n    \"id\": 11035996,\n    \"lastName\": \"laboris quis dolore elit\",\n    \"contactNumber\": \"mollit qui\",\n    \"email\": \"eiusmod non\",\n    \"userId\": \"nulla\",\n    \"userStatus\": \"adipisicing ipsum\",\n    \"firstName\": \"tempor pariatur ad\",\n    \"currentStatus\": \"pariatur et\",\n    \"password\": \"dolor magna dolor\",\n    \"lastAccessed\": 5034342.883468762\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"nulla sed mollit Lorem\",\n  \"password\": \"cillum ea\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login/authenticate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"authenticate.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in\",\n  \"errorMessage\": \"sunt anim\"\n}"
						}
					]
				},
				{
					"name": "Change user's password and contact information",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"Excepteur cillum Ut dolore officia\",\n  \"oldPassword\": \"cillum qui\",\n  \"currentPassword\": \"commodo aute\",\n  \"email\": \"nostrud veniam fug\",\n  \"firstName\": \"dolor mollit adipisicing\",\n  \"lastName\": \"nisi velit\",\n  \"contactNumber\": \"et sint Lorem adipisicing\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login/changePassword.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login",
								"changePassword.do"
							]
						},
						"description": "This method is used for changing the current user's password and contact information. It is used both for onboarding and for regular password and profile updates."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"Excepteur cillum Ut dolore officia\",\n  \"oldPassword\": \"cillum qui\",\n  \"currentPassword\": \"commodo aute\",\n  \"email\": \"nostrud veniam fug\",\n  \"firstName\": \"dolor mollit adipisicing\",\n  \"lastName\": \"nisi velit\",\n  \"contactNumber\": \"et sint Lorem adipisicing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login/changePassword.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"changePassword.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"Excepteur cillum Ut dolore officia\",\n  \"oldPassword\": \"cillum qui\",\n  \"currentPassword\": \"commodo aute\",\n  \"email\": \"nostrud veniam fug\",\n  \"firstName\": \"dolor mollit adipisicing\",\n  \"lastName\": \"nisi velit\",\n  \"contactNumber\": \"et sint Lorem adipisicing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login/changePassword.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"changePassword.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"92407\": {},\n  \"111500\": {},\n  \"112404\": {},\n  \"112406\": {},\n  \"112498\": {},\n  \"112500\": {},\n  \"112502\": {},\n  \"112503\": {},\n  \"112504\": {},\n  \"112506\": {},\n  \"112507\": {},\n  \"112508\": {},\n  \"112509\": {},\n  \"112510\": {},\n  \"112511\": {},\n  \"112512\": {},\n  \"112513\": {},\n  \"112516\": {},\n  \"112701\": {},\n  \"112702\": {},\n  \"112703\": {},\n  \"112801\": {},\n  \"112974\": {}\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"Excepteur cillum Ut dolore officia\",\n  \"oldPassword\": \"cillum qui\",\n  \"currentPassword\": \"commodo aute\",\n  \"email\": \"nostrud veniam fug\",\n  \"firstName\": \"dolor mollit adipisicing\",\n  \"lastName\": \"nisi velit\",\n  \"contactNumber\": \"et sint Lorem adipisicing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login/changePassword.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"changePassword.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"Excepteur cillum Ut dolore officia\",\n  \"oldPassword\": \"cillum qui\",\n  \"currentPassword\": \"commodo aute\",\n  \"email\": \"nostrud veniam fug\",\n  \"firstName\": \"dolor mollit adipisicing\",\n  \"lastName\": \"nisi velit\",\n  \"contactNumber\": \"et sint Lorem adipisicing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login/changePassword.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"changePassword.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get a user's CVP profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/login/getCVPUserProfile.do?userId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login",
								"getCVPUserProfile.do"
							],
							"query": [
								{
									"key": "userId",
									"value": "dolore proi",
									"description": "(Required) ID of user"
								}
							]
						},
						"description": "This proxy service is used to get a user's profile from the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/getCVPUserProfile.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"getCVPUserProfile.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"defaultUserFirstLogin\": false,\n  \"roles\": [\n    \"magna officia Excepteur Ut nulla\",\n    \"minim amet qui id\"\n  ],\n  \"authenticationServerType\": \"consectetur enim exercitation reprehenderit molli\",\n  \"Version\": \"est aliqua\",\n  \"authorizationServerType\": \"ad ut\",\n  \"user\": {\n    \"factoryId\": -10761139,\n    \"id\": 25077846,\n    \"lastName\": \"ipsum dolore ex\",\n    \"contactNumber\": \"laborum\",\n    \"email\": \"ea Excepteur amet\",\n    \"userId\": \"est ullamco\",\n    \"userStatus\": \"do moll\",\n    \"firstName\": \"eiusmod exercitation\",\n    \"currentStatus\": \"Excepteur consequat voluptate\",\n    \"password\": \"ad non\",\n    \"lastAccessed\": 77881822.81137356\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/getCVPUserProfile.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"getCVPUserProfile.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"92407\": {},\n  \"112498\": {},\n  \"112500\": {},\n  \"112502\": {},\n  \"112503\": {},\n  \"112504\": {},\n  \"112507\": {},\n  \"112508\": {},\n  \"112509\": {},\n  \"112511\": {},\n  \"112512\": {},\n  \"112513\": {},\n  \"112516\": {},\n  \"112517\": {},\n  \"112701\": {},\n  \"112718\": {},\n  \"112801\": {}\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/getCVPUserProfile.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"getCVPUserProfile.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/getCVPUserProfile.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"getCVPUserProfile.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get user role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/login/getPermissions.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login",
								"getPermissions.do"
							]
						},
						"description": "This proxy service is used to get user role for a logged in user."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/getPermissions.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"getPermissions.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"permissionList\": [\n    {\n      \"factoryId\": -70653362,\n      \"id\": -32778682,\n      \"name\": \"aliqua dolor\",\n      \"mode\": \"ex adipisicing\"\n    },\n    {\n      \"factoryId\": -87377768,\n      \"id\": 12753939,\n      \"name\": \"dolor deserunt\",\n      \"mode\": \"culpa occaecat aliqua fugiat cupidatat\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/getPermissions.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"getPermissions.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"92407\": {},\n  \"112498\": {},\n  \"112500\": {},\n  \"112502\": {},\n  \"112503\": {},\n  \"112504\": {},\n  \"112507\": {},\n  \"112508\": {},\n  \"112509\": {},\n  \"112511\": {},\n  \"112512\": {},\n  \"112513\": {},\n  \"112516\": {},\n  \"112517\": {},\n  \"112701\": {},\n  \"112718\": {},\n  \"112801\": {}\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/getPermissions.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"getPermissions.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/getPermissions.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"getPermissions.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To validate session",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/login/home.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login",
								"home.do"
							]
						},
						"description": "This proxy service is used to validate the session.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. It is only meant for internal use by the UI and will be removed in a future release."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/home.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"home.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/home.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"home.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/home.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"home.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "Log out from the current session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/login/logout.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login",
								"logout.do"
							]
						},
						"description": "This method logs the user out from the current session and redirects back to login page"
					},
					"response": [
						{
							"name": "No response was specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/logout.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"logout.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/logout.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"logout.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"labore cillum cupidatat nulla\",\n  \"errorMessage\": \"incididunt laboris\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/logout.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"logout.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login/logout.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login",
										"logout.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "provisioning",
			"item": [
				{
					"name": "delete All Temp Action.do",
					"item": [
						{
							"name": "This API is used to delete all temp actions",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"deleteAllTempAction.do"
									]
								},
								"description": "Deletes all temporarily created actions"
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"deleteAllTempAction.do"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": \"dolore in enim\"\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"deleteAllTempAction.do"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"minim cupidatat culpa enim\",\n  \"errorMessage\": \"pariatur\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"deleteAllTempAction.do"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"deleteAllTempAction.do"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "This API is used to delete all temp actions",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"deleteAllTempAction.do"
									]
								},
								"description": "Deletes all temporarily created actions"
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"dolore proi\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"deleteAllTempAction.do"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": \"dolore in enim\"\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"dolore proi\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"deleteAllTempAction.do"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"minim cupidatat culpa enim\",\n  \"errorMessage\": \"pariatur\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"dolore proi\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"deleteAllTempAction.do"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"dolore proi\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/deleteAllTempAction.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"deleteAllTempAction.do"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						}
					]
				},
				{
					"name": "v2",
					"item": [
						{
							"name": "This API is used to get configlets for the specified task.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/provisioning/v2/getconfigfortask.do?workorderid=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"v2",
										"getconfigfortask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi",
											"description": "(Required) Work Order Id for which the config to be fetched."
										}
									]
								},
								"description": "Fetches configlets for the specified task.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. Uses should be migrated to the /provisioning/v3/getconfigfortask API."
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/getconfigfortask.do?workorderid=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"getconfigfortask.do"
											],
											"query": [
												{
													"key": "workorderid",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"reconciledConfig\": \"in anim\",\n  \"reconcile\": -70741274,\n  \"new\": -36622918,\n  \"configs\": [\n    {\n      \"key\": \"cillum aliquip ex\",\n      \"name\": \"officia\",\n      \"reconciled\": false,\n      \"config\": \"dolor fugiat\",\n      \"user\": \"sint\",\n      \"note\": \"dolore sit Excepteur enim\",\n      \"containerCount\": -28017546,\n      \"netElementCount\": -24240735,\n      \"dateTimeInLongFormat\": 88707481,\n      \"isDefault\": \"qui incididunt sed dolore\",\n      \"isAutoBuilder\": \"officia minim velit\",\n      \"type\": \"dolore ut adipisicing mollit et\",\n      \"isDraft\": false,\n      \"editable\": true,\n      \"sslConfig\": true,\n      \"factoryId\": -5236803,\n      \"id\": -10119372\n    },\n    {\n      \"key\": \"irure\",\n      \"name\": \"ea consectetur\",\n      \"reconciled\": false,\n      \"config\": \"cillum magna ad\",\n      \"user\": \"occaecat ea\",\n      \"note\": \"commodo magna\",\n      \"containerCount\": -24436128,\n      \"netElementCount\": -49591264,\n      \"dateTimeInLongFormat\": 44879802,\n      \"isDefault\": \"adipisicing officia\",\n      \"isAutoBuilder\": \"eiusmod c\",\n      \"type\": \"Ut ut\",\n      \"isDraft\": false,\n      \"editable\": true,\n      \"sslConfig\": true,\n      \"factoryId\": -29487437,\n      \"id\": -28894051\n    }\n  ],\n  \"designedConfig\": [\n    {\n      \"command\": \"minim nulla mollit fugiat\",\n      \"rowId\": -92197632,\n      \"code\": \"esse aute\",\n      \"blockId\": \"do aute\",\n      \"parentRowId\": 22910453,\n      \"shouldReconcile\": false\n    },\n    {\n      \"command\": \"ex sed consectetur irure exercitation\",\n      \"rowId\": -52823323,\n      \"code\": \"velit fugiat officia\",\n      \"blockId\": \"\",\n      \"parentRowId\": 90636792,\n      \"shouldReconcile\": false\n    }\n  ],\n  \"Total\": -88703366,\n  \"runningConfig\": [\n    {\n      \"command\": \"Ut Duis labore conse\",\n      \"rowId\": 39111003,\n      \"code\": \"Lorem\",\n      \"blockId\": \"fugiat ex\",\n      \"parentRowId\": 77074935,\n      \"shouldReconcile\": true\n    },\n    {\n      \"command\": \"enim\",\n      \"rowId\": 79606256,\n      \"code\": \"incididunt eiusmod dolor ut\",\n      \"blockId\": \"dolore\",\n      \"parentRowId\": -78115056,\n      \"shouldReconcile\": false\n    }\n  ],\n  \"mismatch\": -17444827,\n  \"warnings\": [\n    \"magna occaecat deserunt\",\n    \"ipsum dolor\"\n  ],\n  \"errors\": [],\n  \"targetIpAddress\": \"tempor sint nisi labore pariatur\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/getconfigfortask.do?workorderid=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"getconfigfortask.do"
											],
											"query": [
												{
													"key": "workorderid",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/getconfigfortask.do?workorderid=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"getconfigfortask.do"
											],
											"query": [
												{
													"key": "workorderid",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/getconfigfortask.do?workorderid=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"getconfigfortask.do"
											],
											"query": [
												{
													"key": "workorderid",
													"value": "dolore proi"
												}
											]
										}
									},
									"code": 440,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"irure\",\n  \"errorMessage\": \"sunt e\"\n}"
								}
							]
						},
						{
							"name": "This API is used to save the changes made in ztp.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"[]\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/v2/saveTopology.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"v2",
										"saveTopology.do"
									]
								},
								"description": "This API is used to save the changes made in ztp.(Optional - Call with list of temporary proposed actions)"
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"[]\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/saveTopology.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"saveTopology.do"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"status\": \"in Duis esse adipisicing\",\n    \"taskIds\": [\n      \"non\",\n      \"sit fugiat\"\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"[]\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/saveTopology.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"saveTopology.do"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"[]\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/saveTopology.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"saveTopology.do"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"[]\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/saveTopology.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"saveTopology.do"
											]
										}
									},
									"code": 440,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"in occaecat\",\n  \"errorMessage\": \"proident Lorem\"\n}"
								}
							]
						},
						{
							"name": "This API is used to validate configlets and to generate reconcile configlets.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"netElementId\": \"eu dolore nisi\",\n  \"configIdList\": [\n    \"dolore est dolore dolor consecte\",\n    \"minim commodo\"\n  ],\n  \"pageType\": \"consequat minim sed officia ipsum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/v2/validateAndCompareConfiglets.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"v2",
										"validateAndCompareConfiglets.do"
									]
								},
								"description": "This API is used to validate configlets and to generate reconcile configlets."
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"netElementId\": \"Duis\",\n  \"configIdList\": [\n    \"cupidatat qui amet\",\n    \"Lorem sunt exercitation\"\n  ],\n  \"pageType\": \"culpa Excepteur labore do anim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/validateAndCompareConfiglets.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"validateAndCompareConfiglets.do"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"reconciledConfig\": {\n    \"key\": \"id ullamco aute deserunt\",\n    \"name\": \"pa\",\n    \"reconciled\": true,\n    \"config\": \"nostrud dol\",\n    \"user\": \"esse non\",\n    \"note\": \"elit ex Lorem\",\n    \"containerCount\": -73652071,\n    \"netElementCount\": -49888882,\n    \"dateTimeInLongFormat\": -77527021,\n    \"isDefault\": \"ex sint\",\n    \"isAutoBuilder\": \"amet sunt cillum dolore eiusmod\",\n    \"type\": \"laborum sit\",\n    \"isDraft\": false,\n    \"editable\": false,\n    \"sslConfig\": true,\n    \"factoryId\": -65084188,\n    \"id\": -66309195\n  },\n  \"reconcile\": 92319090,\n  \"new\": 22170442,\n  \"designedConfig\": [\n    {\n      \"command\": \"elit\",\n      \"rowId\": 40020394,\n      \"code\": \"dolore reprehenderit\",\n      \"blockId\": \"incididunt id\",\n      \"parentRowId\": 51635223,\n      \"shouldReconcile\": true\n    },\n    {\n      \"command\": \"velit eu magna non\",\n      \"rowId\": 2203090,\n      \"code\": \"ullamco incididunt laborum laboris\",\n      \"blockId\": \"laboris \",\n      \"parentRowId\": -4872359,\n      \"shouldReconcile\": true\n    }\n  ],\n  \"total\": 79088256,\n  \"runningConfig\": [\n    {\n      \"command\": \"Excepteur ut Ut\",\n      \"rowId\": 20585060,\n      \"code\": \"nisi reprehenderit magna et\",\n      \"blockId\": \"mollit quis pariatur\",\n      \"parentRowId\": 83795889,\n      \"shouldReconcile\": false\n    },\n    {\n      \"command\": \"id\",\n      \"rowId\": -35497576,\n      \"code\": \"Ut qui occaecat consequat\",\n      \"blockId\": \"ea\",\n      \"parentRowId\": 89933201,\n      \"shouldReconcile\": true\n    }\n  ],\n  \"isReconcileInvoked\": true,\n  \"mismatch\": 37877397,\n  \"warnings\": [\n    \"pariatur laborum consectetur sit\",\n    \"anim quis\"\n  ],\n  \"errors\": [\n    {\n      \"configletId\": \"eu labore\",\n      \"configletLineNo\": -11452738,\n      \"error\": \"deserunt quis incididunt exercitation\"\n    },\n    {\n      \"configletId\": \"n\",\n      \"configletLineNo\": -19103976,\n      \"error\": \"nulla tempor do in\"\n    }\n  ]\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"netElementId\": \"Duis\",\n  \"configIdList\": [\n    \"cupidatat qui amet\",\n    \"Lorem sunt exercitation\"\n  ],\n  \"pageType\": \"culpa Excepteur labore do anim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/validateAndCompareConfiglets.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"validateAndCompareConfiglets.do"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"in qui aliqua est\",\n  \"errorMessage\": \"proident reprehenderit in\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"netElementId\": \"Duis\",\n  \"configIdList\": [\n    \"cupidatat qui amet\",\n    \"Lorem sunt exercitation\"\n  ],\n  \"pageType\": \"culpa Excepteur labore do anim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/validateAndCompareConfiglets.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"validateAndCompareConfiglets.do"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"netElementId\": \"Duis\",\n  \"configIdList\": [\n    \"cupidatat qui amet\",\n    \"Lorem sunt exercitation\"\n  ],\n  \"pageType\": \"culpa Excepteur labore do anim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/provisioning/v2/validateAndCompareConfiglets.do",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v2",
												"validateAndCompareConfiglets.do"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						}
					]
				},
				{
					"name": "v3",
					"item": [
						{
							"name": "This API is used to retrieve ZTP topology data",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/provisioning/v3/filterTopology.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"v3",
										"filterTopology.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi",
											"description": "The node id"
										},
										{
											"key": "queryParam",
											"value": "dolore proi",
											"description": "Text to be searched for"
										},
										{
											"key": "format",
											"value": "dolore proi",
											"description": "(Required) The format of view - 'topology' or 'list'"
										},
										{
											"key": "startIndex",
											"value": "-75690638",
											"description": "(Required) Start index for the pagination"
										},
										{
											"key": "endIndex",
											"value": "-75690638",
											"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
										}
									]
								},
								"description": "This API is used to retrieve ZTP topology data"
							},
							"response": [
								{
									"name": "filterTopology will return one of 'topology' or 'list' based on the format specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/filterTopology.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"filterTopology.do"
											],
											"query": [
												{
													"key": "nodeId",
													"value": "dolore proi"
												},
												{
													"key": "queryParam",
													"value": "dolore proi"
												},
												{
													"key": "format",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"ipsum dolore\",\n  \"list\": {\n    \"key\": \"dolore laboris\",\n    \"name\": \"elit magna ad aliqua labore\",\n    \"type\": \"ad eiusmod\",\n    \"childContainerCount\": -65457481,\n    \"childNetElementCount\": -23505505,\n    \"parentContainerId\": \"aliqua aute laborum aliquip\",\n    \"mode\": \"id fugiat\",\n    \"deviceStatus\": {\n      \"critical\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warning\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"normal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageUpgrade\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"task\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unAuthorized\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"childTaskCount\": 13957683,\n    \"childContainerList\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      }\n    ],\n    \"childNetElementList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"hierarchyNetElementCount\": 96286623,\n    \"tempAction\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tempEvent\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"topology\": {\n    \"key\": \"nisi sunt adipisicing ut\",\n    \"name\": \"exercitation Excepteur adipisicing\",\n    \"type\": \"sed sint aliquip\",\n    \"childContainerCount\": -38263613,\n    \"childNetElementCount\": 95313058,\n    \"parentContainerId\": \"nulla aute\",\n    \"mode\": \"Duis commodo non tempor dolor\",\n    \"deviceStatus\": {\n      \"critical\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warning\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"normal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageUpgrade\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"task\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unAuthorized\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"childTaskCount\": -1412402,\n    \"childContainerList\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      }\n    ],\n    \"childNetElementList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"hierarchyNetElementCount\": 30516005,\n    \"tempAction\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tempEvent\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/filterTopology.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"filterTopology.do"
											],
											"query": [
												{
													"key": "nodeId",
													"value": "dolore proi"
												},
												{
													"key": "queryParam",
													"value": "dolore proi"
												},
												{
													"key": "format",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/filterTopology.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"filterTopology.do"
											],
											"query": [
												{
													"key": "nodeId",
													"value": "dolore proi"
												},
												{
													"key": "queryParam",
													"value": "dolore proi"
												},
												{
													"key": "format",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"code": 440,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"commodo qui Duis anim\",\n  \"errorMessage\": \"sint adipisicing\"\n}"
								}
							]
						},
						{
							"name": "This API is used to get the Configlets",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/provisioning/v3/getConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi&lightRead=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"v3",
										"getConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi",
											"description": "Object type - 'netelement' or 'container'"
										},
										{
											"key": "objectId",
											"value": "dolore proi",
											"description": "Object id - netElementId or containerId"
										},
										{
											"key": "type",
											"value": "dolore proi",
											"description": "Type of configlet to return. Following types are allowed :-<br><ul><li>All - Returns every type of configlet</li><li>Configlet - Returns static and generated configlets</li><li>Builder - Returns builder as well as draft configlets</li><li>Draft - Returns draft configlets</li><li>BuilderWithoutDraft - Returns only builder configlets</li><li>IgnoreDraft - Returns everything other than draft configlets</li><li>Static - Returns static configlets </li><li>Generated - Returns generated configlets</li></ul>Multiple values separated by comma can be given to type parameter (eg. static,generated will fetch both the types). "
										},
										{
											"key": "startIndex",
											"value": "-75690638",
											"description": "(Required) Start index for pagination"
										},
										{
											"key": "endIndex",
											"value": "-75690638",
											"description": "(Required) End index for the pagination. If 0, then all records will be returned"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi",
											"description": "Sort based on the column .Sortable Columns are name,containerCount,netElementCount,note,type,user,dateTimeInLongFormat"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi",
											"description": "Sort Order - Ascending or Descending"
										},
										{
											"key": "lightRead",
											"value": "true",
											"description": "Flag to handle whether the configlet body is returned. Currently only lightRead=true is supported. For uses that set lightRead=false, refer to /configlet/getConfiglets.do"
										}
									]
								},
								"description": "This API is used to get the Configlets. Parameters - 'type', 'objectType' and 'objectId' are case sensitive"
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi&lightRead=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getConfiglets.do"
											],
											"query": [
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "type",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												},
												{
													"key": "sortByColumn",
													"value": "dolore proi"
												},
												{
													"key": "sortOrder",
													"value": "dolore proi"
												},
												{
													"key": "lightRead",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": 1634351,\n  \"data\": [\n    {\n      \"factoryId\": 11812508,\n      \"reconciled\": false,\n      \"isDefault\": \"esse Duis ut\",\n      \"note\": \"Ut aliqua cillum Lorem\",\n      \"containerCount\": -66297666,\n      \"netElementCount\": 74154994,\n      \"isAutoBuilder\": \"dolore cillum deserunt\",\n      \"dateTimeInLongFormat\": 52700295,\n      \"user\": \"adipisicing ad minim\",\n      \"config\": \"consequat enim\",\n      \"id\": -46027386,\n      \"isDraft\": false,\n      \"key\": \"eiusmod enim dolor sint\",\n      \"name\": \"Ut reprehenderit et exercitation in\",\n      \"type\": \"Duis est in consequat\"\n    },\n    {\n      \"factoryId\": 97120435,\n      \"reconciled\": true,\n      \"isDefault\": \"Ut sed\",\n      \"note\": \"dolore eu\",\n      \"containerCount\": -72650251,\n      \"netElementCount\": 26699411,\n      \"isAutoBuilder\": \"consectetur fugiat adipisicing\",\n      \"dateTimeInLongFormat\": 72315431,\n      \"user\": \"occaecat dolore do\",\n      \"config\": \"consectetur Excepteur officia commodo\",\n      \"id\": -87307575,\n      \"isDraft\": false,\n      \"key\": \"voluptate incididunt tempor enim aliquip\",\n      \"name\": \"mollit non ex\",\n      \"type\": \"fugiat laborum eiusmod proident\"\n    }\n  ]\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi&lightRead=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getConfiglets.do"
											],
											"query": [
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "type",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												},
												{
													"key": "sortByColumn",
													"value": "dolore proi"
												},
												{
													"key": "sortOrder",
													"value": "dolore proi"
												},
												{
													"key": "lightRead",
													"value": "true"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"pariatur consequat\",\n  \"errorMessage\": \"esse dolor nostrud\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi&lightRead=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getConfiglets.do"
											],
											"query": [
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "type",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												},
												{
													"key": "sortByColumn",
													"value": "dolore proi"
												},
												{
													"key": "sortOrder",
													"value": "dolore proi"
												},
												{
													"key": "lightRead",
													"value": "true"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "This API is used to get the container info for the given containerId.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/provisioning/v3/getContainerInfo.do?containerId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"v3",
										"getContainerInfo.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi",
											"description": "(Required) Container Id for which the information needs to be fetched."
										}
									]
								},
								"description": "This API is used to get the container info for the given containerId. "
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getContainerInfo.do?containerId=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getContainerInfo.do"
											],
											"query": [
												{
													"key": "containerId",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"associatedConfiglets\": -85273463,\n  \"associatedSwitches\": -97362320,\n  \"bundleName\": \"dolor Excepteur con\",\n  \"danzEnabledSwitches\": -95503025,\n  \"date\": 51456895,\n  \"name\": \"dolor\",\n  \"parentName\": \"amet voluptate minim aliqua\",\n  \"userId\": \"sed dolore quis\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getContainerInfo.do?containerId=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getContainerInfo.do"
											],
											"query": [
												{
													"key": "containerId",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getContainerInfo.do?containerId=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getContainerInfo.do"
											],
											"query": [
												{
													"key": "containerId",
													"value": "dolore proi"
												}
											]
										}
									},
									"code": 440,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"cupidatat incididunt\",\n  \"errorMessage\": \"sint\"\n}"
								}
							]
						},
						{
							"name": "This API is used to get configlets for a specified task",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/provisioning/v3/getconfigfortask.do?workorderid=dolore proi&configviewmode=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"v3",
										"getconfigfortask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi",
											"description": "(Required) Work order id for which the configuration has to be retrived."
										},
										{
											"key": "configviewmode",
											"value": "dolore proi",
											"description": "(Required) View mode of the configlet. Possible values - 'saved' and 'current'"
										}
									]
								},
								"description": "This API is used to get configlets for a specified according to the view type - 'saved' or 'current'"
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getconfigfortask.do?workorderid=dolore proi&configviewmode=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getconfigfortask.do"
											],
											"query": [
												{
													"key": "workorderid",
													"value": "dolore proi"
												},
												{
													"key": "configviewmode",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"runningConfig\": [\n    {\n      \"command\": \"voluptate cupidatat\",\n      \"rowId\": 68131083,\n      \"code\": \"aliqua amet\",\n      \"blockId\": \"pariatur consequat\",\n      \"parentRowId\": -34759136,\n      \"shouldReconcile\": true\n    },\n    {\n      \"command\": \"ut \",\n      \"rowId\": -95909958,\n      \"code\": \"ipsum reprehenderit Lorem\",\n      \"blockId\": \"sunt adipisicing\",\n      \"parentRowId\": -40566810,\n      \"shouldReconcile\": true\n    }\n  ],\n  \"errors\": [\n    {\n      \"configletId\": \"quis\",\n      \"configletLineNo\": 61139849,\n      \"error\": \"est ea fugiat elit Duis\"\n    },\n    {\n      \"configletId\": \"aliqua proident est\",\n      \"configletLineNo\": 82153621,\n      \"error\": \"laborum\"\n    }\n  ],\n  \"reconcile\": -8075273,\n  \"warnings\": [\n    \"velit deserunt\",\n    \"in proident\"\n  ],\n  \"designedConfig\": [\n    {\n      \"command\": \"Excepteur amet magna\",\n      \"rowId\": 85943229,\n      \"code\": \"culpa ut\",\n      \"blockId\": \"mollit ullamco\",\n      \"parentRowId\": 15591103,\n      \"shouldReconcile\": true\n    },\n    {\n      \"command\": \"in Lorem\",\n      \"rowId\": 73362767,\n      \"code\": \"veniam ad occaecat\",\n      \"blockId\": \"pariatur elit\",\n      \"parentRowId\": 41907901,\n      \"shouldReconcile\": true\n    }\n  ],\n  \"mismatch\": 69832437,\n  \"targetIpAddress\": \"mollit tempor velit nulla\",\n  \"runningConfigcount\": -5596451,\n  \"new\": -71362995,\n  \"configs\": [\n    {\n      \"key\": \"Excepteur\",\n      \"name\": \"adipisicing consectetur Ut\",\n      \"reconciled\": false,\n      \"config\": \"Lorem proident cupidatat consequat\",\n      \"user\": \"do ullamco esse\",\n      \"note\": \"laborum Ut tempor\",\n      \"containerCount\": -86143739,\n      \"netElementCount\": -76292693,\n      \"dateTimeInLongFormat\": 22689996,\n      \"isDefault\": \"deserunt aliqua\",\n      \"isAutoBuilder\": \"eiusmo\",\n      \"type\": \"aute ut nisi\",\n      \"isDraft\": false,\n      \"editable\": false,\n      \"sslConfig\": true,\n      \"factoryId\": 96467319,\n      \"id\": -27669297\n    },\n    {\n      \"key\": \"deserunt velit aliquip et\",\n      \"name\": \"qui\",\n      \"reconciled\": false,\n      \"config\": \"pariatur\",\n      \"user\": \"ex\",\n      \"note\": \"Lorem ad in ea\",\n      \"containerCount\": 7373499,\n      \"netElementCount\": -84085854,\n      \"dateTimeInLongFormat\": 64297970,\n      \"isDefault\": \"exercitation do Excepteur\",\n      \"isAutoBuilder\": \"est ea eiusmod dolor\",\n      \"type\": \"id \",\n      \"isDraft\": false,\n      \"editable\": true,\n      \"sslConfig\": true,\n      \"factoryId\": 7533591,\n      \"id\": 46340584\n    }\n  ],\n  \"total\": 92166129,\n  \"isReconcileInvoked\": false,\n  \"configCapturedAt\": \"aliquip Ut in\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getconfigfortask.do?workorderid=dolore proi&configviewmode=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getconfigfortask.do"
											],
											"query": [
												{
													"key": "workorderid",
													"value": "dolore proi"
												},
												{
													"key": "configviewmode",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getconfigfortask.do?workorderid=dolore proi&configviewmode=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getconfigfortask.do"
											],
											"query": [
												{
													"key": "workorderid",
													"value": "dolore proi"
												},
												{
													"key": "configviewmode",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/getconfigfortask.do?workorderid=dolore proi&configviewmode=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"getconfigfortask.do"
											],
											"query": [
												{
													"key": "workorderid",
													"value": "dolore proi"
												},
												{
													"key": "configviewmode",
													"value": "dolore proi"
												}
											]
										}
									},
									"code": 440,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"incididunt amet dolor\",\n  \"errorMessage\": \"ea irure Ut\"\n}"
								}
							]
						},
						{
							"name": "This API is used to get configlets based on a search string",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/provisioning/v3/searchConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"v3",
										"searchConfiglets.do"
									],
									"query": [
										{
											"key": "objectType",
											"value": "dolore proi",
											"description": "Object type - netelement or container"
										},
										{
											"key": "objectId",
											"value": "dolore proi",
											"description": "Object id - netElementId or containerId"
										},
										{
											"key": "type",
											"value": "dolore proi",
											"description": "Type of configlet to return. Following types are allowed :-<br><ul><li>Configlet - Returns static and generated configlets</li><li>Builder - Returns builder as well as draft configlets</li><li>Draft - Returns draft configlets</li><li>BuilderWithoutDraft - Returns only builder configlets</li><li>IgnoreDraft - Returns everything other than draft configlets</li><li>Static - Returns static configlets </li><li>Generated - Returns generated configlets</li></ul>Multiple values separated by comma can be given to type parameter (eg. static,generated will fetch both the types). "
										},
										{
											"key": "queryParam",
											"value": "dolore proi",
											"description": "Search String"
										},
										{
											"key": "startIndex",
											"value": "-75690638",
											"description": "(Required) Start index for the pagination"
										},
										{
											"key": "endIndex",
											"value": "-75690638",
											"description": "(Required) End index for the pagination.If end index is 0 then all the records will be returned"
										},
										{
											"key": "sortByColumn",
											"value": "dolore proi",
											"description": "Sort based on the column .Sortable Columns are name,containerCount,netElementCount,note,type,user,dateTimeInLongFormat"
										},
										{
											"key": "sortOrder",
											"value": "dolore proi",
											"description": "Sort Order - Ascending or Descending"
										}
									]
								},
								"description": "This API is used to get a list of configlets based on a search string"
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/searchConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"searchConfiglets.do"
											],
											"query": [
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "type",
													"value": "dolore proi"
												},
												{
													"key": "queryParam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												},
												{
													"key": "sortByColumn",
													"value": "dolore proi"
												},
												{
													"key": "sortOrder",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": 52557415,\n  \"data\": [\n    {\n      \"factoryId\": -82262342,\n      \"reconciled\": true,\n      \"isDefault\": \"irure mollit labore nostrud\",\n      \"note\": \"exercitation anim ex\",\n      \"containerCount\": 83061883,\n      \"netElementCount\": -49794346,\n      \"isAutoBuilder\": \"culpa et dolor in\",\n      \"dateTimeInLongFormat\": 68893884,\n      \"user\": \"tempor amet\",\n      \"config\": \"non reprehenderit qui quis id\",\n      \"id\": -10751305,\n      \"isDraft\": false,\n      \"key\": \"ea ad deserunt sunt dolore\",\n      \"name\": \"eu proident mollit laborum\",\n      \"type\": \"occaecat Lorem nisi enim\"\n    },\n    {\n      \"factoryId\": -51115679,\n      \"reconciled\": true,\n      \"isDefault\": \"cillum\",\n      \"note\": \"eu enim\",\n      \"containerCount\": 91428062,\n      \"netElementCount\": 85700861,\n      \"isAutoBuilder\": \"ea id\",\n      \"dateTimeInLongFormat\": 15253064,\n      \"user\": \"non sunt anim in\",\n      \"config\": \"labore\",\n      \"id\": 37592883,\n      \"isDraft\": false,\n      \"key\": \"nisi enim aliqua fugiat\",\n      \"name\": \"in id\",\n      \"type\": \"non consequat\"\n    }\n  ]\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/searchConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"searchConfiglets.do"
											],
											"query": [
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "type",
													"value": "dolore proi"
												},
												{
													"key": "queryParam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												},
												{
													"key": "sortByColumn",
													"value": "dolore proi"
												},
												{
													"key": "sortOrder",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"aute voluptate id est dolore\",\n  \"errorMessage\": \"dolor culpa ip\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/searchConfiglets.do?objectType=dolore proi&objectId=dolore proi&type=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&sortByColumn=dolore proi&sortOrder=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"searchConfiglets.do"
											],
											"query": [
												{
													"key": "objectType",
													"value": "dolore proi"
												},
												{
													"key": "objectId",
													"value": "dolore proi"
												},
												{
													"key": "type",
													"value": "dolore proi"
												},
												{
													"key": "queryParam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												},
												{
													"key": "sortByColumn",
													"value": "dolore proi"
												},
												{
													"key": "sortOrder",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "This API is used to perform search on Topology data.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/provisioning/v3/searchTopology.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"v3",
										"searchTopology.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi",
											"description": "Text to be be searched"
										},
										{
											"key": "startIndex",
											"value": "-75690638",
											"description": "(Required) Start index for the pagination"
										},
										{
											"key": "endIndex",
											"value": "-75690638",
											"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
										}
									]
								},
								"description": "This API is used to perform search on Topology data."
							},
							"response": [
								{
									"name": "If the returned total is -1, use /provisioning/searchTopology instead",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/searchTopology.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"searchTopology.do"
											],
											"query": [
												{
													"key": "queryParam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"containerList\": [\n    {\n      \"name\": \"enim fugiat sint\",\n      \"key\": \"eu\",\n      \"root\": false,\n      \"undefined\": false,\n      \"userId\": \"nostrud do magna laborum Duis\",\n      \"dateTimeInLongFormat\": 52897116,\n      \"mode\": \"culpa nulla Ut\",\n      \"factoryId\": 67559511,\n      \"id\": 46322002\n    },\n    {\n      \"name\": \"proident est irure\",\n      \"key\": \"ex nostrud pariatur\",\n      \"root\": true,\n      \"undefined\": true,\n      \"userId\": \"ullamco exercitation veniam a\",\n      \"dateTimeInLongFormat\": -29136448,\n      \"mode\": \"labore ut\",\n      \"factoryId\": -53857867,\n      \"id\": -68193123\n    }\n  ],\n  \"keywordList\": [\n    \"adipisicing Lorem ipsum minim\",\n    \"elit in veniam Lorem\"\n  ],\n  \"netElementContainerList\": [\n    {\n      \"containerKey\": \"proident minim dolor\",\n      \"containerName\": \"dolor in proident ad\",\n      \"netelementKey\": \"ex\"\n    },\n    {\n      \"containerKey\": \"quis Lorem sint consectetur in\",\n      \"containerName\": \"non eu ipsum amet\",\n      \"netelementKey\": \"dolor nisi aute ut\"\n    }\n  ],\n  \"netElementList\": [\n    {\n      \"architecture\": \"dolore sit\",\n      \"bootupTimeStamp\": -86854361.75172096,\n      \"complianceCode\": \"qui aliqua\",\n      \"complianceIndication\": \"elit minim exercitation\",\n      \"deviceStatus\": \"aliquip proident esse nisi\",\n      \"deviceInfo\": \"a\",\n      \"fqdn\": \"commodo est exercitation\",\n      \"hardwareRevision\": \"esse non elit irure\",\n      \"internalBuildId\": \"officia voluptate\",\n      \"internalVersion\": \"dolore Lorem\",\n      \"ipAddress\": \"consequat\",\n      \"isDANZEnabled\": \"sit qui\",\n      \"isMLAGEnabled\": \"nulla exercitation non do\",\n      \"key\": \"tempor \",\n      \"lastSyncUp\": 30165505,\n      \"memFree\": -37259556,\n      \"memTotal\": -5573140,\n      \"modelName\": \"ut eu veniam sit\",\n      \"parentContainerId\": \"adipisicing elit\",\n      \"serialNumber\": \"elit nulla id\",\n      \"systemMacAddress\": \"ad Lorem ullamco\",\n      \"taskIdList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tempAction\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"esse deserunt\",\n      \"unAuthorized\": true,\n      \"version\": \"consequat adip\",\n      \"ztpMode\": \"sunt laboris\",\n      \"sslEnabledByCVP\": true,\n      \"sslConfigAvailable\": false\n    },\n    {\n      \"architecture\": \"labore culpa proident\",\n      \"bootupTimeStamp\": -93216687.0739764,\n      \"complianceCode\": \"Ut dolore in do\",\n      \"complianceIndication\": \"irure Duis\",\n      \"deviceStatus\": \"reprehend\",\n      \"deviceInfo\": \"laboris consectetur\",\n      \"fqdn\": \"esse conseq\",\n      \"hardwareRevision\": \"minim et velit\",\n      \"internalBuildId\": \"reprehenderit\",\n      \"internalVersion\": \"reprehenderit in\",\n      \"ipAddress\": \"anim velit ut Lorem\",\n      \"isDANZEnabled\": \"fugiat veniam laboris minim\",\n      \"isMLAGEnabled\": \"commodo\",\n      \"key\": \"non\",\n      \"lastSyncUp\": -26302334,\n      \"memFree\": -69520963,\n      \"memTotal\": 61923611,\n      \"modelName\": \"cupidatat eiusmod consequat\",\n      \"parentContainerId\": \"nulla eiusmod cillum\",\n      \"serialNumber\": \"proident laboris\",\n      \"systemMacAddress\": \"labore qui est\",\n      \"taskIdList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tempAction\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"in\",\n      \"unAuthorized\": true,\n      \"version\": \"pariatur mollit sint eiusmod\",\n      \"ztpMode\": \"in amet ullamco deserunt\",\n      \"sslEnabledByCVP\": false,\n      \"sslConfigAvailable\": true\n    }\n  ],\n  \"total\": 36355489\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/searchTopology.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"searchTopology.do"
											],
											"query": [
												{
													"key": "queryParam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/provisioning/v3/searchTopology.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"provisioning",
												"v3",
												"searchTopology.do"
											],
											"query": [
												{
													"key": "queryParam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "-75690638"
												},
												{
													"key": "endIndex",
													"value": "-75690638"
												}
											]
										}
									},
									"code": 440,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"eiusmod\",\n  \"errorMessage\": \"eiusmod mollit Lorem\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "This API is used to add temporary proposed actions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"info\": \"esse officia\",\n      \"action\": \"minim nulla\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"adipisicing sint esse\",\n      \"fromName\": \"aliqua ut\",\n      \"infoPreview\": \"minim sed\",\n      \"nodeId\": \"consequat labore\",\n      \"nodeName\": \"officia deserunt Lorem reprehenderit\",\n      \"nodeType\": \"do reprehenderit\",\n      \"toId\": \"amet aliquip\",\n      \"toIdType\": \"elit\",\n      \"toName\": \"consectetur pariatur sint\"\n    },\n    {\n      \"info\": \"tempo\",\n      \"action\": \"eiusmod enim fugiat\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"pariatur qui Excepteur\",\n      \"fromName\": \"deserunt voluptate nisi aliqua\",\n      \"infoPreview\": \"nisi labore repre\",\n      \"nodeId\": \"aute officia\",\n      \"nodeName\": \"occaecat\",\n      \"nodeType\": \"commodo ea anim\",\n      \"toId\": \"Duis dolore irure anim\",\n      \"toIdType\": \"veniam anim\",\n      \"toName\": \"anim magna\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/provisioning/addTempAction.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"addTempAction.do"
							],
							"query": [
								{
									"key": "nodeId",
									"value": "dolore proi",
									"description": "(Required) Unique id of a node. eg.- ContainerId - root"
								},
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "Query to be be searched. If the value is empty then returns all data"
								},
								{
									"key": "format",
									"value": "dolore proi",
									"description": "(Required) Either 'topology' or 'list'"
								}
							]
						},
						"description": "Creates temp proposed actions. List of actions can be added using array"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"info\": \"et est\",\n      \"action\": \"est laboris magna reprehenderit\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"reprehenderit\",\n      \"fromName\": \"velit in mollit\",\n      \"infoPreview\": \"fugiat Duis\",\n      \"nodeId\": \"eiusmod in quis\",\n      \"nodeName\": \"consectetur labore\",\n      \"nodeType\": \"ad laboris\",\n      \"toId\": \"eu sit elit\",\n      \"toIdType\": \"deserunt esse et consequat\",\n      \"toName\": \"eiusmod esse fugiat proident aliqua\"\n    },\n    {\n      \"info\": \"sit eu aliqua exercitation\",\n      \"action\": \"Excepteur ut\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"reprehenderit\",\n      \"fromName\": \"fugiat pariatur\",\n      \"infoPreview\": \"enim cillum consequat ipsum id\",\n      \"nodeId\": \"commodo Lorem in voluptate\",\n      \"nodeName\": \"sunt pariatur\",\n      \"nodeType\": \"minim esse in nulla\",\n      \"toId\": \"aliquip Ut ex qui\",\n      \"toIdType\": \"Excepteur reprehenderit quis\",\n      \"toName\": \"E\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/addTempAction.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"addTempAction.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "format",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"Excepteur adipisicing in eu \",\n  \"list\": {\n    \"key\": \"quis dolore se\",\n    \"name\": \"irure ipsum in tempor\",\n    \"type\": \"ut veniam reprehenderit ip\",\n    \"childContainerCount\": 18775935,\n    \"childNetElementCount\": 43807521,\n    \"parentContainerId\": \"consectetur exercitation ex ut\",\n    \"mode\": \"labor\",\n    \"deviceStatus\": {\n      \"critical\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warning\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"normal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageUpgrade\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"task\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unAuthorized\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"childTaskCount\": 82546586,\n    \"childContainerList\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      }\n    ],\n    \"childNetElementList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"hierarchyNetElementCount\": -59342064,\n    \"tempAction\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tempEvent\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"topology\": {\n    \"key\": \"incididunt mollit sint fugiat\",\n    \"name\": \"veniam officia dolor\",\n    \"type\": \"pariatur amet nostrud\",\n    \"childContainerCount\": -61257961,\n    \"childNetElementCount\": -63085071,\n    \"parentContainerId\": \"ipsum\",\n    \"mode\": \"quis\",\n    \"deviceStatus\": {\n      \"critical\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warning\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"normal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageUpgrade\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"task\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unAuthorized\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"childTaskCount\": 17849254,\n    \"childContainerList\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      }\n    ],\n    \"childNetElementList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"hierarchyNetElementCount\": -91909403,\n    \"tempAction\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tempEvent\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"info\": \"et est\",\n      \"action\": \"est laboris magna reprehenderit\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"reprehenderit\",\n      \"fromName\": \"velit in mollit\",\n      \"infoPreview\": \"fugiat Duis\",\n      \"nodeId\": \"eiusmod in quis\",\n      \"nodeName\": \"consectetur labore\",\n      \"nodeType\": \"ad laboris\",\n      \"toId\": \"eu sit elit\",\n      \"toIdType\": \"deserunt esse et consequat\",\n      \"toName\": \"eiusmod esse fugiat proident aliqua\"\n    },\n    {\n      \"info\": \"sit eu aliqua exercitation\",\n      \"action\": \"Excepteur ut\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"reprehenderit\",\n      \"fromName\": \"fugiat pariatur\",\n      \"infoPreview\": \"enim cillum consequat ipsum id\",\n      \"nodeId\": \"commodo Lorem in voluptate\",\n      \"nodeName\": \"sunt pariatur\",\n      \"nodeType\": \"minim esse in nulla\",\n      \"toId\": \"aliquip Ut ex qui\",\n      \"toIdType\": \"Excepteur reprehenderit quis\",\n      \"toName\": \"E\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/addTempAction.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"addTempAction.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "format",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"consequat in an\",\n  \"errorMessage\": \"pariatur ad Lorem dolore\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"info\": \"et est\",\n      \"action\": \"est laboris magna reprehenderit\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"reprehenderit\",\n      \"fromName\": \"velit in mollit\",\n      \"infoPreview\": \"fugiat Duis\",\n      \"nodeId\": \"eiusmod in quis\",\n      \"nodeName\": \"consectetur labore\",\n      \"nodeType\": \"ad laboris\",\n      \"toId\": \"eu sit elit\",\n      \"toIdType\": \"deserunt esse et consequat\",\n      \"toName\": \"eiusmod esse fugiat proident aliqua\"\n    },\n    {\n      \"info\": \"sit eu aliqua exercitation\",\n      \"action\": \"Excepteur ut\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"reprehenderit\",\n      \"fromName\": \"fugiat pariatur\",\n      \"infoPreview\": \"enim cillum consequat ipsum id\",\n      \"nodeId\": \"commodo Lorem in voluptate\",\n      \"nodeName\": \"sunt pariatur\",\n      \"nodeType\": \"minim esse in nulla\",\n      \"toId\": \"aliquip Ut ex qui\",\n      \"toIdType\": \"Excepteur reprehenderit quis\",\n      \"toName\": \"E\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/addTempAction.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"addTempAction.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "format",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"info\": \"et est\",\n      \"action\": \"est laboris magna reprehenderit\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"reprehenderit\",\n      \"fromName\": \"velit in mollit\",\n      \"infoPreview\": \"fugiat Duis\",\n      \"nodeId\": \"eiusmod in quis\",\n      \"nodeName\": \"consectetur labore\",\n      \"nodeType\": \"ad laboris\",\n      \"toId\": \"eu sit elit\",\n      \"toIdType\": \"deserunt esse et consequat\",\n      \"toName\": \"eiusmod esse fugiat proident aliqua\"\n    },\n    {\n      \"info\": \"sit eu aliqua exercitation\",\n      \"action\": \"Excepteur ut\",\n      \"configCompareCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromId\": \"reprehenderit\",\n      \"fromName\": \"fugiat pariatur\",\n      \"infoPreview\": \"enim cillum consequat ipsum id\",\n      \"nodeId\": \"commodo Lorem in voluptate\",\n      \"nodeName\": \"sunt pariatur\",\n      \"nodeType\": \"minim esse in nulla\",\n      \"toId\": \"aliquip Ut ex qui\",\n      \"toIdType\": \"Excepteur reprehenderit quis\",\n      \"toName\": \"E\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/addTempAction.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"addTempAction.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "format",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "Reverts the reconcile changes made.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/cancelReconcile.do?configletId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"cancelReconcile.do"
							],
							"query": [
								{
									"key": "configletId",
									"value": "dolore proi",
									"description": "(Required) Configlet ID for which the reconcile has to be reverted"
								}
							]
						},
						"description": "Reverts the reconcile changes made."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/cancelReconcile.do?configletId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"cancelReconcile.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/cancelReconcile.do?configletId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"cancelReconcile.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"pariatur nostrud est tempor\",\n  \"errorMessage\": \"laboris\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/cancelReconcile.do?configletId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"cancelReconcile.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/cancelReconcile.do?configletId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"cancelReconcile.do"
									],
									"query": [
										{
											"key": "configletId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to check the compliance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nodeId\": \"officia eiu\",\n  \"nodeType\": \"ut magna\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/provisioning/checkCompliance.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"checkCompliance.do"
							]
						},
						"description": "This API is used to check the compliance.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.3 train."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": \"officia eiu\",\n  \"nodeType\": \"ut magna\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/checkCompliance.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"checkCompliance.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"architecture\": \"ut\",\n  \"bootupTimeStamp\": 47318258.8771576,\n  \"complianceCode\": \"sunt amet\",\n  \"complianceIndication\": \"cupidatat adipisicing in voluptate aliquip\",\n  \"deviceStatus\": \"dolor ullamco adipisicing eu laboris\",\n  \"deviceInfo\": \"aliqua\",\n  \"fqdn\": \"ex sunt Lorem\",\n  \"hardwareRevision\": \"sit aute sunt\",\n  \"internalBuildId\": \"ut ea voluptate in sed\",\n  \"internalVersion\": \"in proident sunt\",\n  \"ipAddress\": \"in\",\n  \"isDANZEnabled\": \"ad aute\",\n  \"isMLAGEnabled\": \"adipisicing Lorem\",\n  \"key\": \"eiusmod deserunt pariatur\",\n  \"lastSyncUp\": -30559946,\n  \"memFree\": -66833411,\n  \"memTotal\": -19314453,\n  \"modelName\": \"U\",\n  \"parentContainerId\": \"anim consequat in veniam dolore\",\n  \"serialNumber\": \"adipisicing ad sunt\",\n  \"systemMacAddress\": \"ad aliq\",\n  \"taskIdList\": [\n    {\n      \"workOrderId\": \"ullamco incididunt cupid\",\n      \"name\": \"aliquip\",\n      \"workOrderEscalation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"workOrderState\": \"ACTIVE\",\n      \"currentTaskName\": \"anim consequat veniam ut Ut\",\n      \"templateId\": \"officia pariatur qui\",\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBy\": \"exer\",\n      \"executedOnInLongFormat\": -27965127,\n      \"executedBy\": \"Excepteur voluptate nisi officia\",\n      \"currentTaskType\": \"qui exercitation laboris\",\n      \"workFlowDetailsId\": \"exercitation dolor Excepteur commodo\",\n      \"description\": \"sunt id cillum voluptate\",\n      \"workOrderUserDefinedStatus\": \"n\",\n      \"workOrderDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdOnInLongFormat\": 49612644,\n      \"completedOnInLongFormat\": -64341072,\n      \"note\": \"laborum non dolore\",\n      \"taskStatus\": \"ACTIVE\",\n      \"taskStatusBeforeCancel\": \"ut aliqua s\",\n      \"newParentContainerName\": \"qui in eu\",\n      \"ccId\": \"dolore sint\",\n      \"factoryId\": 61387381,\n      \"newParentContainerId\": \"veniam in exercitation\",\n      \"id\": -56597727\n    },\n    {\n      \"workOrderId\": \"amet reprehenderit\",\n      \"name\": \"sint\",\n      \"workOrderEscalation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"workOrderState\": \"ACTIVE\",\n      \"currentTaskName\": \"in minim reprehenderit aliqua\",\n      \"templateId\": \"nulla incididunt sed minim\",\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBy\": \"laborum labore ut\",\n      \"executedOnInLongFormat\": -12763455,\n      \"executedBy\": \"eiusmod fugiat\",\n      \"currentTaskType\": \"sint\",\n      \"workFlowDetailsId\": \"proident magna la\",\n      \"description\": \"eu ut adipisicing nostrud\",\n      \"workOrderUserDefinedStatus\": \"sed reprehenderit minim Excepteur\",\n      \"workOrderDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdOnInLongFormat\": 47360055,\n      \"completedOnInLongFormat\": 78227949,\n      \"note\": \"dolore sunt in in Ut\",\n      \"taskStatus\": \"ACTIVE\",\n      \"taskStatusBeforeCancel\": \"velit veniam\",\n      \"newParentContainerName\": \"exercitation ut aliquip id quis\",\n      \"ccId\": \"proiden\",\n      \"factoryId\": -57694376,\n      \"newParentContainerId\": \"dolore fugiat\",\n      \"id\": -49692734\n    }\n  ],\n  \"tempAction\": [\n    {\n      \"ccId\": \"laborum\",\n      \"sessionId\": \"Lorem tempor nisi\",\n      \"containerKey\": \"qui\",\n      \"taskId\": -29610190,\n      \"info\": \"pariatur non anim nostrud\",\n      \"infoPreview\": \"irure proident\",\n      \"note\": \"do\",\n      \"action\": \"veniam\",\n      \"nodeType\": \"velit dolore\",\n      \"nodeId\": \"sit proident cupidatat quis\",\n      \"toId\": \"esse\",\n      \"fromId\": \"magna Lorem Excepteur dolor\",\n      \"nodeName\": \"culpa voluptate\",\n      \"toName\": \"dolor minim ullamco\",\n      \"fromName\": \"ullamco\",\n      \"childTasks\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentTask\": \"magna quis in in\",\n      \"oldNodeName\": \"aute exe\",\n      \"toIdType\": \"Duis sed enim aute cupidatat\",\n      \"configletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeIpAddress\": \"ullamco incididunt ea\",\n      \"nodeTargetIpAddress\": \"ea\",\n      \"userId\": \"dolor elit est\",\n      \"key\": \"sint qui\",\n      \"ignoreNodeId\": \"dolore esse nulla cillum\",\n      \"ignoreNodeName\": \"esse non veniam nulla\",\n      \"imageBundleId\": \"anim dolore veniam amet in\",\n      \"mode\": \"mollit Duis veniam\",\n      \"timestamp\": -76226460,\n      \"configletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"pageType\": \"ut cillum incididunt irure\",\n      \"viaContainer\": true,\n      \"bestImageContainerId\": \"consequat nisi\",\n      \"factoryId\": 45577027,\n      \"id\": 97199892\n    },\n    {\n      \"ccId\": \"Duis cupidatat\",\n      \"sessionId\": \"dolore in esse\",\n      \"containerKey\": \"sint amet\",\n      \"taskId\": 63252417,\n      \"info\": \"nisi elit Lorem laboris occaecat\",\n      \"infoPreview\": \"nisi cillum ad pariatur\",\n      \"note\": \"deserunt aute do\",\n      \"action\": \"amet irure ex\",\n      \"nodeType\": \"minim id ut officia\",\n      \"nodeId\": \"dolore Duis eiusmod dolor\",\n      \"toId\": \"ipsum aute\",\n      \"fromId\": \"aliquip aliqua\",\n      \"nodeName\": \"in reprehenderit mollit nisi consequat\",\n      \"toName\": \"elit enim\",\n      \"fromName\": \"proident nostrud officia\",\n      \"childTasks\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentTask\": \"dolor ex et Duis\",\n      \"oldNodeName\": \"Excepteur ut consectetur ut\",\n      \"toIdType\": \"sit d\",\n      \"configletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeIpAddress\": \"magna ad\",\n      \"nodeTargetIpAddress\": \"occaecat et\",\n      \"userId\": \"in elit sunt\",\n      \"key\": \"eiusmod enim\",\n      \"ignoreNodeId\": \"cillum \",\n      \"ignoreNodeName\": \"quis\",\n      \"imageBundleId\": \"sit\",\n      \"mode\": \"sit ea\",\n      \"timestamp\": -4603889,\n      \"configletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"pageType\": \"incididunt mollit\",\n      \"viaContainer\": true,\n      \"bestImageContainerId\": \"enim\",\n      \"factoryId\": -87777239,\n      \"id\": 56866028\n    }\n  ],\n  \"type\": \"dolore irure voluptate\",\n  \"unAuthorized\": true,\n  \"version\": \"\",\n  \"ztpMode\": \"ea d\",\n  \"sslEnabledByCVP\": false,\n  \"sslConfigAvailable\": true\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": \"officia eiu\",\n  \"nodeType\": \"ut magna\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/checkCompliance.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"checkCompliance.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"dolore\",\n  \"errorMessage\": \"laborum mollit reprehenderit id\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": \"officia eiu\",\n  \"nodeType\": \"ut magna\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/checkCompliance.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"checkCompliance.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nodeId\": \"officia eiu\",\n  \"nodeType\": \"ut magna\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/checkCompliance.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"checkCompliance.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to trigger reconcile in container level",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/containerLevelReconcile.do?containerId=dolore proi&reconcileAll=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"containerLevelReconcile.do"
							],
							"query": [
								{
									"key": "containerId",
									"value": "dolore proi",
									"description": "(Required) Unique id of a container"
								},
								{
									"key": "reconcileAll",
									"value": "false",
									"description": "Flag to reconcile both new and mismatch lines"
								}
							]
						},
						"description": "Triggers reconcile in container level"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/containerLevelReconcile.do?containerId=dolore proi&reconcileAll=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"containerLevelReconcile.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "reconcileAll",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/containerLevelReconcile.do?containerId=dolore proi&reconcileAll=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"containerLevelReconcile.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "reconcileAll",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sed laboris\",\n  \"errorMessage\": \"laborum culpa commodo id nulla\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/containerLevelReconcile.do?containerId=dolore proi&reconcileAll=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"containerLevelReconcile.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "reconcileAll",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/containerLevelReconcile.do?containerId=dolore proi&reconcileAll=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"containerLevelReconcile.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "reconcileAll",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to delete a single temp action",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ccId\": \"ut \",\n  \"sessionId\": \"sunt enim\",\n  \"containerKey\": \"velit cupidatat consectetur\",\n  \"taskId\": 68660253,\n  \"info\": \"anim dolore id\",\n  \"infoPreview\": \"fugiat qui sin\",\n  \"note\": \"esse ven\",\n  \"action\": \"consequat laborum\",\n  \"nodeType\": \"aliquip laborum\",\n  \"nodeId\": \"ut cupidatat esse irure laborum\",\n  \"toId\": \"qui culpa dolor ut tempor\",\n  \"fromId\": \"volupta\",\n  \"nodeName\": \"reprehenderit deserunt \",\n  \"toName\": \"laborum ut\",\n  \"fromName\": \"aliquip\",\n  \"childTasks\": [\n    -93245851,\n    -7698192\n  ],\n  \"parentTask\": \"est ipsum\",\n  \"oldNodeName\": \"Ut dolore incididunt tempor in\",\n  \"toIdType\": \"Lorem deserunt\",\n  \"configletList\": [\n    \"deserunt dolore\",\n    \"ad do sunt ut\"\n  ],\n  \"ignoreConfigletList\": [\n    \"aute aliquip esse reprehenderit ad\",\n    \"voluptate consequat Excepteur\"\n  ],\n  \"configletNamesList\": [\n    \"occaecat\",\n    \"dolore sit esse officia in\"\n  ],\n  \"ignoreConfigletNamesList\": [\n    \"Lorem enim culpa exercitation\",\n    \"aute mollit\"\n  ],\n  \"nodeList\": [\n    \"dolor eu ex\",\n    \"esse ex\"\n  ],\n  \"ignoreNodeList\": [\n    \"esse nulla\",\n    \"voluptate proident anim Excepteur sed\"\n  ],\n  \"nodeNamesList\": [\n    \"irure ipsum\",\n    \"dolore velit\"\n  ],\n  \"ignoreNodeNamesList\": [\n    \"sunt incididunt magna eu\",\n    \"sit cupidatat deserunt dolore ut\"\n  ],\n  \"nodeIpAddress\": \"in\",\n  \"nodeTargetIpAddress\": \"nulla\",\n  \"userId\": \"Duis\",\n  \"key\": \"irure veniam exercitation\",\n  \"ignoreNodeId\": \"esse\",\n  \"ignoreNodeName\": \"ut et voluptate in\",\n  \"imageBundleId\": \"s\",\n  \"mode\": \"amet\",\n  \"timestamp\": 43756336,\n  \"configletBuilderList\": [\n    \"veniam ex cupida\",\n    \"sint\"\n  ],\n  \"configletBuilderNamesList\": [\n    \"pariatur quis ut\",\n    \"irure sunt do in\"\n  ],\n  \"ignoreConfigletBuilderList\": [\n    \"commodo\",\n    \"aute incididunt labore\"\n  ],\n  \"ignoreConfigletBuilderNamesList\": [\n    \"laboris culpa ex sit dolor\",\n    \"aliquip\"\n  ],\n  \"pageType\": \"magna aute\",\n  \"viaContainer\": true,\n  \"bestImageContainerId\": \"officia Lorem veniam\",\n  \"configCompareCount\": {\n    \"mismatch\": 89532008,\n    \"reconcile\": -9220539,\n    \"new\": 38082321\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/provisioning/deleteTempAction.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"deleteTempAction.do"
							]
						},
						"description": "Deletes given temp action data"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ccId\": \"et cillum\",\n  \"sessionId\": \"cillum commodo\",\n  \"containerKey\": \"\",\n  \"taskId\": -47079203,\n  \"info\": \"ut sunt nulla min\",\n  \"infoPreview\": \"aliquip cupidatat\",\n  \"note\": \"velit consectetur incididunt dolor\",\n  \"action\": \"ullamco ut irure deserunt\",\n  \"nodeType\": \"aliqua veniam\",\n  \"nodeId\": \"eu ex quis est\",\n  \"toId\": \"mollit p\",\n  \"fromId\": \"laborum nulla anim\",\n  \"nodeName\": \"aliquip sit occaecat veniam tempor\",\n  \"toName\": \"irure sunt\",\n  \"fromName\": \"nisi labore mollit\",\n  \"childTasks\": [\n    36156920,\n    -21244039\n  ],\n  \"parentTask\": \"aliqua\",\n  \"oldNodeName\": \"non aliqua magna\",\n  \"toIdType\": \"occaecat ex nisi\",\n  \"configletList\": [\n    \"enim magna fugiat ut\",\n    \"dolore officia dolor\"\n  ],\n  \"ignoreConfigletList\": [\n    \"dolore ex esse e\",\n    \"laboris Lorem\"\n  ],\n  \"configletNamesList\": [\n    \"elit anim\",\n    \"non\"\n  ],\n  \"ignoreConfigletNamesList\": [\n    \"fugiat consectetur laboris aliqua\",\n    \"fugiat eu minim\"\n  ],\n  \"nodeList\": [\n    \"et reprehenderit officia occaecat consectetur\",\n    \"minim \"\n  ],\n  \"ignoreNodeList\": [\n    \"velit pariatur cillum ea\",\n    \"adipisicing in \"\n  ],\n  \"nodeNamesList\": [\n    \"Excepteur\",\n    \"aute proident aliqua\"\n  ],\n  \"ignoreNodeNamesList\": [\n    \"in ad ut\",\n    \"anim id tempo\"\n  ],\n  \"nodeIpAddress\": \"do laborum non dolore laboris\",\n  \"nodeTargetIpAddress\": \"cupidatat eiusmod nulla ir\",\n  \"userId\": \"occaecat Excepteur qui est\",\n  \"key\": \"sint do fugiat quis\",\n  \"ignoreNodeId\": \"irure esse v\",\n  \"ignoreNodeName\": \"id minim in\",\n  \"imageBundleId\": \"ex Ut sed\",\n  \"mode\": \"tempor\",\n  \"timestamp\": 77245603,\n  \"configletBuilderList\": [\n    \"deserunt cupidatat in velit\",\n    \"commodo do\"\n  ],\n  \"configletBuilderNamesList\": [\n    \"ut non\",\n    \"cupidatat eiusmod occaecat irure\"\n  ],\n  \"ignoreConfigletBuilderList\": [\n    \"ea do enim dolore\",\n    \"amet magna Duis\"\n  ],\n  \"ignoreConfigletBuilderNamesList\": [\n    \"in Ut occaecat labore elit\",\n    \"irure et elit ut\"\n  ],\n  \"pageType\": \"enim ut dolor\",\n  \"viaContainer\": false,\n  \"bestImageContainerId\": \"officia proident\",\n  \"configCompareCount\": {\n    \"mismatch\": -96162212,\n    \"reconcile\": -28850782,\n    \"new\": 26462257\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/deleteTempAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"deleteTempAction.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Result\": \"magna\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ccId\": \"et cillum\",\n  \"sessionId\": \"cillum commodo\",\n  \"containerKey\": \"\",\n  \"taskId\": -47079203,\n  \"info\": \"ut sunt nulla min\",\n  \"infoPreview\": \"aliquip cupidatat\",\n  \"note\": \"velit consectetur incididunt dolor\",\n  \"action\": \"ullamco ut irure deserunt\",\n  \"nodeType\": \"aliqua veniam\",\n  \"nodeId\": \"eu ex quis est\",\n  \"toId\": \"mollit p\",\n  \"fromId\": \"laborum nulla anim\",\n  \"nodeName\": \"aliquip sit occaecat veniam tempor\",\n  \"toName\": \"irure sunt\",\n  \"fromName\": \"nisi labore mollit\",\n  \"childTasks\": [\n    36156920,\n    -21244039\n  ],\n  \"parentTask\": \"aliqua\",\n  \"oldNodeName\": \"non aliqua magna\",\n  \"toIdType\": \"occaecat ex nisi\",\n  \"configletList\": [\n    \"enim magna fugiat ut\",\n    \"dolore officia dolor\"\n  ],\n  \"ignoreConfigletList\": [\n    \"dolore ex esse e\",\n    \"laboris Lorem\"\n  ],\n  \"configletNamesList\": [\n    \"elit anim\",\n    \"non\"\n  ],\n  \"ignoreConfigletNamesList\": [\n    \"fugiat consectetur laboris aliqua\",\n    \"fugiat eu minim\"\n  ],\n  \"nodeList\": [\n    \"et reprehenderit officia occaecat consectetur\",\n    \"minim \"\n  ],\n  \"ignoreNodeList\": [\n    \"velit pariatur cillum ea\",\n    \"adipisicing in \"\n  ],\n  \"nodeNamesList\": [\n    \"Excepteur\",\n    \"aute proident aliqua\"\n  ],\n  \"ignoreNodeNamesList\": [\n    \"in ad ut\",\n    \"anim id tempo\"\n  ],\n  \"nodeIpAddress\": \"do laborum non dolore laboris\",\n  \"nodeTargetIpAddress\": \"cupidatat eiusmod nulla ir\",\n  \"userId\": \"occaecat Excepteur qui est\",\n  \"key\": \"sint do fugiat quis\",\n  \"ignoreNodeId\": \"irure esse v\",\n  \"ignoreNodeName\": \"id minim in\",\n  \"imageBundleId\": \"ex Ut sed\",\n  \"mode\": \"tempor\",\n  \"timestamp\": 77245603,\n  \"configletBuilderList\": [\n    \"deserunt cupidatat in velit\",\n    \"commodo do\"\n  ],\n  \"configletBuilderNamesList\": [\n    \"ut non\",\n    \"cupidatat eiusmod occaecat irure\"\n  ],\n  \"ignoreConfigletBuilderList\": [\n    \"ea do enim dolore\",\n    \"amet magna Duis\"\n  ],\n  \"ignoreConfigletBuilderNamesList\": [\n    \"in Ut occaecat labore elit\",\n    \"irure et elit ut\"\n  ],\n  \"pageType\": \"enim ut dolor\",\n  \"viaContainer\": false,\n  \"bestImageContainerId\": \"officia proident\",\n  \"configCompareCount\": {\n    \"mismatch\": -96162212,\n    \"reconcile\": -28850782,\n    \"new\": 26462257\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/deleteTempAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"deleteTempAction.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in enim reprehenderit consectetur laborum\",\n  \"errorMessage\": \"ut velit dolore\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ccId\": \"et cillum\",\n  \"sessionId\": \"cillum commodo\",\n  \"containerKey\": \"\",\n  \"taskId\": -47079203,\n  \"info\": \"ut sunt nulla min\",\n  \"infoPreview\": \"aliquip cupidatat\",\n  \"note\": \"velit consectetur incididunt dolor\",\n  \"action\": \"ullamco ut irure deserunt\",\n  \"nodeType\": \"aliqua veniam\",\n  \"nodeId\": \"eu ex quis est\",\n  \"toId\": \"mollit p\",\n  \"fromId\": \"laborum nulla anim\",\n  \"nodeName\": \"aliquip sit occaecat veniam tempor\",\n  \"toName\": \"irure sunt\",\n  \"fromName\": \"nisi labore mollit\",\n  \"childTasks\": [\n    36156920,\n    -21244039\n  ],\n  \"parentTask\": \"aliqua\",\n  \"oldNodeName\": \"non aliqua magna\",\n  \"toIdType\": \"occaecat ex nisi\",\n  \"configletList\": [\n    \"enim magna fugiat ut\",\n    \"dolore officia dolor\"\n  ],\n  \"ignoreConfigletList\": [\n    \"dolore ex esse e\",\n    \"laboris Lorem\"\n  ],\n  \"configletNamesList\": [\n    \"elit anim\",\n    \"non\"\n  ],\n  \"ignoreConfigletNamesList\": [\n    \"fugiat consectetur laboris aliqua\",\n    \"fugiat eu minim\"\n  ],\n  \"nodeList\": [\n    \"et reprehenderit officia occaecat consectetur\",\n    \"minim \"\n  ],\n  \"ignoreNodeList\": [\n    \"velit pariatur cillum ea\",\n    \"adipisicing in \"\n  ],\n  \"nodeNamesList\": [\n    \"Excepteur\",\n    \"aute proident aliqua\"\n  ],\n  \"ignoreNodeNamesList\": [\n    \"in ad ut\",\n    \"anim id tempo\"\n  ],\n  \"nodeIpAddress\": \"do laborum non dolore laboris\",\n  \"nodeTargetIpAddress\": \"cupidatat eiusmod nulla ir\",\n  \"userId\": \"occaecat Excepteur qui est\",\n  \"key\": \"sint do fugiat quis\",\n  \"ignoreNodeId\": \"irure esse v\",\n  \"ignoreNodeName\": \"id minim in\",\n  \"imageBundleId\": \"ex Ut sed\",\n  \"mode\": \"tempor\",\n  \"timestamp\": 77245603,\n  \"configletBuilderList\": [\n    \"deserunt cupidatat in velit\",\n    \"commodo do\"\n  ],\n  \"configletBuilderNamesList\": [\n    \"ut non\",\n    \"cupidatat eiusmod occaecat irure\"\n  ],\n  \"ignoreConfigletBuilderList\": [\n    \"ea do enim dolore\",\n    \"amet magna Duis\"\n  ],\n  \"ignoreConfigletBuilderNamesList\": [\n    \"in Ut occaecat labore elit\",\n    \"irure et elit ut\"\n  ],\n  \"pageType\": \"enim ut dolor\",\n  \"viaContainer\": false,\n  \"bestImageContainerId\": \"officia proident\",\n  \"configCompareCount\": {\n    \"mismatch\": -96162212,\n    \"reconcile\": -28850782,\n    \"new\": 26462257\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/deleteTempAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"deleteTempAction.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ccId\": \"et cillum\",\n  \"sessionId\": \"cillum commodo\",\n  \"containerKey\": \"\",\n  \"taskId\": -47079203,\n  \"info\": \"ut sunt nulla min\",\n  \"infoPreview\": \"aliquip cupidatat\",\n  \"note\": \"velit consectetur incididunt dolor\",\n  \"action\": \"ullamco ut irure deserunt\",\n  \"nodeType\": \"aliqua veniam\",\n  \"nodeId\": \"eu ex quis est\",\n  \"toId\": \"mollit p\",\n  \"fromId\": \"laborum nulla anim\",\n  \"nodeName\": \"aliquip sit occaecat veniam tempor\",\n  \"toName\": \"irure sunt\",\n  \"fromName\": \"nisi labore mollit\",\n  \"childTasks\": [\n    36156920,\n    -21244039\n  ],\n  \"parentTask\": \"aliqua\",\n  \"oldNodeName\": \"non aliqua magna\",\n  \"toIdType\": \"occaecat ex nisi\",\n  \"configletList\": [\n    \"enim magna fugiat ut\",\n    \"dolore officia dolor\"\n  ],\n  \"ignoreConfigletList\": [\n    \"dolore ex esse e\",\n    \"laboris Lorem\"\n  ],\n  \"configletNamesList\": [\n    \"elit anim\",\n    \"non\"\n  ],\n  \"ignoreConfigletNamesList\": [\n    \"fugiat consectetur laboris aliqua\",\n    \"fugiat eu minim\"\n  ],\n  \"nodeList\": [\n    \"et reprehenderit officia occaecat consectetur\",\n    \"minim \"\n  ],\n  \"ignoreNodeList\": [\n    \"velit pariatur cillum ea\",\n    \"adipisicing in \"\n  ],\n  \"nodeNamesList\": [\n    \"Excepteur\",\n    \"aute proident aliqua\"\n  ],\n  \"ignoreNodeNamesList\": [\n    \"in ad ut\",\n    \"anim id tempo\"\n  ],\n  \"nodeIpAddress\": \"do laborum non dolore laboris\",\n  \"nodeTargetIpAddress\": \"cupidatat eiusmod nulla ir\",\n  \"userId\": \"occaecat Excepteur qui est\",\n  \"key\": \"sint do fugiat quis\",\n  \"ignoreNodeId\": \"irure esse v\",\n  \"ignoreNodeName\": \"id minim in\",\n  \"imageBundleId\": \"ex Ut sed\",\n  \"mode\": \"tempor\",\n  \"timestamp\": 77245603,\n  \"configletBuilderList\": [\n    \"deserunt cupidatat in velit\",\n    \"commodo do\"\n  ],\n  \"configletBuilderNamesList\": [\n    \"ut non\",\n    \"cupidatat eiusmod occaecat irure\"\n  ],\n  \"ignoreConfigletBuilderList\": [\n    \"ea do enim dolore\",\n    \"amet magna Duis\"\n  ],\n  \"ignoreConfigletBuilderNamesList\": [\n    \"in Ut occaecat labore elit\",\n    \"irure et elit ut\"\n  ],\n  \"pageType\": \"enim ut dolor\",\n  \"viaContainer\": false,\n  \"bestImageContainerId\": \"officia proident\",\n  \"configCompareCount\": {\n    \"mismatch\": -96162212,\n    \"reconcile\": -28850782,\n    \"new\": 26462257\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/deleteTempAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"deleteTempAction.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to enable provisioning for an existing streaming device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"deviceId\": \"sit ullamco\"\n    },\n    {\n      \"deviceId\": \"quis eu voluptate ut\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/provisioning/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"devices"
							]
						},
						"description": "Enables provisioning for existing streaming devices. In case of partial success, HTTP status code of 200 is returned and the response body contains the list of failed devices"
					},
					"response": [
						{
							"name": "Key \"data\" contains \"success\" if all devices are provisioned. Otherwise, it contains list of devices that could not be provisioned along with failure reason.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"deviceId\": \"qui \"\n    },\n    {\n      \"deviceId\": \"proident ullamco incididunt sit\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"devices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"failed\": {\n      \"<deviceID 1>\": \"failure reason\",\n      \"<deviceID 2>\": \"failure reason\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"deviceId\": \"qui \"\n    },\n    {\n      \"deviceId\": \"proident ullamco incididunt sit\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"devices"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"deviceId\": \"qui \"\n    },\n    {\n      \"deviceId\": \"proident ullamco incididunt sit\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"devices"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    {\n      \"deviceId\": \"qui \"\n    },\n    {\n      \"deviceId\": \"proident ullamco incididunt sit\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"devices"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to retrieve ZTP topology data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/filterTopology.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"filterTopology.do"
							],
							"query": [
								{
									"key": "nodeId",
									"value": "dolore proi",
									"description": "The node id"
								},
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "Text to be searched for"
								},
								{
									"key": "format",
									"value": "dolore proi",
									"description": "(Required) The format of view - 'topology' or 'list'"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "This API is used to retrieve ZTP topology data"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/filterTopology.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"filterTopology.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "format",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"ipsum dolore\",\n  \"list\": {\n    \"key\": \"dolore laboris\",\n    \"name\": \"elit magna ad aliqua labore\",\n    \"type\": \"ad eiusmod\",\n    \"childContainerCount\": -65457481,\n    \"childNetElementCount\": -23505505,\n    \"parentContainerId\": \"aliqua aute laborum aliquip\",\n    \"mode\": \"id fugiat\",\n    \"deviceStatus\": {\n      \"critical\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warning\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"normal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageUpgrade\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"task\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unAuthorized\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"childTaskCount\": 13957683,\n    \"childContainerList\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      }\n    ],\n    \"childNetElementList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"hierarchyNetElementCount\": 96286623,\n    \"tempAction\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tempEvent\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"topology\": {\n    \"key\": \"nisi sunt adipisicing ut\",\n    \"name\": \"exercitation Excepteur adipisicing\",\n    \"type\": \"sed sint aliquip\",\n    \"childContainerCount\": -38263613,\n    \"childNetElementCount\": 95313058,\n    \"parentContainerId\": \"nulla aute\",\n    \"mode\": \"Duis commodo non tempor dolor\",\n    \"deviceStatus\": {\n      \"critical\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warning\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"normal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageUpgrade\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"task\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"unAuthorized\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"childTaskCount\": -1412402,\n    \"childContainerList\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/_topology detected>\"\n      }\n    ],\n    \"childNetElementList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"hierarchyNetElementCount\": 30516005,\n    \"tempAction\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"tempEvent\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/filterTopology.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"filterTopology.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "format",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/filterTopology.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"filterTopology.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "format",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/filterTopology.do?nodeId=dolore proi&queryParam=dolore proi&format=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"filterTopology.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "format",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"commodo qui Duis anim\",\n  \"errorMessage\": \"sint adipisicing\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get all temporary actions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getAllTempActions.do?startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getAllTempActions.do"
							],
							"query": [
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Starting index for pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Ending index for pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "Returns the list of temporarily created proposed actions"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getAllTempActions.do?startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getAllTempActions.do"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -61945915,\n  \"data\": [\n    {\n      \"ccId\": \"aute\",\n      \"sessionId\": \"sint est ut\",\n      \"containerKey\": \"nostrud fugiat\",\n      \"taskId\": -94815542,\n      \"info\": \"esse quis ullamco in\",\n      \"infoPreview\": \"ipsum velit\",\n      \"note\": \"fugiat in ut\",\n      \"action\": \"ullamco exercitation\",\n      \"nodeType\": \"qui labore\",\n      \"nodeId\": \"nostrud of\",\n      \"toId\": \"est nisi sed\",\n      \"fromId\": \"adipisic\",\n      \"nodeName\": \"ipsum voluptate eiusmod\",\n      \"toName\": \"labore cillum\",\n      \"fromName\": \"sunt laboris velit sint ipsum\",\n      \"childTasks\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentTask\": \"Excepteur cupidatat irure\",\n      \"oldNodeName\": \"pariatur irure\",\n      \"toIdType\": \"consequat adipisicing nisi dolore\",\n      \"configletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeIpAddress\": \"elit dolor qui laboris\",\n      \"nodeTargetIpAddress\": \"labore ipsum eiusmod in\",\n      \"userId\": \"qui sit veniam dolore cupidatat\",\n      \"key\": \"Duis ullamco non reprehenderit culpa\",\n      \"ignoreNodeId\": \"nulla reprehenderit\",\n      \"ignoreNodeName\": \"enim voluptate\",\n      \"imageBundleId\": \"\",\n      \"mode\": \"in veniam eu cupidatat\",\n      \"timestamp\": -81702807,\n      \"configletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"pageType\": \"ea reprehenderit\",\n      \"viaContainer\": false,\n      \"bestImageContainerId\": \"eu laborum ad deser\",\n      \"factoryId\": 35508810,\n      \"id\": 75572384\n    },\n    {\n      \"ccId\": \"adipisicing sed in\",\n      \"sessionId\": \"dolor Excepteur in aliqua reprehenderit\",\n      \"containerKey\": \"laborum qui \",\n      \"taskId\": 9804726,\n      \"info\": \"sed Duis aliqua consectetur sunt\",\n      \"infoPreview\": \"ipsum anim do\",\n      \"note\": \"dolor\",\n      \"action\": \"elit occaecat ea moll\",\n      \"nodeType\": \"Excepteur deserunt\",\n      \"nodeId\": \"ex labore proident\",\n      \"toId\": \"enim voluptate id\",\n      \"fromId\": \"incididunt ex id\",\n      \"nodeName\": \"qui est elit\",\n      \"toName\": \"ea minim\",\n      \"fromName\": \"officia veniam pariatur Lorem\",\n      \"childTasks\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentTask\": \"ea reprehenderit anim\",\n      \"oldNodeName\": \"reprehenderit qui aute\",\n      \"toIdType\": \"aliqua\",\n      \"configletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeIpAddress\": \"mollit qui ex \",\n      \"nodeTargetIpAddress\": \"sint est au\",\n      \"userId\": \"magna culpa sit aute\",\n      \"key\": \"mollit aute non voluptate consectetur\",\n      \"ignoreNodeId\": \"pariatur\",\n      \"ignoreNodeName\": \"ex non Ut eiusmod cupidatat\",\n      \"imageBundleId\": \"eiusmod quis exercitation consectetur\",\n      \"mode\": \"irure culpa consequat\",\n      \"timestamp\": 75601099,\n      \"configletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"pageType\": \"\",\n      \"viaContainer\": false,\n      \"bestImageContainerId\": \"proident Ut dolor in anim\",\n      \"factoryId\": -19843510,\n      \"id\": -15316930\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getAllTempActions.do?startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getAllTempActions.do"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eiusmod\",\n  \"errorMessage\": \"eiusmod mollit Lorem\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getAllTempActions.do?startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getAllTempActions.do"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getAllTempActions.do?startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getAllTempActions.do"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the configlet information associated with a container",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getConfigletsByContainerId.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getConfigletsByContainerId.do"
							],
							"query": [
								{
									"key": "containerId",
									"value": "dolore proi",
									"description": "(Required) Unique id of a container"
								},
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "Query value to be searched. If the value is empty then returns all data"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Starting index of pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Ending index of pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "Fetches all configlets assigned to a container"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getConfigletsByContainerId.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getConfigletsByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -72476213,\n  \"configletList\": [\n    {\n      \"key\": \"velit ipsum incididunt\",\n      \"name\": \"dolor et nulla\",\n      \"reconciled\": false,\n      \"config\": \"amet cupidatat\",\n      \"user\": \"proident exercitation laborum est laboris\",\n      \"note\": \"ex minim eiusmod\",\n      \"containerCount\": 1076896,\n      \"netElementCount\": 67204228,\n      \"dateTimeInLongFormat\": -83024926,\n      \"isDefault\": \"tempor anim incididunt\",\n      \"isAutoBuilder\": \"veniam reprehenderit\",\n      \"type\": \"esse enim cillum quis\",\n      \"isDraft\": false,\n      \"editable\": false,\n      \"sslConfig\": false,\n      \"factoryId\": -11574883,\n      \"id\": -67047911\n    },\n    {\n      \"key\": \"ut\",\n      \"name\": \"Duis anim dolore\",\n      \"reconciled\": true,\n      \"config\": \"occaecat in Duis sit\",\n      \"user\": \"laborum pariatur\",\n      \"note\": \"dolor\",\n      \"containerCount\": 79964482,\n      \"netElementCount\": 99577253,\n      \"dateTimeInLongFormat\": 39864004,\n      \"isDefault\": \"voluptate occaecat\",\n      \"isAutoBuilder\": \"occaecat ad\",\n      \"type\": \"ullamco minim laboris aute\",\n      \"isDraft\": false,\n      \"editable\": true,\n      \"sslConfig\": false,\n      \"factoryId\": 44555476,\n      \"id\": -97761339\n    }\n  ],\n  \"configletMapper\": {\n    \"configletId_123\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getConfigletsByContainerId.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getConfigletsByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"exercitation sit nisi occaecat\",\n  \"errorMessage\": \"sit dolor exercitation\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getConfigletsByContainerId.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getConfigletsByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getConfigletsByContainerId.do?containerId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getConfigletsByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get configlets data by netelement id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getConfigletsByNetElementId.do?netElementId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getConfigletsByNetElementId.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) The device netelement id"
								},
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "The query param"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "Returns the configlets data associated with the device"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getConfigletsByNetElementId.do?netElementId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getConfigletsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -72476213,\n  \"configletList\": [\n    {\n      \"key\": \"velit ipsum incididunt\",\n      \"name\": \"dolor et nulla\",\n      \"reconciled\": false,\n      \"config\": \"amet cupidatat\",\n      \"user\": \"proident exercitation laborum est laboris\",\n      \"note\": \"ex minim eiusmod\",\n      \"containerCount\": 1076896,\n      \"netElementCount\": 67204228,\n      \"dateTimeInLongFormat\": -83024926,\n      \"isDefault\": \"tempor anim incididunt\",\n      \"isAutoBuilder\": \"veniam reprehenderit\",\n      \"type\": \"esse enim cillum quis\",\n      \"isDraft\": false,\n      \"editable\": false,\n      \"sslConfig\": false,\n      \"factoryId\": -11574883,\n      \"id\": -67047911\n    },\n    {\n      \"key\": \"ut\",\n      \"name\": \"Duis anim dolore\",\n      \"reconciled\": true,\n      \"config\": \"occaecat in Duis sit\",\n      \"user\": \"laborum pariatur\",\n      \"note\": \"dolor\",\n      \"containerCount\": 79964482,\n      \"netElementCount\": 99577253,\n      \"dateTimeInLongFormat\": 39864004,\n      \"isDefault\": \"voluptate occaecat\",\n      \"isAutoBuilder\": \"occaecat ad\",\n      \"type\": \"ullamco minim laboris aute\",\n      \"isDraft\": false,\n      \"editable\": true,\n      \"sslConfig\": false,\n      \"factoryId\": 44555476,\n      \"id\": -97761339\n    }\n  ],\n  \"configletMapper\": {\n    \"configletId_123\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getConfigletsByNetElementId.do?netElementId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getConfigletsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getConfigletsByNetElementId.do?netElementId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getConfigletsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getConfigletsByNetElementId.do?netElementId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getConfigletsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"nisi incididunt dolore laboris consequat\",\n  \"errorMessage\": \"nisi commodo anim laboris dolor\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the container info for the given containerId.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getContainerInfoById.do?containerId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getContainerInfoById.do"
							],
							"query": [
								{
									"key": "containerId",
									"value": "dolore proi",
									"description": "(Required) Container Id for which the information needs to be fetched."
								}
							]
						},
						"description": "This API is used to get the container info for the given containerId. "
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getContainerInfoById.do?containerId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getContainerInfoById.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"associatedConfiglets\": -85273463,\n  \"associatedSwitches\": -97362320,\n  \"bundleName\": \"dolor Excepteur con\",\n  \"danzEnabledSwitches\": -95503025,\n  \"date\": 51456895,\n  \"name\": \"dolor\",\n  \"parentName\": \"amet voluptate minim aliqua\",\n  \"userId\": \"sed dolore quis\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getContainerInfoById.do?containerId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getContainerInfoById.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getContainerInfoById.do?containerId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getContainerInfoById.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getContainerInfoById.do?containerId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getContainerInfoById.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"cupidatat incididunt\",\n  \"errorMessage\": \"sint\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the image bundle using container id.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getImageBundleByContainerId.do?containerId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getImageBundleByContainerId.do"
							],
							"query": [
								{
									"key": "containerId",
									"value": "dolore proi",
									"description": "(Required) The container id."
								},
								{
									"key": "sessionScope",
									"value": "dolore proi",
									"description": "(Required) The session scope. Possible values 'true' or 'false'"
								},
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "The query param"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "Returns the image bundle assigned to a container"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageBundleByContainerId.do?containerId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageBundleByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "sessionScope",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -39231649,\n  \"imageBundleList\": [\n    {\n      \"key\": \"dolor rep\",\n      \"name\": \"velit aute sit\",\n      \"isCertifiedImageBundle\": \"pariatur\",\n      \"note\": \"aliquip nostrud\",\n      \"user\": \"reprehenderit velit min\",\n      \"updatedDateinLongFormat\": -56638019,\n      \"appliedContainersCount\": 87641722,\n      \"appliedDevicesCount\": 48722874,\n      \"imageIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"factoryId\": 90125467,\n      \"id\": 73117970\n    },\n    {\n      \"key\": \"aliqua\",\n      \"name\": \"est aliquip consectetur\",\n      \"isCertifiedImageBundle\": \"fugiat\",\n      \"note\": \"aliqua eu consequat proident\",\n      \"user\": \"aute laborum\",\n      \"updatedDateinLongFormat\": 79091748,\n      \"appliedContainersCount\": -14864268,\n      \"appliedDevicesCount\": -41822031,\n      \"imageIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"factoryId\": -36953937,\n      \"id\": 81206736\n    }\n  ],\n  \"imageBundleMapper\": {\n    \"imageBundleId_123\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageBundleByContainerId.do?containerId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageBundleByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "sessionScope",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageBundleByContainerId.do?containerId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageBundleByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "sessionScope",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageBundleByContainerId.do?containerId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageBundleByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "sessionScope",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"exercitation sit nisi occaecat\",\n  \"errorMessage\": \"sit dolor exercitation\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the image bundle using netelement id.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getImageBundleByNetElementId.do?netElementId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getImageBundleByNetElementId.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) The netelement id."
								},
								{
									"key": "sessionScope",
									"value": "dolore proi",
									"description": "(Required) The session scope. Possible values 'true' or 'false'"
								},
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "The query param"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "Returns the image bundle assigned to the device."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageBundleByNetElementId.do?netElementId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageBundleByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "sessionScope",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -313796,\n  \"imageBundleList\": [\n    {\n      \"key\": \"proident et\",\n      \"name\": \"\",\n      \"isCertifiedImageBundle\": \"ex ut magna\",\n      \"note\": \"consequat dolor ad\",\n      \"user\": \"in ullamco proident\",\n      \"updatedDateinLongFormat\": -25456811,\n      \"appliedContainersCount\": -62263350,\n      \"appliedDevicesCount\": 18791646,\n      \"imageIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"factoryId\": 67091635,\n      \"id\": -44847541\n    },\n    {\n      \"key\": \"nostrud cupidatat\",\n      \"name\": \"aute minim eiusmod esse\",\n      \"isCertifiedImageBundle\": \"do Duis in\",\n      \"note\": \"aliqua dolore magna\",\n      \"user\": \"deserunt do\",\n      \"updatedDateinLongFormat\": -69895712,\n      \"appliedContainersCount\": 42977192,\n      \"appliedDevicesCount\": -51173654,\n      \"imageIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"factoryId\": -21455509,\n      \"id\": -43827347\n    }\n  ],\n  \"imageBundleMapper\": {\n    \"imageBundleId_123\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageBundleByNetElementId.do?netElementId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageBundleByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "sessionScope",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageBundleByNetElementId.do?netElementId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageBundleByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "sessionScope",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageBundleByNetElementId.do?netElementId=dolore proi&sessionScope=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageBundleByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "sessionScope",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"nisi incididunt dolore laboris consequat\",\n  \"errorMessage\": \"nisi commodo anim laboris dolor\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the image data for the task.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getImageForTask.do?workorderid=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getImageForTask.do"
							],
							"query": [
								{
									"key": "workorderid",
									"value": "dolore proi",
									"description": "(Required) The workorder id for the image task"
								}
							]
						},
						"description": "Returns the image data for the given task."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageForTask.do?workorderid=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageForTask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"pariatur ex quis eu\",\n  \"name\": \"nostrud sed\",\n  \"images\": [\n    {\n      \"key\": \"culpa irure\",\n      \"name\": \"irure cupidatat dolor aliquip\",\n      \"imageId\": \"s\",\n      \"imageFileName\": \"labore nulla\",\n      \"imageSize\": \"nostrud sit nulla velit\",\n      \"user\": \"culpa occaecat\",\n      \"uploadedDateinLongFormat\": 79929840,\n      \"appliedContainersCount\": 93373565,\n      \"appliedDevicesCount\": 97897097,\n      \"isHotFix\": \"minim eiusmod\",\n      \"md5\": \"mollit irure\",\n      \"version\": \"ut Lo\",\n      \"isRebootRequired\": \"proident Excepteur\",\n      \"swiVarient\": \"officia veniam elit magna do\",\n      \"swiMaxHwepoch\": \"pariatur\",\n      \"sha512\": \"velit magna\",\n      \"imageFile\": \"dolore qui adipisicing amet\",\n      \"factoryId\": -5755403,\n      \"id\": 8872288\n    },\n    {\n      \"key\": \"esse laboris\",\n      \"name\": \"aliquip deserunt tempor do\",\n      \"imageId\": \"laborum\",\n      \"imageFileName\": \"fugiat esse\",\n      \"imageSize\": \"est qui\",\n      \"user\": \"mollit reprehenderit fugiat\",\n      \"uploadedDateinLongFormat\": -37664513,\n      \"appliedContainersCount\": -18368076,\n      \"appliedDevicesCount\": -36677911,\n      \"isHotFix\": \"enim Ut\",\n      \"md5\": \"cupidatat id exercitation\",\n      \"version\": \"incididunt\",\n      \"isRebootRequired\": \"ut aute\",\n      \"swiVarient\": \"amet qui do sed\",\n      \"swiMaxHwepoch\": \"exercitation cillum eni\",\n      \"sha512\": \"commodo culpa minim consectetur\",\n      \"imageFile\": \"minim ullamco\",\n      \"factoryId\": 97025367,\n      \"id\": 50193362\n    }\n  ],\n  \"appliedContainersCount\": 36317022,\n  \"appliedDevicesCount\": 37360033,\n  \"uploadedBy\": \"Excepteur occaecat nulla\",\n  \"updatedTimeInLongFormat\": 42419380,\n  \"isCertifiedImage\": \"eiusmod Ut deserunt exer\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageForTask.do?workorderid=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageForTask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageForTask.do?workorderid=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageForTask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getImageForTask.do?workorderid=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getImageForTask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ullamco\",\n  \"errorMessage\": \"ut tempor\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the labels on a netElement",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getLabelsByNetElementId.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&netElementId=dolore proi&type=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getLabelsByNetElementId.do"
							],
							"query": [
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "The search param "
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
								},
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) net element id"
								},
								{
									"key": "type",
									"value": "dolore proi",
									"description": "(Required) label type - 'custom', 'system' or 'all'"
								}
							]
						},
						"description": "This API is used to get the labels on a netElement from the data store."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getLabelsByNetElementId.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&netElementId=dolore proi&type=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getLabelsByNetElementId.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"labelList\": [\n    {\n      \"key\": \"aliquip adipisici\",\n      \"name\": \"ea Lorem tempor s\",\n      \"note\": \"sint nulla ut\",\n      \"type\": \"commodo eiusmod\",\n      \"user\": \"consequat deserunt\",\n      \"dateTimeInLongFormat\": 22411940,\n      \"netElementCount\": -40697516,\n      \"factoryId\": -8960847,\n      \"id\": 31197257\n    },\n    {\n      \"key\": \"ali\",\n      \"name\": \"elit Ut officia et\",\n      \"note\": \"veniam laborum\",\n      \"type\": \"la\",\n      \"user\": \"occaecat mollit sunt\",\n      \"dateTimeInLongFormat\": 20688075,\n      \"netElementCount\": -85285645,\n      \"factoryId\": -93705107,\n      \"id\": -42642387\n    }\n  ],\n  \"total\": 71218355\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getLabelsByNetElementId.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&netElementId=dolore proi&type=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getLabelsByNetElementId.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getLabelsByNetElementId.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&netElementId=dolore proi&type=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getLabelsByNetElementId.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getLabelsByNetElementId.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&netElementId=dolore proi&type=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getLabelsByNetElementId.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "netElementId",
											"value": "dolore proi"
										},
										{
											"key": "type",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"esse Duis do cupidatat\",\n  \"errorMessage\": \"quis exercitation ut eu irure\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the netelement data by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getNetElementById.do?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getNetElementById.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) The netelement id"
								}
							]
						},
						"description": "Returns the netelement data for given id"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"architecture\": \"laboris veniam\",\n  \"bootupTimeStamp\": 40384077.010131925,\n  \"complianceCode\": \"proident officia sed Excepteur\",\n  \"complianceIndication\": \"id ut magna mollit do\",\n  \"deviceStatus\": \"do nisi elit reprehenderit\",\n  \"deviceInfo\": \"mollit sunt in\",\n  \"fqdn\": \"adipisicing pariatur\",\n  \"hardwareRevision\": \"cillum\",\n  \"internalBuildId\": \"Lorem aliqua et Ut\",\n  \"internalVersion\": \"ullamco\",\n  \"ipAddress\": \"sed in deserunt\",\n  \"isDANZEnabled\": \"aliqua culpa proident nisi\",\n  \"isMLAGEnabled\": \"ea laborum enim n\",\n  \"key\": \"velit \",\n  \"lastSyncUp\": 372827,\n  \"memFree\": -63105262,\n  \"memTotal\": 56893026,\n  \"modelName\": \"sed occaecat\",\n  \"parentContainerId\": \"ullamco id enim\",\n  \"serialNumber\": \"e\",\n  \"systemMacAddress\": \"Except\",\n  \"taskIdList\": [\n    {\n      \"workOrderId\": \"proident ea\",\n      \"name\": \"consectetur eu officia esse aliqua\",\n      \"workOrderEscalation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"workOrderState\": \"ACTIVE\",\n      \"currentTaskName\": \"exercitation qui veniam culpa magna\",\n      \"templateId\": \"amet minim ut Lorem\",\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBy\": \"nulla labore deserunt\",\n      \"executedOnInLongFormat\": 51341523,\n      \"executedBy\": \"velit ullamco dolore\",\n      \"currentTaskType\": \"deserunt in\",\n      \"workFlowDetailsId\": \"qui id\",\n      \"description\": \"laboris ullamco\",\n      \"workOrderUserDefinedStatus\": \"in\",\n      \"workOrderDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdOnInLongFormat\": -61521375,\n      \"completedOnInLongFormat\": -91590943,\n      \"note\": \"in exercitation ipsum\",\n      \"taskStatus\": \"ACTIVE\",\n      \"taskStatusBeforeCancel\": \"esse cillum\",\n      \"newParentContainerName\": \"eu officia in\",\n      \"ccId\": \"id culpa laborum\",\n      \"factoryId\": -22806450,\n      \"newParentContainerId\": \"labore et nisi Ut\",\n      \"id\": -16414417\n    },\n    {\n      \"workOrderId\": \"incididunt in minim sint veniam\",\n      \"name\": \"dolore cillum dolor pariatur\",\n      \"workOrderEscalation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"workOrderState\": \"ACTIVE\",\n      \"currentTaskName\": \"sed aliqua\",\n      \"templateId\": \"magna Ut mollit\",\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBy\": \"aliqua magna\",\n      \"executedOnInLongFormat\": 91485371,\n      \"executedBy\": \"commodo qui labore\",\n      \"currentTaskType\": \"magna do nostrud\",\n      \"workFlowDetailsId\": \"ea dolor esse\",\n      \"description\": \"enim velit\",\n      \"workOrderUserDefinedStatus\": \"velit est minim elit\",\n      \"workOrderDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdOnInLongFormat\": 73696421,\n      \"completedOnInLongFormat\": -28708847,\n      \"note\": \"sit qui tempor\",\n      \"taskStatus\": \"ACTIVE\",\n      \"taskStatusBeforeCancel\": \"velit sit ea est\",\n      \"newParentContainerName\": \"deserunt\",\n      \"ccId\": \"amet aliqua ut in\",\n      \"factoryId\": 67672239,\n      \"newParentContainerId\": \"laborum nostrud ea\",\n      \"id\": 43863532\n    }\n  ],\n  \"tempAction\": [\n    {\n      \"ccId\": \"voluptate Excepteur sit nostrud\",\n      \"sessionId\": \"exercitation Ut\",\n      \"containerKey\": \"tempor\",\n      \"taskId\": 62701096,\n      \"info\": \"qui Duis\",\n      \"infoPreview\": \"ad Ut occaecat\",\n      \"note\": \"laboris\",\n      \"action\": \"consequat anim sed\",\n      \"nodeType\": \"elit\",\n      \"nodeId\": \"adipisicing ut\",\n      \"toId\": \"in fugiat\",\n      \"fromId\": \"proident irure\",\n      \"nodeName\": \"ad\",\n      \"toName\": \"ea con\",\n      \"fromName\": \"esse culpa\",\n      \"childTasks\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentTask\": \"consectetur\",\n      \"oldNodeName\": \"ut ad amet\",\n      \"toIdType\": \"in cupidatat amet ipsum\",\n      \"configletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeIpAddress\": \"ullamco\",\n      \"nodeTargetIpAddress\": \"dolore id magna consequat\",\n      \"userId\": \"laboris Duis \",\n      \"key\": \"ea Excepteur\",\n      \"ignoreNodeId\": \"dolor proident id\",\n      \"ignoreNodeName\": \"fugiat ullamco est\",\n      \"imageBundleId\": \"tempo\",\n      \"mode\": \"minim\",\n      \"timestamp\": 8885546,\n      \"configletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"pageType\": \"dolore minim ullamco\",\n      \"viaContainer\": true,\n      \"bestImageContainerId\": \"dolor veniam mollit\",\n      \"factoryId\": -79786752,\n      \"id\": 54642550\n    },\n    {\n      \"ccId\": \"ut\",\n      \"sessionId\": \"id eu\",\n      \"containerKey\": \"mollit tempor cupidatat\",\n      \"taskId\": 9085041,\n      \"info\": \"ut anim ad sint esse\",\n      \"infoPreview\": \"fugiat amet\",\n      \"note\": \"adipisicing ipsum nostrud\",\n      \"action\": \"dolore\",\n      \"nodeType\": \"dolore ut ad amet\",\n      \"nodeId\": \"ipsum Lorem dolore irure commodo\",\n      \"toId\": \"ut sunt\",\n      \"fromId\": \"et dolore Lorem\",\n      \"nodeName\": \"deserunt do tempor sint\",\n      \"toName\": \"in in\",\n      \"fromName\": \"Lorem sit labore\",\n      \"childTasks\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentTask\": \"eiusmod amet nulla\",\n      \"oldNodeName\": \"laboris veniam sunt et reprehenderi\",\n      \"toIdType\": \"in ipsum\",\n      \"configletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreNodeNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"nodeIpAddress\": \"occaecat mollit Duis\",\n      \"nodeTargetIpAddress\": \"qui est et amet consequat\",\n      \"userId\": \"ex\",\n      \"key\": \"sunt enim\",\n      \"ignoreNodeId\": \"e\",\n      \"ignoreNodeName\": \"cillum minim adipisicing est\",\n      \"imageBundleId\": \"elit ex culpa\",\n      \"mode\": \"incididunt in eiusmod elit\",\n      \"timestamp\": -97738463,\n      \"configletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"configletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ignoreConfigletBuilderNamesList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"pageType\": \"sint quis irure\",\n      \"viaContainer\": false,\n      \"bestImageContainerId\": \"in veniam\",\n      \"factoryId\": -39551561,\n      \"id\": 25385110\n    }\n  ],\n  \"type\": \"mollit irure sint\",\n  \"unAuthorized\": true,\n  \"version\": \"ex incididunt exercitation quis\",\n  \"ztpMode\": \"nostrud anim et adipisicing\",\n  \"sslEnabledByCVP\": false,\n  \"sslConfigAvailable\": false\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ad commodo\",\n  \"errorMessage\": \"dolor in consectetur\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the uploaded image information by netelement id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getNetElementImageById.do?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getNetElementImageById.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) net element id"
								}
							]
						},
						"description": "This API is used to get the uploaded image information by netelement id for Topology in the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementImageById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementImageById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementImageById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementImageById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementImageById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementImageById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementImageById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementImageById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in aliquip Ut\",\n  \"errorMessage\": \"sunt Duis\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the netelement information by its id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getNetElementInfoById.do?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getNetElementInfoById.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) Unique id of the netelement"
								}
							]
						},
						"description": "Retrieves netelement's information of the assicated netelement id"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementInfoById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementInfoById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"macAddress\": \"laborum dolore in mollit\",\n  \"serialNumber\": \"velit enim officia nisi irure\",\n  \"eosVersion\": \"nulla nostrud dolore\",\n  \"fqdn\": \"proident esse velit\",\n  \"imageBundleMapper\": {\n    \"imageBundleId_123\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"ipAddress\": \"deserunt Ut enim\",\n  \"bundleName\": \"eu pariatur est et\",\n  \"imageBundleId\": \"sint laborum\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementInfoById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementInfoById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"Excepteur ullamco aliqua eu\",\n  \"errorMessage\": \"nulla cupidatat ipsum\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementInfoById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementInfoById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementInfoById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementInfoById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the netElement List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getNetElementList.do?nodeId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&contextQueryParam=dolore proi&ignoreAdd=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getNetElementList.do"
							],
							"query": [
								{
									"key": "nodeId",
									"value": "dolore proi",
									"description": "(Required) container Id"
								},
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "search param"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
								},
								{
									"key": "contextQueryParam",
									"value": "dolore proi",
									"description": "Context query param "
								},
								{
									"key": "ignoreAdd",
									"value": "dolore proi",
									"description": "(Required) Ignore Add - 'true' or 'false'"
								}
							]
						},
						"description": "This API is used to get the netElement List by container in the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementList.do?nodeId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&contextQueryParam=dolore proi&ignoreAdd=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementList.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "contextQueryParam",
											"value": "dolore proi"
										},
										{
											"key": "ignoreAdd",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 4339529,\n  \"netElementList\": [\n    {\n      \"architecture\": \"tempor Excepteur\",\n      \"bootupTimeStamp\": 78030646.15589759,\n      \"complianceCode\": \"ad velit dolor\",\n      \"complianceIndication\": \"qui quis laboris culpa tempor\",\n      \"deviceStatus\": \"esse magna laborum\",\n      \"deviceInfo\": \"dolore velit elit\",\n      \"fqdn\": \"ea quis commodo\",\n      \"hardwareRevision\": \"occaecat proident do pariatur\",\n      \"internalBuildId\": \"veniam deserunt nostr\",\n      \"internalVersion\": \"irure commodo\",\n      \"ipAddress\": \"anim nisi exercitation\",\n      \"isDANZEnabled\": \"minim cupidatat veniam exercitation eu\",\n      \"isMLAGEnabled\": \"ut et\",\n      \"key\": \"anim est velit\",\n      \"lastSyncUp\": -92616628,\n      \"memFree\": -9187154,\n      \"memTotal\": -49224573,\n      \"modelName\": \"deserunt aliquip culpa\",\n      \"parentContainerId\": \"consectetur culpa in minim\",\n      \"serialNumber\": \"sint\",\n      \"systemMacAddress\": \"dolor consectetur\",\n      \"taskIdList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tempAction\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"veniam magna\",\n      \"unAuthorized\": false,\n      \"version\": \"sed culpa anim nostrud laborum\",\n      \"ztpMode\": \"anim Lorem aliquip ut\",\n      \"sslEnabledByCVP\": false,\n      \"sslConfigAvailable\": false\n    },\n    {\n      \"architecture\": \"irure aute eiusmod\",\n      \"bootupTimeStamp\": 21561266.55718839,\n      \"complianceCode\": \"qui consequat laborum est\",\n      \"complianceIndication\": \"ut ips\",\n      \"deviceStatus\": \"qui nostrud dolore\",\n      \"deviceInfo\": \"magna Duis elit aliquip ex\",\n      \"fqdn\": \"et ut culpa Duis adipisicing\",\n      \"hardwareRevision\": \"fugiat\",\n      \"internalBuildId\": \"dolor velit do culpa est\",\n      \"internalVersion\": \"esse magna commodo tempor\",\n      \"ipAddress\": \"ea est\",\n      \"isDANZEnabled\": \"pariatur\",\n      \"isMLAGEnabled\": \"proident ex minim ad\",\n      \"key\": \"aliqua sunt do dolor\",\n      \"lastSyncUp\": 61396333,\n      \"memFree\": -92630508,\n      \"memTotal\": -87472033,\n      \"modelName\": \"in voluptate labore\",\n      \"parentContainerId\": \"mollit\",\n      \"serialNumber\": \"sint sed laboris adipisicing ea\",\n      \"systemMacAddress\": \"nostrud irure\",\n      \"taskIdList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tempAction\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"ut Lorem reprehenderit d\",\n      \"unAuthorized\": false,\n      \"version\": \"cupidatat in ex\",\n      \"ztpMode\": \"deserunt laboris\",\n      \"sslEnabledByCVP\": false,\n      \"sslConfigAvailable\": true\n    }\n  ],\n  \"containerList\": [\n    {\n      \"containerKey\": \"mollit sint\",\n      \"containerName\": \"Lorem dolor nulla sint\",\n      \"netelementKey\": \"reprehenderit ullamco anim\"\n    },\n    {\n      \"containerKey\": \"qui tempor\",\n      \"containerName\": \"sit \",\n      \"netelementKey\": \"deserunt culpa Excepteur in\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementList.do?nodeId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&contextQueryParam=dolore proi&ignoreAdd=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementList.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "contextQueryParam",
											"value": "dolore proi"
										},
										{
											"key": "ignoreAdd",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementList.do?nodeId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&contextQueryParam=dolore proi&ignoreAdd=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementList.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "contextQueryParam",
											"value": "dolore proi"
										},
										{
											"key": "ignoreAdd",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getNetElementList.do?nodeId=dolore proi&queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638&contextQueryParam=dolore proi&ignoreAdd=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getNetElementList.do"
									],
									"query": [
										{
											"key": "nodeId",
											"value": "dolore proi"
										},
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										},
										{
											"key": "contextQueryParam",
											"value": "dolore proi"
										},
										{
											"key": "ignoreAdd",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laborum elit\",\n  \"errorMessage\": \"eiusmod\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the proposed container of a netelement",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getProposedContainer.do?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getProposedContainer.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) Unique id of a netelement"
								}
							]
						},
						"description": "Fetches the proposed container of the given netelement"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getProposedContainer.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getProposedContainer.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"dateTimeInLongFormat\": -99684690,\n      \"factoryId\": -27639475,\n      \"id\": 4495342,\n      \"key\": \"id commodo adip\",\n      \"mode\": \"sint eiusmod laboris\",\n      \"name\": \"qui eli\",\n      \"root\": false,\n      \"undefined\": false,\n      \"userId\": \"sint in sunt do dolore\"\n    },\n    {\n      \"dateTimeInLongFormat\": -67180690,\n      \"factoryId\": 23557414,\n      \"id\": 71158360,\n      \"key\": \"tempor occaecat officia in\",\n      \"mode\": \"velit consequat lab\",\n      \"name\": \"fugiat ut in ex\",\n      \"root\": false,\n      \"undefined\": true,\n      \"userId\": \"exercitation velit\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getProposedContainer.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getProposedContainer.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"nisi incididunt dolore laboris consequat\",\n  \"errorMessage\": \"nisi commodo anim laboris dolor\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getProposedContainer.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getProposedContainer.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getProposedContainer.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getProposedContainer.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the temp config data using the container id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getTempConfigsByContainerId.do?containerId=dolore proi&pageType=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getTempConfigsByContainerId.do"
							],
							"query": [
								{
									"key": "containerId",
									"value": "dolore proi",
									"description": "(Required) The container id"
								},
								{
									"key": "pageType",
									"value": "dolore proi",
									"description": "The page type"
								}
							]
						},
						"description": "Returns the temp configs data using the container id."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempConfigsByContainerId.do?containerId=dolore proi&pageType=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempConfigsByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "pageType",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"assignedConfiglets\": [\n    \"magna voluptate est\",\n    \"commodo id anim quis \"\n  ],\n  \"ignoredConfiglets\": [\n    \"\",\n    \"officia eu Ut ullamco\"\n  ],\n  \"existingConfiglets\": [\n    \"aliquip in irure\",\n    \"velit ut in\"\n  ],\n  \"assignedConfigletBuilders\": [\n    \"sunt occaecat velit\",\n    \"in amet sint\"\n  ],\n  \"ignoredConfigletBuilders\": [\n    \"est ad do\",\n    \"ad sunt conse\"\n  ],\n  \"existingConfigletBuilders\": [\n    \"anim quis nostrud\",\n    \"incididunt dolor ad\"\n  ],\n  \"proposedConfiglets\": [\n    {\n      \"key\": \"nisi nulla adipisicing in\",\n      \"name\": \"ut cillum\",\n      \"reconciled\": true,\n      \"config\": \"culpa eu occaecat anim\",\n      \"user\": \"consectetur quis magna\",\n      \"note\": \"pariatur\",\n      \"containerCount\": -11744987,\n      \"netElementCount\": -30168737,\n      \"dateTimeInLongFormat\": -4370147,\n      \"isDefault\": \"nostrud\",\n      \"isAutoBuilder\": \"esse reprehenderit do\",\n      \"type\": \"deserunt \",\n      \"isDraft\": false,\n      \"editable\": false,\n      \"sslConfig\": true,\n      \"factoryId\": -13139230,\n      \"id\": -29996894\n    },\n    {\n      \"key\": \"id dolore\",\n      \"name\": \"labore fugiat Ut magna quis\",\n      \"reconciled\": false,\n      \"config\": \"ex dolore\",\n      \"user\": \"minim veniam consequat sed fugiat\",\n      \"note\": \"ipsum in do\",\n      \"containerCount\": -41668912,\n      \"netElementCount\": -82458562,\n      \"dateTimeInLongFormat\": -48991026,\n      \"isDefault\": \"in Duis id\",\n      \"isAutoBuilder\": \"eiusmod velit\",\n      \"type\": \"sit\",\n      \"isDraft\": false,\n      \"editable\": false,\n      \"sslConfig\": false,\n      \"factoryId\": 41415420,\n      \"id\": 43566986\n    }\n  ],\n  \"tempConfigletObjectIdMapper\": \"elit do Ut Excepteur\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempConfigsByContainerId.do?containerId=dolore proi&pageType=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempConfigsByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "pageType",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempConfigsByContainerId.do?containerId=dolore proi&pageType=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempConfigsByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "pageType",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempConfigsByContainerId.do?containerId=dolore proi&pageType=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempConfigsByContainerId.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "pageType",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"cupidatat incididunt\",\n  \"errorMessage\": \"sint\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the temp configs data using the device netelement id.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getTempConfigsByNetElementId.do?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getTempConfigsByNetElementId.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) The device netelement id."
								}
							]
						},
						"description": "Returns the temp configs data using the device netelement id. "
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempConfigsByNetElementId.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempConfigsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"assignedConfiglets\": [\n    \"magna id Lorem nostrud proident\",\n    \"amet laboris consequat\"\n  ],\n  \"ignoredConfiglets\": [\n    \"dolore eiusmod dolor minim\",\n    \"sunt mollit anim\"\n  ],\n  \"existingConfiglets\": [\n    \"aute aliqua incididunt aliquip in\",\n    \"aliqua aliquip\"\n  ],\n  \"deviceConfiglets\": [\n    \"qui sint\",\n    \"tempor non est aliqua\"\n  ],\n  \"assignedConfigletBuilders\": [\n    \"sint adipisicing\",\n    \"cupidatat\"\n  ],\n  \"ignoredConfigletBuilders\": [\n    \"laborum ea sit\",\n    \"Duis sunt\"\n  ],\n  \"existingConfigletBuilders\": [\n    \"adipisicing ut sed ullamco\",\n    \"commodo quis\"\n  ],\n  \"deviceConfigletBuilders\": [\n    \"mollit Exce\",\n    \"amet aliquip\"\n  ],\n  \"proposedConfiglets\": [\n    {\n      \"key\": \"nulla ut Lorem sed\",\n      \"name\": \"ad eius\",\n      \"reconciled\": false,\n      \"config\": \"mollit eu consectetur non cupidatat\",\n      \"user\": \"aliqua est fugiat Lorem sed\",\n      \"note\": \"nostrud elit commodo in irure\",\n      \"containerCount\": 50613475,\n      \"netElementCount\": 82176354,\n      \"dateTimeInLongFormat\": 47329872,\n      \"isDefault\": \"aute quis\",\n      \"isAutoBuilder\": \"exercitation adipisicing ad laboris Ut\",\n      \"type\": \"ut occaecat\",\n      \"isDraft\": false,\n      \"editable\": false,\n      \"sslConfig\": true,\n      \"factoryId\": -42986741,\n      \"id\": -27392221\n    },\n    {\n      \"key\": \"reprehenderit dolor\",\n      \"name\": \"Duis ex\",\n      \"reconciled\": true,\n      \"config\": \"occaecat non velit in dolor\",\n      \"user\": \"nostrud laborum aliqua in nulla\",\n      \"note\": \"ex\",\n      \"containerCount\": 71852394,\n      \"netElementCount\": 18871909,\n      \"dateTimeInLongFormat\": -3016241,\n      \"isDefault\": \"dolore\",\n      \"isAutoBuilder\": \"consequat Lorem\",\n      \"type\": \"sunt veniam nu\",\n      \"isDraft\": false,\n      \"editable\": true,\n      \"sslConfig\": true,\n      \"factoryId\": -88321141,\n      \"id\": -3414772\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempConfigsByNetElementId.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempConfigsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempConfigsByNetElementId.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempConfigsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempConfigsByNetElementId.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempConfigsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ad e\",\n  \"errorMessage\": \"quis ullamco \"\n}"
						}
					]
				},
				{
					"name": "This API is used to get all temp labels by netelement id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getTempLabelsByNetElementId.do?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getTempLabelsByNetElementId.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required)  The netelement id"
								}
							]
						},
						"description": "This API is used to get all temp labels by netelement id from the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempLabelsByNetElementId.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempLabelsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"assignedLabels\": [\n    {\n      \"key\": \"repreh\",\n      \"name\": \"sint\",\n      \"note\": \"consequat anim ipsum\",\n      \"type\": \"consectetur est irure nisi ullamco\",\n      \"user\": \"qui Lorem\",\n      \"dateTimeInLongFormat\": 85538531,\n      \"netElementCount\": 65694081,\n      \"factoryId\": 64022495,\n      \"id\": -96358456\n    },\n    {\n      \"key\": \"id irure qui\",\n      \"name\": \"aliqua id Lorem\",\n      \"note\": \"proident\",\n      \"type\": \"id\",\n      \"user\": \"cupidatat\",\n      \"dateTimeInLongFormat\": 64642624,\n      \"netElementCount\": 66042895,\n      \"factoryId\": -7460012,\n      \"id\": 3735239\n    }\n  ],\n  \"existingLabels\": [\n    {\n      \"key\": \"pariatur deserunt mollit\",\n      \"name\": \"voluptate incididunt elit\",\n      \"note\": \"non consequat\",\n      \"type\": \"mollit dolor Excepteur\",\n      \"user\": \"culpa non consectetur\",\n      \"dateTimeInLongFormat\": 47032854,\n      \"netElementCount\": -16558081,\n      \"factoryId\": -36817192,\n      \"id\": 89881836\n    },\n    {\n      \"key\": \"cupid\",\n      \"name\": \"amet dolore\",\n      \"note\": \"ea Excepteur ullamco incididunt\",\n      \"type\": \"cupidatat Excepteur\",\n      \"user\": \"amet fugiat\",\n      \"dateTimeInLongFormat\": -46055799,\n      \"netElementCount\": -90109929,\n      \"factoryId\": 4602174,\n      \"id\": 1890670\n    }\n  ],\n  \"ignoredLabels\": [\n    {\n      \"key\": \"esse do\",\n      \"name\": \"ad exercitation nisi\",\n      \"note\": \"sint cillum minim eu\",\n      \"type\": \"labore cupidatat deserunt\",\n      \"user\": \"Excepteur\",\n      \"dateTimeInLongFormat\": 28307816,\n      \"netElementCount\": -45929125,\n      \"factoryId\": -27442987,\n      \"id\": 14809883\n    },\n    {\n      \"key\": \"pariatur quis\",\n      \"name\": \"qui culpa do\",\n      \"note\": \"mollit occaecat\",\n      \"type\": \"amet \",\n      \"user\": \"in tempor sit\",\n      \"dateTimeInLongFormat\": 74977073,\n      \"netElementCount\": 82308919,\n      \"factoryId\": 58264133,\n      \"id\": 31220066\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempLabelsByNetElementId.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempLabelsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempLabelsByNetElementId.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempLabelsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempLabelsByNetElementId.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempLabelsByNetElementId.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"velit esse\",\n  \"errorMessage\": \"ullamco tempo\"\n}"
						}
					]
				},
				{
					"name": "This API is used to get the temp session reconcile configlets id list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getTempSessionReconciledConfiglets.do?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getTempSessionReconciledConfiglets.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) The device netelement id"
								}
							]
						},
						"description": "Returns a list of temp session reconcile configlets id"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempSessionReconciledConfiglets.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempSessionReconciledConfiglets.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    \"Excepteur\",\n    \"ut consectetur commodo\"\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempSessionReconciledConfiglets.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempSessionReconciledConfiglets.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"velit commodo\",\n  \"errorMessage\": \"veniam proident Ut dolore\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempSessionReconciledConfiglets.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempSessionReconciledConfiglets.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getTempSessionReconciledConfiglets.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getTempSessionReconciledConfiglets.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get configlets for the specified task.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/getconfigfortask.do?workorderid=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"getconfigfortask.do"
							],
							"query": [
								{
									"key": "workorderid",
									"value": "dolore proi",
									"description": "(Required) Work Order Id for which the config to be fetched."
								}
							]
						},
						"description": "This API is used to get configlets for the specified task.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. Uses should be migrated to the /provisioning/v3/getconfigfortask API."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getconfigfortask.do?workorderid=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getconfigfortask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"reconciledConfig\": \"laboris velit\",\n  \"reconcile\": 18798232,\n  \"new\": -38522800,\n  \"configs\": [\n    {\n      \"key\": \"ut in\",\n      \"name\": \"dolore aute irure voluptate Lorem\",\n      \"reconciled\": false,\n      \"config\": \"minim non nulla\",\n      \"user\": \"nulla enim incididunt\",\n      \"note\": \"incididunt velit\",\n      \"containerCount\": 16606019,\n      \"netElementCount\": -21650703,\n      \"dateTimeInLongFormat\": -10538863,\n      \"isDefault\": \"fugiat sed pariatur\",\n      \"isAutoBuilder\": \"sed officia ullamco commodo veniam\",\n      \"type\": \"proident enim\",\n      \"isDraft\": false,\n      \"editable\": true,\n      \"sslConfig\": false,\n      \"factoryId\": 28489767,\n      \"id\": 57754153\n    },\n    {\n      \"key\": \"ex incididunt minim sunt id\",\n      \"name\": \"dolor proident Lorem consectetur laboris\",\n      \"reconciled\": true,\n      \"config\": \"quis\",\n      \"user\": \"dolor in\",\n      \"note\": \"Lorem ipsum et ex\",\n      \"containerCount\": -49487763,\n      \"netElementCount\": -53829006,\n      \"dateTimeInLongFormat\": -75957123,\n      \"isDefault\": \"occaecat commodo nisi U\",\n      \"isAutoBuilder\": \"dolor\",\n      \"type\": \"irure dolor\",\n      \"isDraft\": false,\n      \"editable\": false,\n      \"sslConfig\": false,\n      \"factoryId\": -74616363,\n      \"id\": 98903353\n    }\n  ],\n  \"designedConfig\": [\n    {\n      \"command\": \"reprehenderit nostr\",\n      \"rowId\": 30124711,\n      \"code\": \"in laborum occaecat enim pariatur\",\n      \"blockId\": \"Lorem\"\n    },\n    {\n      \"command\": \"eiusmod consectetur minim ad\",\n      \"rowId\": -37242797,\n      \"code\": \"in\",\n      \"blockId\": \"cillum reprehenderit consequat qui deserunt\"\n    }\n  ],\n  \"total\": -80118346,\n  \"runningConfig\": [\n    {\n      \"command\": \"cillum Lorem\",\n      \"rowId\": -20568482,\n      \"code\": \"dolor occaecat ut\",\n      \"blockId\": \"magna elit\"\n    },\n    {\n      \"command\": \"Ut\",\n      \"rowId\": -62657000,\n      \"code\": \"nostrud labore\",\n      \"blockId\": \"magna in\"\n    }\n  ],\n  \"isReconcileInvoked\": true,\n  \"mismatch\": -49198853,\n  \"warning\": [\n    \"quis\",\n    \"Duis est ut eiusmod\"\n  ],\n  \"errors\": \"commodo\",\n  \"targetIpAddress\": \"qui adipisicing voluptate\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getconfigfortask.do?workorderid=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getconfigfortask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getconfigfortask.do?workorderid=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getconfigfortask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/getconfigfortask.do?workorderid=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"getconfigfortask.do"
									],
									"query": [
										{
											"key": "workorderid",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"irure\",\n  \"errorMessage\": \"sunt e\"\n}"
						}
					]
				},
				{
					"name": "This API is used to test the connectivity of the target IP address.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ipAddress\": \"dolore sit eu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/provisioning/ipConnectivityTest.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"ipConnectivityTest.do"
							]
						},
						"description": "This API is used to test the connectivity of the target IP address."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"dolore sit eu\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/ipConnectivityTest.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"ipConnectivityTest.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"dolore sit eu\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/ipConnectivityTest.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"ipConnectivityTest.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"dolore sit eu\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/ipConnectivityTest.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"ipConnectivityTest.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddress\": \"dolore sit eu\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/ipConnectivityTest.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"ipConnectivityTest.do"
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"proident Duis non\",\n  \"errorMessage\": \"dolore fugiat est ex\"\n}"
						}
					]
				},
				{
					"name": "This API is used to save the temporary changes made in the Network Provisioning page.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"[]\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/provisioning/saveTopology.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"saveTopology.do"
							]
						},
						"description": "This API is used to save the temporary changes made in the Network Provisioning page.\n\n**DEPRECATION NOTICE**: This API is marked as deprecated as of the 2020.2 train. Uses should be migrated to the /provisioning/v2/saveTopology.do API."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"[]\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/saveTopology.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"saveTopology.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"[]\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/saveTopology.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"saveTopology.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"[]\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/saveTopology.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"saveTopology.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"[]\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/saveTopology.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"saveTopology.do"
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in occaecat\",\n  \"errorMessage\": \"proident Lorem\"\n}"
						}
					]
				},
				{
					"name": "This API is used to perform search on Topology data.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/provisioning/searchTopology.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"searchTopology.do"
							],
							"query": [
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "Text to be be searched"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "This API is used to perform search on Topology data."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/searchTopology.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"searchTopology.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"containerList\": [\n    {\n      \"name\": \"officia dolore occaecat Ut\",\n      \"key\": \"deserunt t\",\n      \"root\": false,\n      \"undefined\": false,\n      \"userId\": \"sunt in laboris\",\n      \"dateTimeInLongFormat\": 17035337,\n      \"mode\": \"consequat ullamco officia\",\n      \"factoryId\": 96839995,\n      \"id\": 63962430\n    },\n    {\n      \"name\": \"eu consequat voluptate Ut\",\n      \"key\": \"esse minim\",\n      \"root\": false,\n      \"undefined\": true,\n      \"userId\": \"laboris occaecat elit veniam laborum\",\n      \"dateTimeInLongFormat\": -65021336,\n      \"mode\": \"eiusmod nostrud veniam\",\n      \"factoryId\": 86136508,\n      \"id\": -4500601\n    }\n  ],\n  \"keywordList\": [\n    \"sint fugiat\",\n    \"qui Excepteur reprehenderit\"\n  ],\n  \"netElementContainerList\": [\n    {\n      \"containerKey\": \"deserunt est ad\",\n      \"containerName\": \"ut sed sit eu occaecat\",\n      \"netelementKey\": \"est\"\n    },\n    {\n      \"containerKey\": \"officia quis nostrud\",\n      \"containerName\": \"Lorem aliquip proident\",\n      \"netelementKey\": \"Excepteur reprehe\"\n    }\n  ],\n  \"netElementList\": [\n    {\n      \"architecture\": \"in deserunt esse\",\n      \"bootupTimeStamp\": -29029571.856037036,\n      \"complianceCode\": \"enim\",\n      \"complianceIndication\": \"exercitation Duis\",\n      \"deviceStatus\": \"eu aliqua\",\n      \"deviceInfo\": \"elit\",\n      \"fqdn\": \"dolore in nulla\",\n      \"hardwareRevision\": \"laborum consectetur proident\",\n      \"internalBuildId\": \"mollit esse commodo sunt\",\n      \"internalVersion\": \"Ut si\",\n      \"ipAddress\": \"culpa mollit commodo do\",\n      \"isDANZEnabled\": \"esse Excepte\",\n      \"isMLAGEnabled\": \"labore nisi ullamco\",\n      \"key\": \"commodo adipisicing ad consectetur L\",\n      \"lastSyncUp\": -18870700,\n      \"memFree\": -367884,\n      \"memTotal\": -25113471,\n      \"modelName\": \"ullamco\",\n      \"parentContainerId\": \"ut deserunt sint ad\",\n      \"serialNumber\": \"ipsum fugiat sunt\",\n      \"systemMacAddress\": \"ea ut ullamco non\",\n      \"taskIdList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tempAction\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"voluptate reprehenderit nostrud\",\n      \"unAuthorized\": true,\n      \"version\": \"in id\",\n      \"ztpMode\": \"Duis ipsum adipisicing\",\n      \"sslEnabledByCVP\": true,\n      \"sslConfigAvailable\": false\n    },\n    {\n      \"architecture\": \"ex sunt ea nostrud fugiat\",\n      \"bootupTimeStamp\": 80883285.97550246,\n      \"complianceCode\": \"anim est velit deserunt\",\n      \"complianceIndication\": \"quis laboris incididunt Ut\",\n      \"deviceStatus\": \"incididun\",\n      \"deviceInfo\": \"Duis pariatur aute cupidatat\",\n      \"fqdn\": \"exercitation Duis Excepteur\",\n      \"hardwareRevision\": \"irure adipisicing incididunt non\",\n      \"internalBuildId\": \"esse ut aute\",\n      \"internalVersion\": \"laboris commodo\",\n      \"ipAddress\": \"ut est\",\n      \"isDANZEnabled\": \"reprehenderit et\",\n      \"isMLAGEnabled\": \"dolor cupidatat in elit\",\n      \"key\": \"quis culpa tempor dolore\",\n      \"lastSyncUp\": -69672134,\n      \"memFree\": 72816889,\n      \"memTotal\": 14748089,\n      \"modelName\": \"ea irure pariatur\",\n      \"parentContainerId\": \"sit occaecat pariatur\",\n      \"serialNumber\": \"Duis irure cillum proident\",\n      \"systemMacAddress\": \"quis sed\",\n      \"taskIdList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"tempAction\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"type\": \"dol\",\n      \"unAuthorized\": false,\n      \"version\": \"elit voluptate pari\",\n      \"ztpMode\": \"laboris proident nulla consequat\",\n      \"sslEnabledByCVP\": true,\n      \"sslConfigAvailable\": true\n    }\n  ],\n  \"total\": 21444293\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/searchTopology.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"searchTopology.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/searchTopology.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"searchTopology.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/provisioning/searchTopology.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"searchTopology.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eiusmod\",\n  \"errorMessage\": \"eiusmod mollit Lorem\"\n}"
						}
					]
				},
				{
					"name": "This API is used to update the uploaded image information by netelement id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "netElementImage",
									"description": "(Required) Image to upload - The image must be in .png format",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/provisioning/updateNetElementImageById.do?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"updateNetElementImageById.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) the net Element ID"
								}
							]
						},
						"description": "This API is used to update the uploaded image information by netelement id for Topology in the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "netElementImage",
											"description": "(Required) Image to upload - The image must be in .png format",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/updateNetElementImageById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"updateNetElementImageById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "netElementImage",
											"description": "(Required) Image to upload - The image must be in .png format",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/updateNetElementImageById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"updateNetElementImageById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "netElementImage",
											"description": "(Required) Image to upload - The image must be in .png format",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/updateNetElementImageById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"updateNetElementImageById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "netElementImage",
											"description": "(Required) Image to upload - The image must be in .png format",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/updateNetElementImageById.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"updateNetElementImageById.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"code": 440,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ut dolore esse ad\",\n  \"errorMessage\": \"amet\"\n}"
						}
					]
				},
				{
					"name": "This API used to add or update reconcile configlet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"dolore Lorem reprehenderit et\",\n  \"config\": \"mollit labore dolor\",\n  \"reconciled\": true,\n  \"key\": \"consectetur ullamco irure ea\",\n  \"unCheckedLines\": \"Ut occaecat enim sed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/provisioning/updateReconcileConfiglet.do?netElementId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"provisioning",
								"updateReconcileConfiglet.do"
							],
							"query": [
								{
									"key": "netElementId",
									"value": "dolore proi",
									"description": "(Required) The device netelement id"
								}
							]
						},
						"description": "Adds or updates the reconcile configlet"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"dolore Lorem reprehenderit et\",\n  \"config\": \"mollit labore dolor\",\n  \"reconciled\": true,\n  \"key\": \"consectetur ullamco irure ea\",\n  \"unCheckedLines\": \"Ut occaecat enim sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/updateReconcileConfiglet.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"updateReconcileConfiglet.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"key\": \"aliqua anim reprehenderit\",\n    \"name\": \"ut sed commodo\",\n    \"reconciled\": true,\n    \"config\": \"irure ea in\",\n    \"user\": \"Duis dolor in\",\n    \"note\": \"voluptate\",\n    \"containerCount\": 18366302,\n    \"netElementCount\": -87879544,\n    \"dateTimeInLongFormat\": -91757494,\n    \"isDefault\": \"laborum ea\",\n    \"isAutoBuilder\": \"laborum sed\",\n    \"type\": \"exercitation cupidatat irure\",\n    \"isDraft\": false,\n    \"editable\": false,\n    \"sslConfig\": true,\n    \"factoryId\": 34586711,\n    \"id\": 68094237\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"dolore Lorem reprehenderit et\",\n  \"config\": \"mollit labore dolor\",\n  \"reconciled\": true,\n  \"key\": \"consectetur ullamco irure ea\",\n  \"unCheckedLines\": \"Ut occaecat enim sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/updateReconcileConfiglet.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"updateReconcileConfiglet.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"mollit sint esse\",\n  \"errorMessage\": \"ut\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"dolore Lorem reprehenderit et\",\n  \"config\": \"mollit labore dolor\",\n  \"reconciled\": true,\n  \"key\": \"consectetur ullamco irure ea\",\n  \"unCheckedLines\": \"Ut occaecat enim sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/updateReconcileConfiglet.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"updateReconcileConfiglet.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"dolore Lorem reprehenderit et\",\n  \"config\": \"mollit labore dolor\",\n  \"reconciled\": true,\n  \"key\": \"consectetur ullamco irure ea\",\n  \"unCheckedLines\": \"Ut occaecat enim sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/provisioning/updateReconcileConfiglet.do?netElementId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"provisioning",
										"updateReconcileConfiglet.do"
									],
									"query": [
										{
											"key": "netElementId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "role",
			"item": [
				{
					"name": "To create role in the CVP system.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"mollit eiusmod do\",\n  \"moduleList\": [\n    {\n      \"mode\": \"proident\",\n      \"name\": \"aliqua nostrud\"\n    },\n    {\n      \"mode\": \"elit dolore veniam in tempor\",\n      \"name\": \"eiusmod qui sed\"\n    }\n  ],\n  \"name\": \"in\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/role/createRole.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								"createRole.do"
							]
						},
						"description": "This is a proxy service that creates role in the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"pariatur eiusm\",\n  \"moduleList\": [\n    {\n      \"mode\": \"eu anim\",\n      \"name\": \"esse et commodo anim\"\n    },\n    {\n      \"mode\": \"sunt minim\",\n      \"name\": \"fugiat voluptate elit dolor enim\"\n    }\n  ],\n  \"name\": \"occaecat\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/createRole.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"createRole.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"classId\": 30294036,\n  \"moduleList\": [\n    {\n      \"mode\": \"minim cupidatat tempor amet proident\",\n      \"name\": \"consectetur\",\n      \"factoryId\": -61676923,\n      \"id\": 40270400\n    },\n    {\n      \"mode\": \"minim ea in\",\n      \"name\": \"labore nulla enim\",\n      \"factoryId\": -19829977,\n      \"id\": -78629553\n    }\n  ],\n  \"moduleListSize\": -30967939,\n  \"createdBy\": \"ullamco anim exercitation proident\",\n  \"createdOn\": \"elit dolore in do consequat\",\n  \"factoryId\": 86209454,\n  \"description\": \"qui incididunt irure occaecat\",\n  \"name\": \"sit in\",\n  \"key\": \"a\",\n  \"id\": -4680410\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"pariatur eiusm\",\n  \"moduleList\": [\n    {\n      \"mode\": \"eu anim\",\n      \"name\": \"esse et commodo anim\"\n    },\n    {\n      \"mode\": \"sunt minim\",\n      \"name\": \"fugiat voluptate elit dolor enim\"\n    }\n  ],\n  \"name\": \"occaecat\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/createRole.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"createRole.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sunt consequat\",\n  \"errorMessage\": \"velit adipisicing est voluptate\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"pariatur eiusm\",\n  \"moduleList\": [\n    {\n      \"mode\": \"eu anim\",\n      \"name\": \"esse et commodo anim\"\n    },\n    {\n      \"mode\": \"sunt minim\",\n      \"name\": \"fugiat voluptate elit dolor enim\"\n    }\n  ],\n  \"name\": \"occaecat\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/createRole.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"createRole.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"pariatur eiusm\",\n  \"moduleList\": [\n    {\n      \"mode\": \"eu anim\",\n      \"name\": \"esse et commodo anim\"\n    },\n    {\n      \"mode\": \"sunt minim\",\n      \"name\": \"fugiat voluptate elit dolor enim\"\n    }\n  ],\n  \"name\": \"occaecat\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/createRole.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"createRole.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To delete a role in the CVP system.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"dolore proi\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/role/deleteRoles.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								"deleteRoles.do"
							]
						},
						"description": "This is a proxy service that deletes a role from the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/deleteRoles.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"deleteRoles.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/deleteRoles.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"deleteRoles.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"elit\",\n  \"errorMessage\": \"laboris amet\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/deleteRoles.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"deleteRoles.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/deleteRoles.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"deleteRoles.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the count of applied users when updating a role to the CVP system.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/role/getAppliedUserCount.do?roleId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								"getAppliedUserCount.do"
							],
							"query": [
								{
									"key": "roleId",
									"value": "dolore proi",
									"description": "(Required) The role Id for which the applied user count needs to be fetched"
								}
							]
						},
						"description": "This is a proxy service that get the count of applied users when updating a role to the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getAppliedUserCount.do?roleId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getAppliedUserCount.do"
									],
									"query": [
										{
											"key": "roleId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": 15642700\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getAppliedUserCount.do?roleId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getAppliedUserCount.do"
									],
									"query": [
										{
											"key": "roleId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"mollit\",\n  \"errorMessage\": \"reprehenderit Lorem ad enim\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getAppliedUserCount.do?roleId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getAppliedUserCount.do"
									],
									"query": [
										{
											"key": "roleId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getAppliedUserCount.do?roleId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getAppliedUserCount.do"
									],
									"query": [
										{
											"key": "roleId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the applied users list for a role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/role/getAppliedUsers.do?roleName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								"getAppliedUsers.do"
							],
							"query": [
								{
									"key": "roleName",
									"value": "dolore proi",
									"description": "(Required) The role name for which the user list is to be fetched"
								},
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "The query param to be searched"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination"
								}
							]
						},
						"description": "Returns the paginated applied users list"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getAppliedUsers.do?roleName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getAppliedUsers.do"
									],
									"query": [
										{
											"key": "roleName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -88099320,\n  \"data\": [\n    {\n      \"assignedBy\": \"ullamco\",\n      \"assignedOn\": \"do in\",\n      \"userName\": \"occaecat et\"\n    },\n    {\n      \"assignedBy\": \"non ea commodo\",\n      \"assignedOn\": \"ut cupidatat fugiat sed\",\n      \"userName\": \"ulla\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getAppliedUsers.do?roleName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getAppliedUsers.do"
									],
									"query": [
										{
											"key": "roleName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"reprehenderit velit eiusmod\",\n  \"errorMessage\": \"deserunt pariatur quis\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getAppliedUsers.do?roleName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getAppliedUsers.do"
									],
									"query": [
										{
											"key": "roleName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getAppliedUsers.do?roleName=dolore proi&queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getAppliedUsers.do"
									],
									"query": [
										{
											"key": "roleName",
											"value": "dolore proi"
										},
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the role for the given role id ",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/role/getRole.do?roleId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								"getRole.do"
							],
							"query": [
								{
									"key": "roleId",
									"value": "dolore proi",
									"description": "(Required) Unique id associated with the role"
								}
							]
						},
						"description": "Returns the details about the corresponding role"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getRole.do?roleId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getRole.do"
									],
									"query": [
										{
											"key": "roleId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"classId\": -50094872,\n  \"moduleList\": [\n    {\n      \"mode\": \"in elit\",\n      \"name\": \"dolor occaecat minim elit\",\n      \"factoryId\": -57453037,\n      \"id\": 20019685\n    },\n    {\n      \"mode\": \"magna consequat aute\",\n      \"name\": \"officia occaecat\",\n      \"factoryId\": 36580156,\n      \"id\": 72219689\n    }\n  ],\n  \"moduleListSize\": -55601681,\n  \"createdBy\": \"ex labore\",\n  \"createdOn\": \"dolor ex in\",\n  \"factoryId\": -65114167,\n  \"description\": \"L\",\n  \"name\": \"sint minim sed\",\n  \"key\": \"magna est do consequat commodo\",\n  \"id\": 27532672\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getRole.do?roleId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getRole.do"
									],
									"query": [
										{
											"key": "roleId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"enim\",\n  \"errorMessage\": \"aute dolore eiusmod et\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getRole.do?roleId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getRole.do"
									],
									"query": [
										{
											"key": "roleId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getRole.do?roleId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getRole.do"
									],
									"query": [
										{
											"key": "roleId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/role/getRoles.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								"getRoles.do"
							],
							"query": [
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "The query param to be searched"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination"
								}
							]
						},
						"description": "Returns the paginated roles result"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getRoles.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getRoles.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 76544917,\n  \"users\": {\n    \"string\": 29981765\n  },\n  \"roles\": [\n    {\n      \"classId\": 798321,\n      \"moduleList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"moduleListSize\": -89583691,\n      \"createdBy\": \"dolore\",\n      \"createdOn\": \"et nostrud veniam\",\n      \"factoryId\": 12367256,\n      \"description\": \"cupidatat laborum nisi ut\",\n      \"name\": \"ut fugiat voluptate Ut\",\n      \"key\": \"proident ea\",\n      \"id\": -67874941\n    },\n    {\n      \"classId\": -54249891,\n      \"moduleList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"moduleListSize\": -43624,\n      \"createdBy\": \"fugiat\",\n      \"createdOn\": \"cupidatat sed\",\n      \"factoryId\": 17401567,\n      \"description\": \"in qui Excepteur sit moll\",\n      \"name\": \"tempor ad deserunt\",\n      \"key\": \"sunt anim\",\n      \"id\": -82666372\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getRoles.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getRoles.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"enim\",\n  \"errorMessage\": \"aute dolore eiusmod et\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getRoles.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getRoles.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/getRoles.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"getRoles.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To update a role to the CVP system.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"exercitation Duis elit laborum\",\n  \"name\": \"qui veniam laborum ut\",\n  \"description\": \"ad consectetur tempor\",\n  \"moduleList\": [\n    {\n      \"mode\": \"dolor ut sed ullamc\",\n      \"name\": \"Ut labore\"\n    },\n    {\n      \"mode\": \"proident anim aute consequat\",\n      \"name\": \"magna velit cupidatat\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/role/updateRole.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								"updateRole.do"
							]
						},
						"description": "This is a proxy service that updates a role to the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"labore laborum minim\",\n  \"name\": \"minim dolor eu\",\n  \"description\": \"cupidatat anim dolor\",\n  \"moduleList\": [\n    {\n      \"mode\": \"Lorem elit officia\",\n      \"name\": \"qui esse nostrud aliquip\"\n    },\n    {\n      \"mode\": \"velit magna\",\n      \"name\": \"aute sunt nostrud\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/updateRole.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"updateRole.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"labore laborum minim\",\n  \"name\": \"minim dolor eu\",\n  \"description\": \"cupidatat anim dolor\",\n  \"moduleList\": [\n    {\n      \"mode\": \"Lorem elit officia\",\n      \"name\": \"qui esse nostrud aliquip\"\n    },\n    {\n      \"mode\": \"velit magna\",\n      \"name\": \"aute sunt nostrud\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/updateRole.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"updateRole.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"nulla tempor aliqua ad\",\n  \"errorMessage\": \"ut qui ad nulla\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"labore laborum minim\",\n  \"name\": \"minim dolor eu\",\n  \"description\": \"cupidatat anim dolor\",\n  \"moduleList\": [\n    {\n      \"mode\": \"Lorem elit officia\",\n      \"name\": \"qui esse nostrud aliquip\"\n    },\n    {\n      \"mode\": \"velit magna\",\n      \"name\": \"aute sunt nostrud\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/updateRole.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"updateRole.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"labore laborum minim\",\n  \"name\": \"minim dolor eu\",\n  \"description\": \"cupidatat anim dolor\",\n  \"moduleList\": [\n    {\n      \"mode\": \"Lorem elit officia\",\n      \"name\": \"qui esse nostrud aliquip\"\n    },\n    {\n      \"mode\": \"velit magna\",\n      \"name\": \"aute sunt nostrud\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/updateRole.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										"updateRole.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "rollback",
			"item": [
				{
					"name": "To create temporary actions for the container level rollback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rollbackTimestamp\": 89476461,\n  \"containerId\": \"adipisicing id consectetur\",\n  \"rollbackType\": \"ipsum Excepteur ullamco incididunt magna\",\n  \"startIndex\": -53196067,\n  \"endIndex\": 43209075,\n  \"targetManagementIPList\": [\n    {\n      \"netElementId\": \"ut pariatur in\",\n      \"targetManagementIP\": \"voluptate qui nulla exercitation\"\n    },\n    {\n      \"netElementId\": \"sunt la\",\n      \"targetManagementIP\": \"qui sed aliqua ea\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rollback/addNetworkRollbackTempActions.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rollback",
								"addNetworkRollbackTempActions.do"
							]
						},
						"description": "This proxy service is used to create temporary action for the container level rollback"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rollbackTimestamp\": -53417443,\n  \"containerId\": \"dolor\",\n  \"rollbackType\": \"dolor dolore qui laboris anim\",\n  \"startIndex\": -80229988,\n  \"endIndex\": -44948650,\n  \"targetManagementIPList\": [\n    {\n      \"netElementId\": \"do laborum\",\n      \"targetManagementIP\": \"nostrud proi\"\n    },\n    {\n      \"netElementId\": \"ullamco amet laborum irure qui\",\n      \"targetManagementIP\": \"nisi laborum\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rollback/addNetworkRollbackTempActions.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"addNetworkRollbackTempActions.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"message\": \"aliquip quis labore eu\",\n    \"count\": -27867897\n  },\n  \"skippedDeviceInfo\": {\n    \"skippedDeviceCount\": 79503067,\n    \"detailedInfo\": {\n      \"container\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hostname\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"reasonForSkipping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"netElementId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rollbackTimestamp\": -53417443,\n  \"containerId\": \"dolor\",\n  \"rollbackType\": \"dolor dolore qui laboris anim\",\n  \"startIndex\": -80229988,\n  \"endIndex\": -44948650,\n  \"targetManagementIPList\": [\n    {\n      \"netElementId\": \"do laborum\",\n      \"targetManagementIP\": \"nostrud proi\"\n    },\n    {\n      \"netElementId\": \"ullamco amet laborum irure qui\",\n      \"targetManagementIP\": \"nisi laborum\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rollback/addNetworkRollbackTempActions.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"addNetworkRollbackTempActions.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"aliquip cupidatat est \",\n  \"errorMessage\": \"Duis quis in\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rollbackTimestamp\": -53417443,\n  \"containerId\": \"dolor\",\n  \"rollbackType\": \"dolor dolore qui laboris anim\",\n  \"startIndex\": -80229988,\n  \"endIndex\": -44948650,\n  \"targetManagementIPList\": [\n    {\n      \"netElementId\": \"do laborum\",\n      \"targetManagementIP\": \"nostrud proi\"\n    },\n    {\n      \"netElementId\": \"ullamco amet laborum irure qui\",\n      \"targetManagementIP\": \"nisi laborum\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rollback/addNetworkRollbackTempActions.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"addNetworkRollbackTempActions.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rollbackTimestamp\": -53417443,\n  \"containerId\": \"dolor\",\n  \"rollbackType\": \"dolor dolore qui laboris anim\",\n  \"startIndex\": -80229988,\n  \"endIndex\": -44948650,\n  \"targetManagementIPList\": [\n    {\n      \"netElementId\": \"do laborum\",\n      \"targetManagementIP\": \"nostrud proi\"\n    },\n    {\n      \"netElementId\": \"ullamco amet laborum irure qui\",\n      \"targetManagementIP\": \"nisi laborum\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rollback/addNetworkRollbackTempActions.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"addNetworkRollbackTempActions.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To create temporary action for the device level rollback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rollbackTimestamp\": -39786051,\n  \"netElementId\": \"Ut sed\",\n  \"rollbackType\": \"ipsu\",\n  \"targetManagementIP\": \"dolor in proident\",\n  \"configRollbackInput\": {\n    \"timeStamp\": \"amet cupidatat est incididunt\",\n    \"taskId\": \"commodo non in\"\n  },\n  \"imageRollbackInput\": {\n    \"timeStamp\": \"\",\n    \"taskId\": \"sed ullamco dolore mollit\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rollback/addTempRollbackAction.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rollback",
								"addTempRollbackAction.do"
							]
						},
						"description": "This proxy service is used to create temporary action for the device level rollback"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rollbackTimestamp\": -39786051,\n  \"netElementId\": \"Ut sed\",\n  \"rollbackType\": \"ipsu\",\n  \"targetManagementIP\": \"dolor in proident\",\n  \"configRollbackInput\": {\n    \"timeStamp\": \"amet cupidatat est incididunt\",\n    \"taskId\": \"commodo non in\"\n  },\n  \"imageRollbackInput\": {\n    \"timeStamp\": \"\",\n    \"taskId\": \"sed ullamco dolore mollit\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rollback/addTempRollbackAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"addTempRollbackAction.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rollbackTimestamp\": -39786051,\n  \"netElementId\": \"Ut sed\",\n  \"rollbackType\": \"ipsu\",\n  \"targetManagementIP\": \"dolor in proident\",\n  \"configRollbackInput\": {\n    \"timeStamp\": \"amet cupidatat est incididunt\",\n    \"taskId\": \"commodo non in\"\n  },\n  \"imageRollbackInput\": {\n    \"timeStamp\": \"\",\n    \"taskId\": \"sed ullamco dolore mollit\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rollback/addTempRollbackAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"addTempRollbackAction.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"aliquip cupidatat est \",\n  \"errorMessage\": \"Duis quis in\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rollbackTimestamp\": -39786051,\n  \"netElementId\": \"Ut sed\",\n  \"rollbackType\": \"ipsu\",\n  \"targetManagementIP\": \"dolor in proident\",\n  \"configRollbackInput\": {\n    \"timeStamp\": \"amet cupidatat est incididunt\",\n    \"taskId\": \"commodo non in\"\n  },\n  \"imageRollbackInput\": {\n    \"timeStamp\": \"\",\n    \"taskId\": \"sed ullamco dolore mollit\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rollback/addTempRollbackAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"addTempRollbackAction.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rollbackTimestamp\": -39786051,\n  \"netElementId\": \"Ut sed\",\n  \"rollbackType\": \"ipsu\",\n  \"targetManagementIP\": \"dolor in proident\",\n  \"configRollbackInput\": {\n    \"timeStamp\": \"amet cupidatat est incididunt\",\n    \"taskId\": \"commodo non in\"\n  },\n  \"imageRollbackInput\": {\n    \"timeStamp\": \"\",\n    \"taskId\": \"sed ullamco dolore mollit\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rollback/addTempRollbackAction.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"addTempRollbackAction.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get netelements Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rollback/getNetElementsForRollback.do?containerId=dolore proi&timestamp=6555903&searchText=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rollback",
								"getNetElementsForRollback.do"
							],
							"query": [
								{
									"key": "containerId",
									"value": "dolore proi",
									"description": "(Required) container Id for which info to be retrieved"
								},
								{
									"key": "timestamp",
									"value": "6555903",
									"description": "(Required) timestamp"
								},
								{
									"key": "searchText",
									"value": "dolore proi",
									"description": "searchText to be retrieved"
								},
								{
									"key": "startIndex",
									"value": "dolore proi",
									"description": "(Required) startIndex   \n  [Please enter valid Integer]"
								},
								{
									"key": "endIndex",
									"value": "dolore proi",
									"description": "(Required) endIndex   \n  [Please enter valid Integer]"
								}
							]
						},
						"description": "This proxy service is used to fetch all devices under given containerId with hierarchy change info etc"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rollback/getNetElementsForRollback.do?containerId=dolore proi&timestamp=6555903&searchText=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"getNetElementsForRollback.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "timestamp",
											"value": "6555903"
										},
										{
											"key": "searchText",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "dolore proi"
										},
										{
											"key": "endIndex",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -82531879,\n  \"data\": [\n    {\n      \"ztpMode\": \"dolor dolor do Ut\",\n      \"unAuthorized\": false,\n      \"type\": \"non et\",\n      \"deviceStatus\": \"occaecat dolore\",\n      \"parentContainerId\": \"in exercitation eiusmod reprehenderit\",\n      \"isHierarchyChanged\": true,\n      \"internalVersion\": \"laboris quis eiusmod reprehenderit cillum\",\n      \"complianceCode\": \"dolore Ut non\",\n      \"key\": \"aute irure\",\n      \"architecture\": \"ullamco eu commodo\",\n      \"tempAction\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"compareString\": \"Ut esse est proident\",\n      \"serialNumber\": \"Duis irure\",\n      \"memFree\": 29254392,\n      \"fqdn\": \"est velit in\",\n      \"memTotal\": 77907130,\n      \"systemMacAddress\": \"consectetur Lorem nostrud in\",\n      \"ipAddress\": \"ipsum mollit\",\n      \"isMLAGEnabled\": \"dolor ullam\",\n      \"version\": \"dolore\",\n      \"lastSyncUp\": 30895431,\n      \"deviceInfo\": \"ea ex ullamco tempor\",\n      \"taskIdList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"taskStatusBeforeCancel\": \"ipsum officia cillum\",\n      \"description\": \"commodo tempor qui in in\",\n      \"newParentContainerId\": \"adipisicing proident ea irure\",\n      \"templateId\": \"anim\",\n      \"workOrderState\": \"est anim al\",\n      \"completedOnInLongFormat\": \"qui in\",\n      \"currentTaskName\": \"dolore aliquip magna officia\",\n      \"workFlowDetailsId\": \"ullamco proident\",\n      \"id\": \"esse cillum incididunt exercitation\",\n      \"taskStatus\": \"dolor irure sed\",\n      \"executedOnInLongFormat\": 81645861.22829199,\n      \"executedBy\": \"Lorem nisi anim magna in\",\n      \"createdOnInLongFormat\": \"do officia\",\n      \"workOrderUserDefinedStatus\": \"laborum\",\n      \"factoryId\": \"ad consequat\",\n      \"currentTaskType\": \"eu\",\n      \"workOrderEscalation\": \"qui ex ea nulla\",\n      \"workOrderDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"modelName\": \"esse\",\n      \"hardwareRevision\": \"ad Excepteur dolor la\",\n      \"isDANZEnabled\": \"esse mollit enim pa\",\n      \"internalBuildId\": \"in irure ut dolore sunt\",\n      \"complianceIndication\": \"est deserunt\",\n      \"bootupTimeStamp\": -51653790,\n      \"hierarchyChangedTimestamp\": -62851712\n    },\n    {\n      \"ztpMode\": \"Ut sunt occaecat\",\n      \"unAuthorized\": true,\n      \"type\": \"enim\",\n      \"deviceStatus\": \"ut nulla\",\n      \"parentContainerId\": \"consec\",\n      \"isHierarchyChanged\": true,\n      \"internalVersion\": \"voluptate in mollit\",\n      \"complianceCode\": \"consectetur do quis dolor\",\n      \"key\": \"id ad\",\n      \"architecture\": \"velit\",\n      \"tempAction\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"compareString\": \"amet commodo aliquip veniam\",\n      \"serialNumber\": \"l\",\n      \"memFree\": -87432607,\n      \"fqdn\": \"deserunt in eu\",\n      \"memTotal\": 55401733,\n      \"systemMacAddress\": \"reprehenderit deserunt\",\n      \"ipAddress\": \"irure dolor\",\n      \"isMLAGEnabled\": \"velit\",\n      \"version\": \"tempor aliquip enim\",\n      \"lastSyncUp\": -83152531,\n      \"deviceInfo\": \"est eu cillum sint\",\n      \"taskIdList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"taskStatusBeforeCancel\": \"commodo nulla\",\n      \"description\": \"in aute velit labore\",\n      \"newParentContainerId\": \"magna dolore\",\n      \"templateId\": \"commodo enim Lorem nostrud\",\n      \"workOrderState\": \"sint incididunt sed\",\n      \"completedOnInLongFormat\": \"Duis sunt ipsum eiusmod\",\n      \"currentTaskName\": \"voluptate commodo\",\n      \"workFlowDetailsId\": \"sit culpa\",\n      \"id\": \"sunt\",\n      \"taskStatus\": \"sed\",\n      \"executedOnInLongFormat\": 47960127.11926791,\n      \"executedBy\": \"sit ex\",\n      \"createdOnInLongFormat\": \"ven\",\n      \"workOrderUserDefinedStatus\": \"elit eu\",\n      \"factoryId\": \"nulla\",\n      \"currentTaskType\": \"in reprehenderit\",\n      \"workOrderEscalation\": \"magna elit mollit\",\n      \"workOrderDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"modelName\": \"est reprehenderit\",\n      \"hardwareRevision\": \"in\",\n      \"isDANZEnabled\": \"dolor ullamco magna exercitation Duis\",\n      \"internalBuildId\": \"nulla Ut labore\",\n      \"complianceIndication\": \"in dolor eiusmod\",\n      \"bootupTimeStamp\": -31820210,\n      \"hierarchyChangedTimestamp\": -11424591\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rollback/getNetElementsForRollback.do?containerId=dolore proi&timestamp=6555903&searchText=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"getNetElementsForRollback.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "timestamp",
											"value": "6555903"
										},
										{
											"key": "searchText",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "dolore proi"
										},
										{
											"key": "endIndex",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"dolore enim cillum\",\n  \"errorMessage\": \"in veniam sit\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rollback/getNetElementsForRollback.do?containerId=dolore proi&timestamp=6555903&searchText=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"getNetElementsForRollback.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "timestamp",
											"value": "6555903"
										},
										{
											"key": "searchText",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "dolore proi"
										},
										{
											"key": "endIndex",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rollback/getNetElementsForRollback.do?containerId=dolore proi&timestamp=6555903&searchText=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rollback",
										"getNetElementsForRollback.do"
									],
									"query": [
										{
											"key": "containerId",
											"value": "dolore proi"
										},
										{
											"key": "timestamp",
											"value": "6555903"
										},
										{
											"key": "searchText",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "dolore proi"
										},
										{
											"key": "endIndex",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "snapshot",
			"item": [
				{
					"name": "templates",
					"item": [
						{
							"name": "To delete the  Snapshot templates",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"templates"
									]
								},
								"description": "This proxy service is used to delete snapshot templates"
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"dolore proi\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"result\": \"quis commodo fugiat\",\n  \"templateErrMap\": {\n    \"templateKey1\": \"nil\",\n    \"templateKey2\": \"nil\"\n  }\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"dolore proi\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"cillum laborum tempor dolore\",\n  \"errorMessage\": \"anim est dolor sit\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"dolore proi\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"dolore proi\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "To get the  Snapshot templates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/snapshot/templates?queryparam=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"templates"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi",
											"description": "query to be retrieved"
										},
										{
											"key": "startIndex",
											"value": "dolore proi",
											"description": "(Required) startIndex \n [Please enter valid Integer]"
										},
										{
											"key": "endIndex",
											"value": "dolore proi",
											"description": "(Required) endIndex \n [Please enter valid Integer]"
										}
									]
								},
								"description": "This proxy service is used to fetch all the template key and names."
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates?queryparam=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates"
											],
											"query": [
												{
													"key": "queryparam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "dolore proi"
												},
												{
													"key": "endIndex",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"templateKeys\": [\n    {\n      \"key\": \"culpa amet dol\",\n      \"name\": \"consequat minim aliquip qui commodo\"\n    },\n    {\n      \"key\": \"non aliquip\",\n      \"name\": \"labore et elit\"\n    }\n  ]\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates?queryparam=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates"
											],
											"query": [
												{
													"key": "queryparam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "dolore proi"
												},
												{
													"key": "endIndex",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"labore qui incididunt in\",\n  \"errorMessage\": \"tempor eiusmod cillum\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates?queryparam=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates"
											],
											"query": [
												{
													"key": "queryparam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "dolore proi"
												},
												{
													"key": "endIndex",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates?queryparam=dolore proi&startIndex=dolore proi&endIndex=dolore proi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates"
											],
											"query": [
												{
													"key": "queryparam",
													"value": "dolore proi"
												},
												{
													"key": "startIndex",
													"value": "dolore proi"
												},
												{
													"key": "endIndex",
													"value": "dolore proi"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "To get the  template info for template keys",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"templateIDs\": [\n    \"deserunt ut dolor laboris\",\n    \"aliquip dolore\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/templates/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"templates",
										"info"
									]
								},
								"description": "This proxy service is used to fetch the template info of template keys given"
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"templateIDs\": [\n    \"reprehenderit aliquip tempor\",\n    \"aliquip reprehenderit qui esse\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												"info"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"templateInfo\": {}\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"templateIDs\": [\n    \"reprehenderit aliquip tempor\",\n    \"aliquip reprehenderit qui esse\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												"info"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"in laborum eu\",\n  \"errorMessage\": \"nisi dolore et irure labore\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"templateIDs\": [\n    \"reprehenderit aliquip tempor\",\n    \"aliquip reprehenderit qui esse\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												"info"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"templateIDs\": [\n    \"reprehenderit aliquip tempor\",\n    \"aliquip reprehenderit qui esse\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												"info"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "To schedule and create the template.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"elit velit magna\",\n  \"commands\": [\n    \"sit\",\n    \"ex Excepteur ea culpa\"\n  ],\n  \"deviceList\": [\n    \"culpa Excepteur eu laborum\",\n    \"esse commodo\"\n  ],\n  \"frequency\": 99746546\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/templates/schedule",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"templates",
										"schedule"
									]
								},
								"description": "This proxy service is used to create the template and schedule the list of commands against the mentioned list of devices with the given frequency."
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Excepteur eiusmod sit fugiat\",\n  \"commands\": [\n    \"ea consequat consectetur irure aute\",\n    \"incididunt nulla aliqua ullamco sint\"\n  ],\n  \"deviceList\": [\n    \"non ullamco dolor\",\n    \"amet deserunt sed enim\"\n  ],\n  \"frequency\": -7462173\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/schedule",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												"schedule"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"tempor Duis aute\",\n  \"templateKey\": \"elit laborum\",\n  \"templateName\": \"eni\"\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Excepteur eiusmod sit fugiat\",\n  \"commands\": [\n    \"ea consequat consectetur irure aute\",\n    \"incididunt nulla aliqua ullamco sint\"\n  ],\n  \"deviceList\": [\n    \"non ullamco dolor\",\n    \"amet deserunt sed enim\"\n  ],\n  \"frequency\": -7462173\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/schedule",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												"schedule"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"eu\",\n  \"errorMessage\": \"adipisicing\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Excepteur eiusmod sit fugiat\",\n  \"commands\": [\n    \"ea consequat consectetur irure aute\",\n    \"incididunt nulla aliqua ullamco sint\"\n  ],\n  \"deviceList\": [\n    \"non ullamco dolor\",\n    \"amet deserunt sed enim\"\n  ],\n  \"frequency\": -7462173\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/schedule",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												"schedule"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Excepteur eiusmod sit fugiat\",\n  \"commands\": [\n    \"ea consequat consectetur irure aute\",\n    \"incididunt nulla aliqua ullamco sint\"\n  ],\n  \"deviceList\": [\n    \"non ullamco dolor\",\n    \"amet deserunt sed enim\"\n  ],\n  \"frequency\": -7462173\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/schedule",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												"schedule"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						},
						{
							"name": "To capture the  Snapshot",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceID\": \"deserunt dolore amet\",\n  \"generatedBy\": \"sit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/templates/:templateKey/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"templates",
										":templateKey",
										"capture"
									],
									"variable": [
										{
											"key": "templateKey",
											"value": "dolore proi",
											"description": "(Required) template key of the template."
										}
									]
								},
								"description": "This proxy service is used to capture the snapshot for a device using given templatekey"
							},
							"response": [
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceID\": \"deserunt dolore amet\",\n  \"generatedBy\": \"sit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/:templateKey/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												":templateKey",
												"capture"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "dolore proi",
													"description": "(Required) template key of the template."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": \"dolor do consectetur\",\n  \"executionTime\": -51211402\n}"
								},
								{
									"name": "Description was not specified",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceID\": \"deserunt dolore amet\",\n  \"generatedBy\": \"sit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/:templateKey/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												":templateKey",
												"capture"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "dolore proi",
													"description": "(Required) template key of the template."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errorCode\": \"cupidatat sint ea\",\n  \"errorMessage\": \"proident sit dolor\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceID\": \"deserunt dolore amet\",\n  \"generatedBy\": \"sit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/:templateKey/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												":templateKey",
												"capture"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "dolore proi",
													"description": "(Required) template key of the template."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								},
								{
									"name": "Forbidden URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceID\": \"deserunt dolore amet\",\n  \"generatedBy\": \"sit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/snapshot/templates/:templateKey/capture",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"snapshot",
												"templates",
												":templateKey",
												"capture"
											],
											"variable": [
												{
													"key": "templateKey",
													"value": "dolore proi",
													"description": "(Required) template key of the template."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"dolore proi\""
								}
							]
						}
					]
				},
				{
					"name": "To get image info and running config by deviceID for the specific timeStamp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/snapshot/deviceConfigs/:deviceID?current=true&timestamp=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshot",
								"deviceConfigs",
								":deviceID"
							],
							"query": [
								{
									"key": "current",
									"value": "true",
									"description": "(Required) If it is true, it will fetch the current image info and running config info,ignores the timeStamp."
								},
								{
									"key": "timestamp",
									"value": "dolore proi",
									"description": "(Required) if current field value is not “true”, then the image info and running config info for this timestamp will be fetched."
								}
							],
							"variable": [
								{
									"key": "deviceID",
									"value": "dolore proi",
									"description": "(Required) the serial number of the device."
								}
							]
						},
						"description": "This proxy service is used to get image info and running config by deviceID for the specific timeStamp."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/deviceConfigs/:deviceID?current=true&timestamp=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"deviceConfigs",
										":deviceID"
									],
									"query": [
										{
											"key": "current",
											"value": "true"
										},
										{
											"key": "timestamp",
											"value": "dolore proi"
										}
									],
									"variable": [
										{
											"key": "deviceID",
											"value": "dolore proi",
											"description": "(Required) the serial number of the device."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"runningConfigInfo\": \"magna veniam\",\n  \"imageInfo\": {\n    \"internalBuildVersion\": \"ipsum amet enim esse magna\",\n    \"softwareImage\": \"dolor deserunt\",\n    \"softwareImageVersion\": \"irure ullamco\",\n    \"extensionsAndPatches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"isAvailableInCVP\": false\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/deviceConfigs/:deviceID?current=true&timestamp=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"deviceConfigs",
										":deviceID"
									],
									"query": [
										{
											"key": "current",
											"value": "true"
										},
										{
											"key": "timestamp",
											"value": "dolore proi"
										}
									],
									"variable": [
										{
											"key": "deviceID",
											"value": "dolore proi",
											"description": "(Required) the serial number of the device."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in magna ut\",\n  \"errorMessage\": \"commodo et Lorem sed\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/deviceConfigs/:deviceID?current=true&timestamp=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"deviceConfigs",
										":deviceID"
									],
									"query": [
										{
											"key": "current",
											"value": "true"
										},
										{
											"key": "timestamp",
											"value": "dolore proi"
										}
									],
									"variable": [
										{
											"key": "deviceID",
											"value": "dolore proi",
											"description": "(Required) the serial number of the device."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/deviceConfigs/:deviceID?current=true&timestamp=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"deviceConfigs",
										":deviceID"
									],
									"query": [
										{
											"key": "current",
											"value": "true"
										},
										{
											"key": "timestamp",
											"value": "dolore proi"
										}
									],
									"variable": [
										{
											"key": "deviceID",
											"value": "dolore proi",
											"description": "(Required) the serial number of the device."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get SnapshotChartData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"count\": 7179497,\n  \"interval\": \"aliqua adi\",\n  \"netElementId\": \"elit mollit tempor\",\n  \"containerId\": \"mollit deserunt officia nostrud\",\n  \"templateKey\": \"Excepteur tempor\",\n  \"toDate\": \"2012-11-14\",\n  \"timeZone\": \"aute Lorem\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/snapshot/getSnapshotChartData.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshot",
								"getSnapshotChartData.do"
							]
						},
						"description": "This proxy service is used to fetch data for the snapshot chart for a device / container"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"count\": 7179497,\n  \"interval\": \"aliqua adi\",\n  \"netElementId\": \"elit mollit tempor\",\n  \"containerId\": \"mollit deserunt officia nostrud\",\n  \"templateKey\": \"Excepteur tempor\",\n  \"toDate\": \"2012-11-14\",\n  \"timeZone\": \"aute Lorem\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/getSnapshotChartData.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"getSnapshotChartData.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -16213191,\n  \"data\": [\n    {\n      \"image_push_count\": 93864085,\n      \"periodStartTimestamp\": 28318382,\n      \"config_push_count\": 10046216,\n      \"period\": \"ipsum fugiat est laboris voluptate\"\n    },\n    {\n      \"image_push_count\": 58598684,\n      \"periodStartTimestamp\": 90768127,\n      \"config_push_count\": -42537564,\n      \"period\": \"do elit ut\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"count\": 7179497,\n  \"interval\": \"aliqua adi\",\n  \"netElementId\": \"elit mollit tempor\",\n  \"containerId\": \"mollit deserunt officia nostrud\",\n  \"templateKey\": \"Excepteur tempor\",\n  \"toDate\": \"2012-11-14\",\n  \"timeZone\": \"aute Lorem\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/getSnapshotChartData.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"getSnapshotChartData.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"cillum sit\",\n  \"errorMessage\": \"Ut labore ea\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"count\": 7179497,\n  \"interval\": \"aliqua adi\",\n  \"netElementId\": \"elit mollit tempor\",\n  \"containerId\": \"mollit deserunt officia nostrud\",\n  \"templateKey\": \"Excepteur tempor\",\n  \"toDate\": \"2012-11-14\",\n  \"timeZone\": \"aute Lorem\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/getSnapshotChartData.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"getSnapshotChartData.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"count\": 7179497,\n  \"interval\": \"aliqua adi\",\n  \"netElementId\": \"elit mollit tempor\",\n  \"containerId\": \"mollit deserunt officia nostrud\",\n  \"templateKey\": \"Excepteur tempor\",\n  \"toDate\": \"2012-11-14\",\n  \"timeZone\": \"aute Lorem\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/getSnapshotChartData.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"getSnapshotChartData.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the  hierarchy change info",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"deviceIDs\": [\n    \"\",\n    \"ut commodo\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/snapshot/hierarchychangeinfo?timestamp=6555903",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshot",
								"hierarchychangeinfo"
							],
							"query": [
								{
									"key": "timestamp",
									"value": "6555903",
									"description": "(Required) timestamp value of the selected rollback point."
								}
							]
						},
						"description": "This proxy service is used to fetch the hierarchy change information of the devices at given timeStamp."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceIDs\": [\n    \"officia ea dolore\",\n    \"dolor\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/hierarchychangeinfo?timestamp=6555903",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"hierarchychangeinfo"
									],
									"query": [
										{
											"key": "timestamp",
											"value": "6555903"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"hierarchyChangeInfo\": {}\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceIDs\": [\n    \"officia ea dolore\",\n    \"dolor\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/hierarchychangeinfo?timestamp=6555903",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"hierarchychangeinfo"
									],
									"query": [
										{
											"key": "timestamp",
											"value": "6555903"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"qui ipsum\",\n  \"errorMessage\": \"cupidatat culpa labore\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceIDs\": [\n    \"officia ea dolore\",\n    \"dolor\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/hierarchychangeinfo?timestamp=6555903",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"hierarchychangeinfo"
									],
									"query": [
										{
											"key": "timestamp",
											"value": "6555903"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceIDs\": [\n    \"officia ea dolore\",\n    \"dolor\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/snapshot/hierarchychangeinfo?timestamp=6555903",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"hierarchychangeinfo"
									],
									"query": [
										{
											"key": "timestamp",
											"value": "6555903"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the  template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/snapshot/template?templateId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshot",
								"template"
							],
							"query": [
								{
									"key": "templateId",
									"value": "dolore proi",
									"description": "(Required) Id of the template."
								}
							]
						},
						"description": "This proxy service is used to get the template info for given templateId.."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/template?templateId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"template"
									],
									"query": [
										{
											"key": "templateId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"key\": \"amet anim sint\",\n  \"name\": \"officia in\",\n  \"commandList\": [\n    \"esse fugiat cillum dolore\",\n    \"occaecat ullamco\"\n  ],\n  \"frequency\": 91334255,\n  \"deviceList\": [\n    \"minim id consequat mollit\",\n    \"ea eu Excepteur veniam\"\n  ],\n  \"lastUpdatedBy\": \"id ma\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/template?templateId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"template"
									],
									"query": [
										{
											"key": "templateId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"dolor est dolor minim magna\",\n  \"errorMessage\": \"quis commodo\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/template?templateId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"template"
									],
									"query": [
										{
											"key": "templateId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshot/template?templateId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshot",
										"template"
									],
									"query": [
										{
											"key": "templateId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "ssl",
			"item": [
				{
					"name": "To import CA signed public certificate.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"publicCertFileName\": \"cupidatat\",\n  \"publicCertFile\": \"nostrud in et\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ssl/bindCertWithCSR.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"bindCertWithCSR.do"
							]
						},
						"description": "This service is used to import CA signed public certificate."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicCertFileName\": \"cupidatat\",\n  \"publicCertFile\": \"nostrud in et\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/bindCertWithCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"bindCertWithCSR.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"certType\": \"Duis sint\",\n  \"certEnabled\": true,\n  \"commonName\": \"dolore do amet\",\n  \"publicCertFileName\": \"laboris aliquip\",\n  \"privateKeyFileName\": \"Lore\",\n  \"organization\": \"magna dolore\",\n  \"organizationUnit\": \"sunt dolor mollit tempor\",\n  \"location\": \"mollit dolore ullamco dolore do\",\n  \"state\": \"do quis occaecat\",\n  \"country\": \"ut\",\n  \"subjectAlternateNameIPList\": [\n    \"sunt exercitation\",\n    \"consectetur veniam\"\n  ],\n  \"subjectAlternateNameDNSList\": [\n    \"id\",\n    \"in q\"\n  ],\n  \"description\": \"sit nisi ut anim\",\n  \"keyLength\": -45854310,\n  \"selfSigned\": true,\n  \"digestAlgorithm\": \"sed qui exercitation velit dolore\",\n  \"encryptAlgorithm\": \"culpa sunt\",\n  \"createdBy\": \"dolor quis minim in\",\n  \"createdOn\": 37540984,\n  \"issuedTo\": \"sit ad\",\n  \"issuedBy\": \"in ea\",\n  \"issuedOn\": -50222023,\n  \"validity\": 9663986,\n  \"validFrom\": 96428616,\n  \"validTill\": 69645555,\n  \"certStoreKey\": \"dolor in qui labore consectetur\",\n  \"key\": \"et mollit ex\",\n  \"passPhraseProtected\": false\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicCertFileName\": \"cupidatat\",\n  \"publicCertFile\": \"nostrud in et\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/bindCertWithCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"bindCertWithCSR.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"tempor aliqua consequat\",\n  \"errorMessage\": \"deserunt reprehenderit\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicCertFileName\": \"cupidatat\",\n  \"publicCertFile\": \"nostrud in et\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/bindCertWithCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"bindCertWithCSR.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicCertFileName\": \"cupidatat\",\n  \"publicCertFile\": \"nostrud in et\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/bindCertWithCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"bindCertWithCSR.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To delete CSR.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ssl/deleteCSR.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"deleteCSR.do"
							]
						},
						"description": "This service is used to delete CSR."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/deleteCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"deleteCSR.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/deleteCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"deleteCSR.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"occaecat commodo\",\n  \"errorMessage\": \"ut aliquip\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/deleteCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"deleteCSR.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/deleteCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"deleteCSR.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To delete proposed certificate associated to user's session.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ssl/deleteProposedCertificate.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"deleteProposedCertificate.do"
							]
						},
						"description": "This service is used to delete proposed certificate."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/deleteProposedCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"deleteProposedCertificate.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/deleteProposedCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"deleteProposedCertificate.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"occaecat commodo\",\n  \"errorMessage\": \"ut aliquip\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/deleteProposedCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"deleteProposedCertificate.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/deleteProposedCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"deleteProposedCertificate.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To export the CSR.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ssl/exportCSR.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"exportCSR.do"
							]
						},
						"description": "This service is used to export the CSR."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/exportCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"exportCSR.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"fileName\": \"quis est officia\",\n  \"csr\": \"exercitation officia ulla\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/exportCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"exportCSR.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"Lorem sit Duis\",\n  \"errorMessage\": \"velit ullamco\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/exportCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"exportCSR.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/exportCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"exportCSR.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To export the Certificate.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"sed in aute commodo\",\n  \"passPhrase\": \"ullamco mollit\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ssl/exportCertificate.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"exportCertificate.do"
							]
						},
						"description": "This service is used to export the Certificate."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"sed in aute commodo\",\n  \"passPhrase\": \"ullamco mollit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/exportCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"exportCertificate.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"fileName\": \"ullamc\",\n  \"cert\": \"sint irure\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"sed in aute commodo\",\n  \"passPhrase\": \"ullamco mollit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/exportCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"exportCertificate.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"pariatur Ut\",\n  \"errorMessage\": \"in eiusmod\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"sed in aute commodo\",\n  \"passPhrase\": \"ullamco mollit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/exportCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"exportCertificate.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"sed in aute commodo\",\n  \"passPhrase\": \"ullamco mollit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/exportCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"exportCertificate.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To generate CSR through CVP.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"commonName\": \"magna tempor aliquip ullamco non\",\n  \"organization\": \"in laboris cillum\",\n  \"organizationUnit\": \"do cupidatat quis occaecat aute\",\n  \"location\": \"exercitati\",\n  \"state\": \"dolor nulla\",\n  \"country\": \"irure sed veniam eu\",\n  \"keyLength\": -2740206,\n  \"digestAlgorithm\": \"Lorem Excepteur\",\n  \"encryptAlgorithm\": \"eiusmod aliquip sed\",\n  \"description\": \"sed et est\",\n  \"emailId\": \"occaecat incididunt sed\",\n  \"subjectAlternateNameDNSList\": [\n    \"mollit eu\",\n    \"sunt \"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"dolor\",\n    \"proident officia dolor\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ssl/generateCSR.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"generateCSR.do"
							]
						},
						"description": "This service is used to generate CSR through CVP."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commonName\": \"enim esse fugiat aliquip dolore\",\n  \"organization\": \"deserunt ex\",\n  \"organizationUnit\": \"ad ut sed\",\n  \"location\": \"velit sunt aliquip\",\n  \"state\": \"occaecat nostrud est dolor \",\n  \"country\": \"magna\",\n  \"keyLength\": 17424769,\n  \"digestAlgorithm\": \"proident ea\",\n  \"encryptAlgorithm\": \"est\",\n  \"description\": \"labore deserunt\",\n  \"emailId\": \"enim officia Excepteur esse\",\n  \"subjectAlternateNameDNSList\": [\n    \"dolor anim sed vel\",\n    \"cillum quis Duis\"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"aliquip sunt consequat et\",\n    \"non consequat velit et aute\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/generateCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"generateCSR.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"key\": \"magna quis adipisic\",\n  \"certStoreKey\": \"officia consectetur ullamco\",\n  \"certType\": \"deserunt id\",\n  \"commonName\": \"quis Lorem non ad\",\n  \"organization\": \"deserunt reprehenderit amet\",\n  \"organizationUnit\": \"in elit tempor occaecat\",\n  \"location\": \"Duis cillum consectetur\",\n  \"state\": \"consequat sunt\",\n  \"country\": \"Ut commodo\",\n  \"subjectAlternateNameIPList\": [\n    \"consectetur\",\n    \"mollit veniam Lorem adipisicing ex\"\n  ],\n  \"subjectAlternateNameDNSList\": [\n    \"est id dolore occaecat\",\n    \"consequat in\"\n  ],\n  \"description\": \"eu officia in ut Duis\",\n  \"emailId\": \"laboris consectetur\",\n  \"keyLength\": 73021024,\n  \"digestAlgorithm\": \"fugiat\",\n  \"encryptAlgorithm\": \"aliqua veniam elit anim amet\",\n  \"passPhraseProtected\": false,\n  \"createdBy\": \"aute laboris Duis\",\n  \"createdOn\": 79183914\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commonName\": \"enim esse fugiat aliquip dolore\",\n  \"organization\": \"deserunt ex\",\n  \"organizationUnit\": \"ad ut sed\",\n  \"location\": \"velit sunt aliquip\",\n  \"state\": \"occaecat nostrud est dolor \",\n  \"country\": \"magna\",\n  \"keyLength\": 17424769,\n  \"digestAlgorithm\": \"proident ea\",\n  \"encryptAlgorithm\": \"est\",\n  \"description\": \"labore deserunt\",\n  \"emailId\": \"enim officia Excepteur esse\",\n  \"subjectAlternateNameDNSList\": [\n    \"dolor anim sed vel\",\n    \"cillum quis Duis\"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"aliquip sunt consequat et\",\n    \"non consequat velit et aute\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/generateCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"generateCSR.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"incididunt mollit irure\",\n  \"errorMessage\": \"aliqua\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commonName\": \"enim esse fugiat aliquip dolore\",\n  \"organization\": \"deserunt ex\",\n  \"organizationUnit\": \"ad ut sed\",\n  \"location\": \"velit sunt aliquip\",\n  \"state\": \"occaecat nostrud est dolor \",\n  \"country\": \"magna\",\n  \"keyLength\": 17424769,\n  \"digestAlgorithm\": \"proident ea\",\n  \"encryptAlgorithm\": \"est\",\n  \"description\": \"labore deserunt\",\n  \"emailId\": \"enim officia Excepteur esse\",\n  \"subjectAlternateNameDNSList\": [\n    \"dolor anim sed vel\",\n    \"cillum quis Duis\"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"aliquip sunt consequat et\",\n    \"non consequat velit et aute\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/generateCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"generateCSR.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commonName\": \"enim esse fugiat aliquip dolore\",\n  \"organization\": \"deserunt ex\",\n  \"organizationUnit\": \"ad ut sed\",\n  \"location\": \"velit sunt aliquip\",\n  \"state\": \"occaecat nostrud est dolor \",\n  \"country\": \"magna\",\n  \"keyLength\": 17424769,\n  \"digestAlgorithm\": \"proident ea\",\n  \"encryptAlgorithm\": \"est\",\n  \"description\": \"labore deserunt\",\n  \"emailId\": \"enim officia Excepteur esse\",\n  \"subjectAlternateNameDNSList\": [\n    \"dolor anim sed vel\",\n    \"cillum quis Duis\"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"aliquip sunt consequat et\",\n    \"non consequat velit et aute\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/generateCSR.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"generateCSR.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To generate certificate through CVP.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"commonName\": \"eiusmod\",\n  \"keyLength\": 70743224,\n  \"digestAlgorithm\": \"minim incididunt dolore fugiat\",\n  \"encryptAlgorithm\": \"in dolore\",\n  \"validity\": -47913683,\n  \"certType\": \"eu voluptate quis\",\n  \"country\": \"officia incididunt dolor esse Duis\",\n  \"description\": \"et pariatur consectetur ea laboris\",\n  \"location\": \"ea\",\n  \"organization\": \"est dolore\",\n  \"organizationUnit\": \"ad mollit elit\",\n  \"state\": \"in minim sint in\",\n  \"subjectAlternateNameDNSList\": [\n    \"ad d\",\n    \"sit aliqua \"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"sed ad Lorem laborum\",\n    \"cupidatat et do Lorem\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ssl/generateCertificate.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"generateCertificate.do"
							]
						},
						"description": "This service is used to generate certificate through CVP. (Note: The key attribute in response json will be null for the certType 'cvpCert'.)"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commonName\": \"magna\",\n  \"keyLength\": 17688526,\n  \"digestAlgorithm\": \"consectetur pariatur\",\n  \"encryptAlgorithm\": \"labore reprehenderit\",\n  \"validity\": 56712579,\n  \"certType\": \"irure\",\n  \"country\": \"laboris id eu\",\n  \"description\": \"exercitation laborum\",\n  \"location\": \"ut adipisicing velit magna\",\n  \"organization\": \"eu cupidatat commodo\",\n  \"organizationUnit\": \"voluptate ut\",\n  \"state\": \"in minim aliqua dolor\",\n  \"subjectAlternateNameDNSList\": [\n    \"commodo eu adipisicing\",\n    \"officia\"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"eiusmod c\",\n    \"occaecat exercitation\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/generateCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"generateCertificate.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"key\": \"reprehenderit voluptate labore velit ad\",\n  \"certType\": \"cillum sint minim consectetur occaecat\",\n  \"certEnabled\": true,\n  \"commonName\": \"occaecat adipisicing\",\n  \"publicCertFileName\": \"eiusmod et\",\n  \"privateKeyFileName\": \"commodo esse tempor\",\n  \"organization\": \"in sed in in ipsum\",\n  \"organizationUnit\": \"sunt dolor do\",\n  \"location\": \"in nisi sunt\",\n  \"state\": \"magna eiusmod non\",\n  \"country\": \"ea culpa\",\n  \"subjectAlternateNameIPList\": [\n    \"officia nulla\",\n    \"incididunt aute ea exercitation\"\n  ],\n  \"subjectAlternateNameDNSList\": [\n    \"velit cillum nisi sit\",\n    \"Lorem in aliqua ullamc\"\n  ],\n  \"description\": \"velit dolore\",\n  \"keyLength\": 96500069,\n  \"selfSigned\": false,\n  \"digestAlgorithm\": \"cillum sunt\",\n  \"encryptAlgorithm\": \"dolor adipisicing laboris ea quis\",\n  \"createdBy\": \"exercitation nulla id\",\n  \"createdOn\": -25157841,\n  \"issuedTo\": \"id officia elit\",\n  \"issuedBy\": \"non et ad veniam\",\n  \"issuedOn\": -54967908,\n  \"validity\": 40896995,\n  \"validFrom\": -8079967,\n  \"validTill\": 70834056,\n  \"certStoreKey\": \"exercitation consectetur eu\",\n  \"passPhraseProtected\": true\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commonName\": \"magna\",\n  \"keyLength\": 17688526,\n  \"digestAlgorithm\": \"consectetur pariatur\",\n  \"encryptAlgorithm\": \"labore reprehenderit\",\n  \"validity\": 56712579,\n  \"certType\": \"irure\",\n  \"country\": \"laboris id eu\",\n  \"description\": \"exercitation laborum\",\n  \"location\": \"ut adipisicing velit magna\",\n  \"organization\": \"eu cupidatat commodo\",\n  \"organizationUnit\": \"voluptate ut\",\n  \"state\": \"in minim aliqua dolor\",\n  \"subjectAlternateNameDNSList\": [\n    \"commodo eu adipisicing\",\n    \"officia\"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"eiusmod c\",\n    \"occaecat exercitation\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/generateCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"generateCertificate.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"cil\",\n  \"errorMessage\": \"non adipisicing ex\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commonName\": \"magna\",\n  \"keyLength\": 17688526,\n  \"digestAlgorithm\": \"consectetur pariatur\",\n  \"encryptAlgorithm\": \"labore reprehenderit\",\n  \"validity\": 56712579,\n  \"certType\": \"irure\",\n  \"country\": \"laboris id eu\",\n  \"description\": \"exercitation laborum\",\n  \"location\": \"ut adipisicing velit magna\",\n  \"organization\": \"eu cupidatat commodo\",\n  \"organizationUnit\": \"voluptate ut\",\n  \"state\": \"in minim aliqua dolor\",\n  \"subjectAlternateNameDNSList\": [\n    \"commodo eu adipisicing\",\n    \"officia\"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"eiusmod c\",\n    \"occaecat exercitation\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/generateCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"generateCertificate.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commonName\": \"magna\",\n  \"keyLength\": 17688526,\n  \"digestAlgorithm\": \"consectetur pariatur\",\n  \"encryptAlgorithm\": \"labore reprehenderit\",\n  \"validity\": 56712579,\n  \"certType\": \"irure\",\n  \"country\": \"laboris id eu\",\n  \"description\": \"exercitation laborum\",\n  \"location\": \"ut adipisicing velit magna\",\n  \"organization\": \"eu cupidatat commodo\",\n  \"organizationUnit\": \"voluptate ut\",\n  \"state\": \"in minim aliqua dolor\",\n  \"subjectAlternateNameDNSList\": [\n    \"commodo eu adipisicing\",\n    \"officia\"\n  ],\n  \"subjectAlternateNameIPList\": [\n    \"eiusmod c\",\n    \"occaecat exercitation\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/generateCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"generateCertificate.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the certificate based on CertType.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ssl/getCertificate.do?certType=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"getCertificate.do"
							],
							"query": [
								{
									"key": "certType",
									"value": "dolore proi",
									"description": "(Required) Types of the certificate. Possible Cert Types : cvpCert, csr, dcaCert"
								}
							]
						},
						"description": "This proxy service is used to get certificate."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/getCertificate.do?certType=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"getCertificate.do"
									],
									"query": [
										{
											"key": "certType",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"key\": \"commodo magna ad labore in\",\n  \"certType\": \"sit tempor Ut\",\n  \"certEnabled\": false,\n  \"commonName\": \"minim eu aliquip dolore voluptate\",\n  \"publicCertFileName\": \"aute aliquip i\",\n  \"privateKeyFileName\": \"commodo et pariatur tempor\",\n  \"organization\": \"nisi\",\n  \"organizationUnit\": \"eiusmod sint incididunt qui ut\",\n  \"location\": \"anim aliquip adipisicing incididunt ad\",\n  \"state\": \"qui reprehenderit magna\",\n  \"country\": \"eu ut adipisicing\",\n  \"subjectAlternateNameIPList\": [\n    \"mollit ea culpa deserunt\",\n    \"dolore eiusmod ut deserunt\"\n  ],\n  \"subjectAlternateNameDNSList\": [\n    \"ex adipisicing\",\n    \"in do fugiat in\"\n  ],\n  \"description\": \"fugiat ipsum Duis ut\",\n  \"keyLength\": 50309339,\n  \"selfSigned\": true,\n  \"digestAlgorithm\": \"Duis esse c\",\n  \"encryptAlgorithm\": \"sit ad Excepteur pariatur\",\n  \"createdBy\": \"dolor id ut est\",\n  \"createdOn\": -43597488,\n  \"issuedTo\": \"veniam Ut proident consequat elit\",\n  \"issuedBy\": \"ea magna nostrud\",\n  \"issuedOn\": 96354899,\n  \"validity\": -76187566,\n  \"validFrom\": -8457191,\n  \"validTill\": -80665616,\n  \"certStoreKey\": \"dolor exerc\",\n  \"passPhraseProtected\": false\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/getCertificate.do?certType=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"getCertificate.do"
									],
									"query": [
										{
											"key": "certType",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ullamco enim Excepteur cupidatat\",\n  \"errorMessage\": \"deserunt dolor ei\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/getCertificate.do?certType=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"getCertificate.do"
									],
									"query": [
										{
											"key": "certType",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/getCertificate.do?certType=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"getCertificate.do"
									],
									"query": [
										{
											"key": "certType",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To import public certificate with private key.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"publicCertFileName\": \"aliqua\",\n  \"privateKeyFileName\": \"amet labo\",\n  \"publicCert\": \"dolor magna laboris su\",\n  \"privateKey\": \"in consequat\",\n  \"certType\": \"ut dolore\",\n  \"passPhrase\": \"ut ea voluptate ut\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ssl/importCertAndPrivateKey.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"importCertAndPrivateKey.do"
							]
						},
						"description": "This service is used to import public certificate with private key."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicCertFileName\": \"aliqua\",\n  \"privateKeyFileName\": \"amet labo\",\n  \"publicCert\": \"dolor magna laboris su\",\n  \"privateKey\": \"in consequat\",\n  \"certType\": \"ut dolore\",\n  \"passPhrase\": \"ut ea voluptate ut\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/importCertAndPrivateKey.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"importCertAndPrivateKey.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"certType\": \"reprehenderit ipsum\",\n  \"certEnabled\": false,\n  \"commonName\": \"Lorem\",\n  \"publicCertFileName\": \"ut nostrud irure eu\",\n  \"privateKeyFileName\": \"Excepteur Ut officia dolor\",\n  \"organization\": \"id in labore deserunt\",\n  \"organizationUnit\": \"elit aliqua dolore aliqu\",\n  \"location\": \"ad aliqua mollit nostrud deserunt\",\n  \"state\": \"et nisi\",\n  \"country\": \"dolore sint laboris ut veniam\",\n  \"subjectAlternateNameIPList\": [\n    \"incididunt dolor in consectetur\",\n    \"veniam\"\n  ],\n  \"subjectAlternateNameDNSList\": [\n    \"Excepteur\",\n    \"qui eu in \"\n  ],\n  \"description\": \"incididunt anim ut\",\n  \"keyLength\": 12256370,\n  \"selfSigned\": false,\n  \"digestAlgorithm\": \"in magna dolor\",\n  \"encryptAlgorithm\": \"adipisicing Excepteur\",\n  \"createdBy\": \"qui proident pariatu\",\n  \"createdOn\": -92829400,\n  \"issuedTo\": \"Duis\",\n  \"issuedBy\": \"non sint\",\n  \"issuedOn\": 13599244,\n  \"validity\": 63242849,\n  \"validFrom\": -44965465,\n  \"validTill\": 32722843,\n  \"certStoreKey\": \"sed et enim elit\",\n  \"key\": \"in velit in laborum cupidatat\",\n  \"passPhraseProtected\": true\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicCertFileName\": \"aliqua\",\n  \"privateKeyFileName\": \"amet labo\",\n  \"publicCert\": \"dolor magna laboris su\",\n  \"privateKey\": \"in consequat\",\n  \"certType\": \"ut dolore\",\n  \"passPhrase\": \"ut ea voluptate ut\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/importCertAndPrivateKey.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"importCertAndPrivateKey.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"tempor velit eiusmod\",\n  \"errorMessage\": \"cupidatat proident nulla\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicCertFileName\": \"aliqua\",\n  \"privateKeyFileName\": \"amet labo\",\n  \"publicCert\": \"dolor magna laboris su\",\n  \"privateKey\": \"in consequat\",\n  \"certType\": \"ut dolore\",\n  \"passPhrase\": \"ut ea voluptate ut\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/importCertAndPrivateKey.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"importCertAndPrivateKey.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicCertFileName\": \"aliqua\",\n  \"privateKeyFileName\": \"amet labo\",\n  \"publicCert\": \"dolor magna laboris su\",\n  \"privateKey\": \"in consequat\",\n  \"certType\": \"ut dolore\",\n  \"passPhrase\": \"ut ea voluptate ut\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ssl/importCertAndPrivateKey.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"importCertAndPrivateKey.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To install proposed certificate in CVP.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ssl/installCertificate.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ssl",
								"installCertificate.do"
							]
						},
						"description": "This service is used to install proposed certificate in CVP."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/installCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"installCertificate.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"est et\",\n  \"eventId\": \"nulla dolore \",\n  \"eventType\": \"commodo in\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/installCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"installCertificate.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"do irure ipsum\",\n  \"errorMessage\": \"commodo id quis officia\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/installCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"installCertificate.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ssl/installCertificate.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ssl",
										"installCertificate.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "task",
			"item": [
				{
					"name": "This API is used to add notes of selected task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"workOrderId\": \"nulla sit ad\",\n  \"note\": \"sed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/task/addNoteToTask.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task",
								"addNoteToTask.do"
							]
						},
						"description": "Adds notes to the task"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workOrderId\": \"nulla sit ad\",\n  \"note\": \"sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/addNoteToTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"addNoteToTask.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workOrderId\": \"nulla sit ad\",\n  \"note\": \"sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/addNoteToTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"addNoteToTask.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"elit incididunt nulla quis consequat\",\n  \"errorMessage\": \"mollit dolor eu aliqua\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workOrderId\": \"nulla sit ad\",\n  \"note\": \"sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/addNoteToTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"addNoteToTask.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workOrderId\": \"nulla sit ad\",\n  \"note\": \"sed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/addNoteToTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"addNoteToTask.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to cancel the task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    \"Excepteur\",\n    \"ut consectetur commodo\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/task/cancelTask.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task",
								"cancelTask.do"
							]
						},
						"description": "Cancels the task created"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/cancelTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"cancelTask.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/cancelTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"cancelTask.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"Duis qui mollit Excepteur\",\n  \"errorMessage\": \"ullamco laborum cillum \"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/cancelTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"cancelTask.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/cancelTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"cancelTask.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to execute the selected task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/task/executeTask.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task",
								"executeTask.do"
							]
						},
						"description": "Triggers the execution of selected work flow task"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/executeTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"executeTask.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/executeTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"executeTask.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"Duis ipsum eiusmod\",\n  \"errorMessage\": \"culpa eu est commodo\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/executeTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"executeTask.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/executeTask.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"executeTask.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the task data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/task/getTaskById.do?taskId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task",
								"getTaskById.do"
							],
							"query": [
								{
									"key": "taskId",
									"value": "dolore proi",
									"description": "(Required) Unique ID of the workflow task"
								}
							]
						},
						"description": "Fetches the task data of corresponding task id"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTaskById.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTaskById.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ccId\": \"id tempor\",\n  \"completedOnInLongFormat\": 74474623,\n  \"createdBy\": \"qui in fugiat irure\",\n  \"createdOnInLongFormat\": 75422273,\n  \"currentTaskName\": \"dolore cupidatat occaecat\",\n  \"currentTaskType\": \"ut exercitation pariatur\",\n  \"data\": {\n    \"IS_CONFIG_PUSH_NEEDED\": \"\",\n    \"currentparentContainerId\": \"dolore incididunt ut amet\",\n    \"WORKFLOW_ACTION\": \"exercitation velit\",\n    \"newparentContainerId\": \"ullamco magna in occaecat\",\n    \"NETELEMENT_ID\": \"ullamco\",\n    \"IS_ADD_OR_MOVE_FLOW\": true,\n    \"VIEW\": \"sint\",\n    \"imageIdList\": \"officia nostrud consequat deserunt\",\n    \"imagebundle\": \"cupidatat pariatur\",\n    \"imageBundleId\": \"dolore et ut\",\n    \"APP_SESSION_ID\": \"amet ut cillum laboris\"\n  },\n  \"description\": \"ex ea sunt eu\",\n  \"executedBy\": \"veniam id dolor\",\n  \"executedOnInLongFormat\": 10517623,\n  \"factoryId\": 69045626,\n  \"id\": 95805284,\n  \"name\": \"voluptate quis\",\n  \"newParentContainerId\": \"eu\",\n  \"newParentContainerName\": \"nisi eu occaecat do\",\n  \"note\": \"et\",\n  \"taskStatus\": \"do nostrud\",\n  \"taskStatusBeforeCancel\": \"dolor labore irure minim\",\n  \"templateId\": \"commodo officia\",\n  \"workFlowDetailsId\": \"ullamco ea Duis\",\n  \"workOrderDetails\": {\n    \"workOrderDetailsId\": \"Duis voluptate eu dolore\",\n    \"netElementHostName\": \"cillum minim aliquip\",\n    \"netElementId\": \"in\",\n    \"ipAddress\": \"ea\",\n    \"workOrderId\": \"proident aliqua labore aute\",\n    \"serialNumber\": \"consectetur ipsum ut\",\n    \"factoryId\": -53316905,\n    \"id\": 83170355\n  },\n  \"workOrderEscalation\": {},\n  \"workOrderId\": \"dolor fugiat\",\n  \"workOrderState\": \"officia eiusmod aliquip culpa\",\n  \"workOrderUserDefinedStatus\": \"tempor sunt laboris minim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTaskById.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTaskById.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"veniam\",\n  \"errorMessage\": \"amet deserunt\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTaskById.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTaskById.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTaskById.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTaskById.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the task status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/task/getTaskStatusById.do?taskId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task",
								"getTaskStatusById.do"
							],
							"query": [
								{
									"key": "taskId",
									"value": "dolore proi",
									"description": "(Required) Unique ID of the work flow task"
								}
							]
						},
						"description": "Fetches the task status of the requested task id"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTaskStatusById.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTaskStatusById.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"taskStatus\": \"Duis ad\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTaskStatusById.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTaskStatusById.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in laborum\",\n  \"errorMessage\": \"proident\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTaskStatusById.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTaskStatusById.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTaskStatusById.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTaskStatusById.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API is used to get the list of tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/task/getTasks.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task",
								"getTasks.do"
							],
							"query": [
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "The query parameter. If it is empty then all tasks will be returned"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Starting index of pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) Ending index of pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "Fetches the list of tasks based upon the query value"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTasks.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTasks.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": 3194253,\n  \"data\": [\n    {\n      \"workOrderId\": \"qui quis ut veniam fugiat\",\n      \"name\": \"Duis ullamco\",\n      \"workOrderEscalation\": {},\n      \"workOrderState\": \"ea\",\n      \"currentTaskName\": \"sint amet\",\n      \"templateId\": \"culpa laborum cupidatat labore\",\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBy\": \"culpa enim\",\n      \"executedOnInLongFormat\": 21330416,\n      \"executedBy\": \"dolore\",\n      \"currentTaskType\": \"laboris et ut\",\n      \"workFlowDetailsId\": \"minim id commodo labore\",\n      \"description\": \"nisi\",\n      \"workOrderUserDefinedStatus\": \"iru\",\n      \"workOrderDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdOnInLongFormat\": 9329294,\n      \"completedOnInLongFormat\": 83782460,\n      \"note\": \"quis sint Ut\",\n      \"taskStatus\": \"mollit n\",\n      \"taskStatusBeforeCancel\": \"adipisicing\",\n      \"newParentContainerName\": \"qui ullamco nisi\",\n      \"factoryId\": -24198215,\n      \"newParentContainerId\": \"Excepteur\",\n      \"ccId\": \"aute adipisicing\",\n      \"id\": -44088623\n    },\n    {\n      \"workOrderId\": \"in cupidatat\",\n      \"name\": \"in incididunt cillum velit\",\n      \"workOrderEscalation\": {},\n      \"workOrderState\": \"eiusmod exercitation\",\n      \"currentTaskName\": \"Lorem\",\n      \"templateId\": \"dolore Ut ex mollit\",\n      \"data\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdBy\": \"reprehenderit deserunt ullamco do\",\n      \"executedOnInLongFormat\": 58519644,\n      \"executedBy\": \"irure ipsum mollit\",\n      \"currentTaskType\": \"id voluptate\",\n      \"workFlowDetailsId\": \"commodo aliquip cillum\",\n      \"description\": \"Lorem sed\",\n      \"workOrderUserDefinedStatus\": \"anim nostrud cillum\",\n      \"workOrderDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"createdOnInLongFormat\": 15149649,\n      \"completedOnInLongFormat\": 48112936,\n      \"note\": \"esse in sed\",\n      \"taskStatus\": \"pariatur commodo\",\n      \"taskStatusBeforeCancel\": \"magna dolor fugiat quis\",\n      \"newParentContainerName\": \"occaecat exercit\",\n      \"factoryId\": 82841945,\n      \"newParentContainerId\": \"dolor exercitation eu irure\",\n      \"ccId\": \"adipisicing Duis\",\n      \"id\": -44407417\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTasks.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTasks.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"laborum sit est cupidatat\",\n  \"errorMessage\": \"in culpa\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTasks.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTasks.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/task/getTasks.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"getTasks.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "trusted Certificates",
			"item": [
				{
					"name": "To delete trusted server certificate for given fingerprint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    \"Excepteur\",\n    \"ut consectetur commodo\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trustedCertificates/delete.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trustedCertificates",
								"delete.do"
							]
						},
						"description": "This service is used to delete trusted server certificate."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/delete.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"delete.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/delete.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"delete.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"esse deserunt\",\n  \"errorMessage\": \"officia in\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/delete.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"delete.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/delete.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"delete.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To export trusted server certificate for given fingerprint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trustedCertificates/export.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trustedCertificates",
								"export.do"
							]
						},
						"description": "This service is used to export trusted server certificate."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/export.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"export.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/export.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"export.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ex\",\n  \"errorMessage\": \"ut labore\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/export.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"export.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": [\n    \"exercitation amet labore sed\",\n    \"velit quis mol\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/export.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"export.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the trusted server Information.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/trustedCertificates/getCertInfo.do?fingerPrint=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trustedCertificates",
								"getCertInfo.do"
							],
							"query": [
								{
									"key": "fingerPrint",
									"value": "dolore proi",
									"description": "(Required) fingerPrint of the trusted server"
								}
							]
						},
						"description": "This proxy service is used to get Trusted Server Information."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/getCertInfo.do?fingerPrint=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"getCertInfo.do"
									],
									"query": [
										{
											"key": "fingerPrint",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"classId\": -71165130,\n  \"certName\": \"Ut velit in aute\",\n  \"signedBy\": \"consectetur\",\n  \"validFrom\": 86113909,\n  \"validTill\": -37724688,\n  \"fingerPrint\": \"ullamco proident\",\n  \"uploadedBy\": \"pariatur in\",\n  \"issuedTo\": \"c\",\n  \"organization\": \"tempor magna ullamco Ut\",\n  \"organizationUnit\": \"id et tempor\",\n  \"location\": \"in\",\n  \"state\": \"nisi minim reprehenderit\",\n  \"country\": \"consequat ipsum officia incididunt\",\n  \"subjectAltName\": \"sed do\",\n  \"encryptAlgorithm\": \"ut d\",\n  \"digestAlgorithm\": \"esse dolor Lorem dolore\",\n  \"keyLength\": -28687667,\n  \"emailId\": \"elit fugiat ipsum consectetur eu\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/getCertInfo.do?fingerPrint=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"getCertInfo.do"
									],
									"query": [
										{
											"key": "fingerPrint",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"commodo in velit eiusmod\",\n  \"errorMessage\": \"ut mollit commo\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/getCertInfo.do?fingerPrint=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"getCertInfo.do"
									],
									"query": [
										{
											"key": "fingerPrint",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/getCertInfo.do?fingerPrint=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"getCertInfo.do"
									],
									"query": [
										{
											"key": "fingerPrint",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To get the trusted servers.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/trustedCertificates/getCerts.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trustedCertificates",
								"getCerts.do"
							],
							"query": [
								{
									"key": "queryParam",
									"value": "dolore proi",
									"description": "Query Param for the trusted server"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) Start index for the pagination"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) End index for the pagination. If end index is 0 then all the records will be returned"
								}
							]
						},
						"description": "This proxy service is used to get Trusted Servers."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/getCerts.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"getCerts.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -92585921,\n  \"trustedServers\": [\n    {\n      \"classId\": 41705720,\n      \"certName\": \"dolor eu nulla\",\n      \"signedBy\": \"anim quis nostrud ex\",\n      \"validFrom\": 79125497,\n      \"validTill\": 53451647,\n      \"fingerPrint\": \"cons\",\n      \"uploadedBy\": \"quis aliqua cillum proident\",\n      \"organization\": \"est dolor\",\n      \"organizationUnit\": \"tempor cillum\",\n      \"location\": \"ex magna proident\",\n      \"state\": \"occaecat in ea\",\n      \"country\": \"in Excepteur\",\n      \"emailId\": \"nostrud Lorem ipsum\",\n      \"subjectAltName\": \"exercitation aute\",\n      \"keyLength\": 52645018,\n      \"digestAlgorithm\": \"quis cillum\",\n      \"encryptAlgorithm\": \"eu\",\n      \"issuedTo\": \"voluptate commodo\",\n      \"certType\": \"ullamco\",\n      \"key\": \"sit laboris dolore eu\"\n    },\n    {\n      \"classId\": 29104447,\n      \"certName\": \"elit\",\n      \"signedBy\": \"Excepteur in qui fugiat irure\",\n      \"validFrom\": 96175023,\n      \"validTill\": -65553755,\n      \"fingerPrint\": \"qui veniam nisi\",\n      \"uploadedBy\": \"dolor oc\",\n      \"organization\": \"q\",\n      \"organizationUnit\": \"sint nisi\",\n      \"location\": \"adipisicing\",\n      \"state\": \"deserun\",\n      \"country\": \"laboris dolor nulla\",\n      \"emailId\": \"ipsum Lorem exercitation\",\n      \"subjectAltName\": \"cillum magna ex incididunt\",\n      \"keyLength\": -15433733,\n      \"digestAlgorithm\": \"in minim\",\n      \"encryptAlgorithm\": \"tempor irure\",\n      \"issuedTo\": \"sint incididunt\",\n      \"certType\": \"voluptate dolore commodo pariatur\",\n      \"key\": \"dolor\"\n    }\n  ]\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/getCerts.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"getCerts.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"fugiat cupidatat deserunt\",\n  \"errorMessage\": \"en\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/getCerts.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"getCerts.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/getCerts.do?queryParam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"getCerts.do"
									],
									"query": [
										{
											"key": "queryParam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This uploads trusted servers and adds the certificate to the system.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"certificate\": \"tempor laborum elit et\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trustedCertificates/upload.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trustedCertificates",
								"upload.do"
							]
						},
						"description": "This service is used to upload Trusted Servers and adds the certificate to the system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"certificate\": \"tempor laborum elit et\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/upload.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"upload.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"certificate\": \"tempor laborum elit et\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/upload.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"upload.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"ut aliquip moll\",\n  \"errorMessage\": \"tempor fugiat\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"certificate\": \"tempor laborum elit et\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/upload.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"upload.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"certificate\": \"tempor laborum elit et\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trustedCertificates/upload.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trustedCertificates",
										"upload.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "To adds an user to the CVP system.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"userStatus\": \"eiusmod laborum\",\n    \"userId\": \"ipsum\",\n    \"password\": \"irure ut enim ad\",\n    \"email\": \"n3cb468x@bhSoIdBsPhbezrrRCVBaNKTHrXS.ud\",\n    \"firstName\": \"ut sunt nulla sit\",\n    \"lastName\": \"sit\",\n    \"contactNumber\": \"amet ea laborum\"\n  },\n  \"roles\": [\n    \"sit anim dolore cillum qui\",\n    \"elit\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/addUser.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"addUser.do"
							]
						},
						"description": "This is a proxy service that adds an user to the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"userStatus\": \"magna dolore enim cupidatat\",\n    \"userId\": \"dolor in proident irure\",\n    \"password\": \"incididunt Ut magna tempor\",\n    \"email\": \"VTuvb05iK3b@NqicWKbtRjMWEjnxzhBMLVMegutnJA.oxh\",\n    \"firstName\": \"qui tempor reprehend\",\n    \"lastName\": \"aliquip fugiat\",\n    \"contactNumber\": \"cillum ut voluptate consequat occaecat\"\n  },\n  \"roles\": [\n    \"Ut nulla tempor consectetur\",\n    \"ullamco anim ex Ut qui\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/addUser.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"addUser.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"factoryId\": -91541193,\n    \"id\": 39540570,\n    \"lastName\": \"reprehenderit\",\n    \"contactNumber\": \"voluptate officia\",\n    \"email\": \"proident cu\",\n    \"userId\": \"nisi amet mollit laborum\",\n    \"userStatus\": \"eu adipisicing aliqua\",\n    \"firstName\": \"magna laboris id\",\n    \"currentStatus\": \"ea esse\",\n    \"password\": \"exercitation laboris\",\n    \"lastAccessed\": -51241095.86730064,\n    \"userType\": \"culpa sit voluptate anim\"\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"userStatus\": \"magna dolore enim cupidatat\",\n    \"userId\": \"dolor in proident irure\",\n    \"password\": \"incididunt Ut magna tempor\",\n    \"email\": \"VTuvb05iK3b@NqicWKbtRjMWEjnxzhBMLVMegutnJA.oxh\",\n    \"firstName\": \"qui tempor reprehend\",\n    \"lastName\": \"aliquip fugiat\",\n    \"contactNumber\": \"cillum ut voluptate consequat occaecat\"\n  },\n  \"roles\": [\n    \"Ut nulla tempor consectetur\",\n    \"ullamco anim ex Ut qui\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/addUser.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"addUser.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"reprehenderit aliquip Duis\",\n  \"errorMessage\": \"nisi voluptate ut cillum\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"userStatus\": \"magna dolore enim cupidatat\",\n    \"userId\": \"dolor in proident irure\",\n    \"password\": \"incididunt Ut magna tempor\",\n    \"email\": \"VTuvb05iK3b@NqicWKbtRjMWEjnxzhBMLVMegutnJA.oxh\",\n    \"firstName\": \"qui tempor reprehend\",\n    \"lastName\": \"aliquip fugiat\",\n    \"contactNumber\": \"cillum ut voluptate consequat occaecat\"\n  },\n  \"roles\": [\n    \"Ut nulla tempor consectetur\",\n    \"ullamco anim ex Ut qui\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/addUser.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"addUser.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"userStatus\": \"magna dolore enim cupidatat\",\n    \"userId\": \"dolor in proident irure\",\n    \"password\": \"incididunt Ut magna tempor\",\n    \"email\": \"VTuvb05iK3b@NqicWKbtRjMWEjnxzhBMLVMegutnJA.oxh\",\n    \"firstName\": \"qui tempor reprehend\",\n    \"lastName\": \"aliquip fugiat\",\n    \"contactNumber\": \"cillum ut voluptate consequat occaecat\"\n  },\n  \"roles\": [\n    \"Ut nulla tempor consectetur\",\n    \"ullamco anim ex Ut qui\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/addUser.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"addUser.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To delete user(s) from the CVP system.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"dolore proi\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/deleteUsers.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"deleteUsers.do"
							]
						},
						"description": "This is a proxy service that is used to delete user(s) from the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/deleteUsers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"deleteUsers.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/deleteUsers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"deleteUsers.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"eiusmod velit et\",\n  \"errorMessage\": \"voluptate magna\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/deleteUsers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"deleteUsers.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/deleteUsers.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"deleteUsers.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "This API updates the user status.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"dolore proi\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/enableDisableUsers.do?state=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"enableDisableUsers.do"
							],
							"query": [
								{
									"key": "state",
									"value": "dolore proi",
									"description": "(Required) enable/disable"
								}
							]
						},
						"description": "This is a proxy service that is used to to enable/disable user(s) in the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/enableDisableUsers.do?state=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"enableDisableUsers.do"
									],
									"query": [
										{
											"key": "state",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/enableDisableUsers.do?state=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"enableDisableUsers.do"
									],
									"query": [
										{
											"key": "state",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"sint Duis elit\",\n  \"errorMessage\": \"nisi est esse\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/enableDisableUsers.do?state=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"enableDisableUsers.do"
									],
									"query": [
										{
											"key": "state",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"dolore proi\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/enableDisableUsers.do?state=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"enableDisableUsers.do"
									],
									"query": [
										{
											"key": "state",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "Gets the count of online users in cvp.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/getOnlineUserCount.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"getOnlineUserCount.do"
							]
						},
						"description": "This service is used to retrieve the count of online users."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getOnlineUserCount.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getOnlineUserCount.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"count\": -56427477\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getOnlineUserCount.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getOnlineUserCount.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"dolore Duis voluptate\",\n  \"errorMessage\": \"sit nisi\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getOnlineUserCount.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getOnlineUserCount.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getOnlineUserCount.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getOnlineUserCount.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "Gets user by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/getUser.do?userId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"getUser.do"
							],
							"query": [
								{
									"key": "userId",
									"value": "dolore proi",
									"description": "(Required) unique user id of the user"
								}
							]
						},
						"description": "This is a proxy service that is used to retrieve an user for a particular user ID."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getUser.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getUser.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"roles\": [\n    \"sed eiusmod laboris commodo veniam\",\n    \"reprehenderit mollit est eu irure\"\n  ],\n  \"user\": {\n    \"factoryId\": 87470201,\n    \"id\": 17991130,\n    \"lastName\": \"ad reprehenderit Lorem\",\n    \"contactNumber\": \"quis dolor laborum\",\n    \"email\": \"officia nulla qui\",\n    \"userId\": \"nulla Ut\",\n    \"userStatus\": \"consequat e\",\n    \"firstName\": \"labore proident ad incididunt\",\n    \"currentStatus\": \"laborum quis veniam ipsum\",\n    \"password\": \"voluptate minim esse\",\n    \"lastAccessed\": -16251133.915213913,\n    \"userType\": \"commodo voluptate aliquip dolor exercitation\"\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getUser.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getUser.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"irure dolor\",\n  \"errorMessage\": \"ipsum laborum\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getUser.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getUser.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getUser.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getUser.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "Gets all users information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/getUsers.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"getUsers.do"
							],
							"query": [
								{
									"key": "queryparam",
									"value": "dolore proi",
									"description": "query to be retrieved"
								},
								{
									"key": "startIndex",
									"value": "-75690638",
									"description": "(Required) startIndex of log"
								},
								{
									"key": "endIndex",
									"value": "-75690638",
									"description": "(Required) endIndex of log"
								}
							]
						},
						"description": "This is a proxy service that is used to retrieve all users' informations."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getUsers.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getUsers.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": -28638671,\n  \"users\": [\n    {\n      \"factoryId\": 28465582,\n      \"id\": -12945158,\n      \"lastName\": \"culpa ipsum dolor ut in\",\n      \"contactNumber\": \"sint sit tempor minim\",\n      \"email\": \"pariatur\",\n      \"userId\": \"Lorem adipisicing occaecat magna consequat\",\n      \"userStatus\": \"ullamco magna\",\n      \"firstName\": \"nisi non\",\n      \"currentStatus\": \"non ullamco ut laborum\",\n      \"password\": \"ipsum nostrud ut\",\n      \"lastAccessed\": -68678326.4368922,\n      \"userType\": \"ut f\"\n    },\n    {\n      \"factoryId\": 84636522,\n      \"id\": -52238576,\n      \"lastName\": \"nostrud ut\",\n      \"contactNumber\": \"minim velit\",\n      \"email\": \"fugiat\",\n      \"userId\": \"do velit consectetur\",\n      \"userStatus\": \"Excepteur sit magna occaecat no\",\n      \"firstName\": \"Duis non\",\n      \"currentStatus\": \"q\",\n      \"password\": \"Excepteur non deserunt consequat\",\n      \"lastAccessed\": -89993676.02529941,\n      \"userType\": \"Ut in officia\"\n    }\n  ],\n  \"roles\": {\n    \"string\": [\n      \"minim\",\n      \"ea aliqua\"\n    ]\n  }\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getUsers.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getUsers.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"irure dolor\",\n  \"errorMessage\": \"ipsum laborum\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getUsers.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getUsers.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/getUsers.do?queryparam=dolore proi&startIndex=-75690638&endIndex=-75690638",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"getUsers.do"
									],
									"query": [
										{
											"key": "queryparam",
											"value": "dolore proi"
										},
										{
											"key": "startIndex",
											"value": "-75690638"
										},
										{
											"key": "endIndex",
											"value": "-75690638"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To update an user in the CVP system..",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"userStatus\": \"magna dolore enim cupidatat\",\n    \"userId\": \"dolor in proident irure\",\n    \"password\": \"incididunt Ut magna tempor\",\n    \"email\": \"VTuvb05iK3b@NqicWKbtRjMWEjnxzhBMLVMegutnJA.oxh\",\n    \"firstName\": \"qui tempor reprehend\",\n    \"lastName\": \"aliquip fugiat\",\n    \"contactNumber\": \"cillum ut voluptate consequat occaecat\"\n  },\n  \"roles\": [\n    \"Ut nulla tempor consectetur\",\n    \"ullamco anim ex Ut qui\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/updateUser.do?userId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"updateUser.do"
							],
							"query": [
								{
									"key": "userId",
									"value": "dolore proi",
									"description": "(Required) Holds the id of the user."
								}
							]
						},
						"description": "This is a proxy service that updates an user in the CVP system."
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"userStatus\": \"magna dolore enim cupidatat\",\n    \"userId\": \"dolor in proident irure\",\n    \"password\": \"incididunt Ut magna tempor\",\n    \"email\": \"VTuvb05iK3b@NqicWKbtRjMWEjnxzhBMLVMegutnJA.oxh\",\n    \"firstName\": \"qui tempor reprehend\",\n    \"lastName\": \"aliquip fugiat\",\n    \"contactNumber\": \"cillum ut voluptate consequat occaecat\"\n  },\n  \"roles\": [\n    \"Ut nulla tempor consectetur\",\n    \"ullamco anim ex Ut qui\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/updateUser.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"updateUser.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"userStatus\": \"magna dolore enim cupidatat\",\n    \"userId\": \"dolor in proident irure\",\n    \"password\": \"incididunt Ut magna tempor\",\n    \"email\": \"VTuvb05iK3b@NqicWKbtRjMWEjnxzhBMLVMegutnJA.oxh\",\n    \"firstName\": \"qui tempor reprehend\",\n    \"lastName\": \"aliquip fugiat\",\n    \"contactNumber\": \"cillum ut voluptate consequat occaecat\"\n  },\n  \"roles\": [\n    \"Ut nulla tempor consectetur\",\n    \"ullamco anim ex Ut qui\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/updateUser.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"updateUser.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"id cillum pariatur in velit\",\n  \"errorMessage\": \"sunt veli\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"userStatus\": \"magna dolore enim cupidatat\",\n    \"userId\": \"dolor in proident irure\",\n    \"password\": \"incididunt Ut magna tempor\",\n    \"email\": \"VTuvb05iK3b@NqicWKbtRjMWEjnxzhBMLVMegutnJA.oxh\",\n    \"firstName\": \"qui tempor reprehend\",\n    \"lastName\": \"aliquip fugiat\",\n    \"contactNumber\": \"cillum ut voluptate consequat occaecat\"\n  },\n  \"roles\": [\n    \"Ut nulla tempor consectetur\",\n    \"ullamco anim ex Ut qui\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/updateUser.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"updateUser.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"userStatus\": \"magna dolore enim cupidatat\",\n    \"userId\": \"dolor in proident irure\",\n    \"password\": \"incididunt Ut magna tempor\",\n    \"email\": \"VTuvb05iK3b@NqicWKbtRjMWEjnxzhBMLVMegutnJA.oxh\",\n    \"firstName\": \"qui tempor reprehend\",\n    \"lastName\": \"aliquip fugiat\",\n    \"contactNumber\": \"cillum ut voluptate consequat occaecat\"\n  },\n  \"roles\": [\n    \"Ut nulla tempor consectetur\",\n    \"ullamco anim ex Ut qui\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/updateUser.do?userId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"updateUser.do"
									],
									"query": [
										{
											"key": "userId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "workflow",
			"item": [
				{
					"name": "This API is used to add logs to the task manually",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"taskId\": \"Lorem velit magna\",\n  \"message\": \"\",\n  \"source\": \"ut commodo sit sunt enim\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workflow/addWorkOrderLog.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflow",
								"addWorkOrderLog.do"
							]
						},
						"description": "Adds log message to the task"
					},
					"response": [
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"Lorem velit magna\",\n  \"message\": \"\",\n  \"source\": \"ut commodo sit sunt enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflow/addWorkOrderLog.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflow",
										"addWorkOrderLog.do"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": \"dolore in enim\"\n}"
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"Lorem velit magna\",\n  \"message\": \"\",\n  \"source\": \"ut commodo sit sunt enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflow/addWorkOrderLog.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflow",
										"addWorkOrderLog.do"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"in Ut Excepteur incididunt\",\n  \"errorMessage\": \"ut\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"Lorem velit magna\",\n  \"message\": \"\",\n  \"source\": \"ut commodo sit sunt enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflow/addWorkOrderLog.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflow",
										"addWorkOrderLog.do"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"Lorem velit magna\",\n  \"message\": \"\",\n  \"source\": \"ut commodo sit sunt enim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflow/addWorkOrderLog.do",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflow",
										"addWorkOrderLog.do"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				},
				{
					"name": "To export task logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflow/exportLogs.do?taskId=dolore proi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflow",
								"exportLogs.do"
							],
							"query": [
								{
									"key": "taskId",
									"value": "dolore proi",
									"description": "(Required) taskId"
								}
							]
						},
						"description": "This proxy service is used to export task logs."
					},
					"response": [
						{
							"name": "No response was specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflow/exportLogs.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflow",
										"exportLogs.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Description was not specified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflow/exportLogs.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflow",
										"exportLogs.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"mollit sunt\",\n  \"errorMessage\": \"consectetur velit\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflow/exportLogs.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflow",
										"exportLogs.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						},
						{
							"name": "Forbidden URL",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflow/exportLogs.do?taskId=dolore proi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflow",
										"exportLogs.do"
									],
									"query": [
										{
											"key": "taskId",
											"value": "dolore proi"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"dolore proi\""
						}
					]
				}
			]
		},
		{
			"name": "This api call is used to get CVP Information.",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/cvpInfo/getCvpInfo.do",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cvpInfo",
						"getCvpInfo.do"
					]
				}
			},
			"response": [
				{
					"name": "Description was not specified",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cvpInfo/getCvpInfo.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cvpInfo",
								"getCvpInfo.do"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"version\": \"aute culpa Ut\"\n}"
				},
				{
					"name": "Error processing request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cvpInfo/getCvpInfo.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cvpInfo",
								"getCvpInfo.do"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errorCode\": \"deserunt\",\n  \"errorMessage\": \"magna mollit id occaecat\"\n}"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cvpInfo/getCvpInfo.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cvpInfo",
								"getCvpInfo.do"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"dolore proi\""
				},
				{
					"name": "Forbidden URL",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cvpInfo/getCvpInfo.do",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cvpInfo",
								"getCvpInfo.do"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"dolore proi\""
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/cvpservice",
			"type": "string"
		}
	]
}